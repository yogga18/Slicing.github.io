%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2011.w003.n001.56B.p12.56.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Albina Kondratyeva
%%CreationDate: 14.11.2020
%%BoundingBox: 0 0 700 500
%%HiResBoundingBox: 0 0 700 500
%%CropBox: 0 0 700 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 15608 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFD3DFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD39%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FD37FFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFCBFD37FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD37FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FD39FFA9FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD3BFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFD06FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FD3BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FD27FF7FA9FD2DFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFA97F79FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFCBFD28FFA979A3FD2DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD29FF7F7979FD%2EFFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFD2AFFA379A9FD2DFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA27FA9FFAFFFCAC4A8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD06FFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD35FFA29B%94BDA2FD26FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD37FF9BBD9595949595C4CBFD6EFFA9A97FA9FD04FFC4BEBD%C49B9B949B94BDA8FD09FFA9FD1AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7E7F79%7F5579A3FFAEC4BDBEBDC4BD9B949594959BCBFFFFA8FFFFFFA87FA9FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD49FFCB7FA37F7F7379%4F79FFFFC4BEBDC4BDC4BDC49B9B95B795CAFD04FFA9A379A3A9FD5DFFA9%797F79794F734F7379FFFFC4BDBEBDBEBDBEBDC49B95949594CAFFFFFFA9%4F7355A9FD5CFFCB79A379794F794F794F79FFFFC4BEBDBEBEC4BDC4BDC4%BD9B949B9BFFFFFF7F734F73A9FD16FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7F7F7973%4F734F794F4F4FFFFFC4BDBEBDCAA8BEBDBEBDBE9B959495A2FFCFA3494F%4FFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD49FFA37F794F734F%A3A3794F79FFFFC4C4BDBEC4CBCABEBDC4BDC49BBD94C4FFFFFFA9A3CBFD%5DFF7F7F4F734F7F7FA34F4F4FFFFFC4BDBEBDCABDC4C4BEBDBEBDBD9495%A2FFCBFD5EFFCAFFA9A37F794FA3A3A379794F79FFFFC4BEBDBEC4CBC4FF%C4BEBDC4BD9B94C4FD1FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFCACA9B94A1FF797F4F734FA3FD044F7FFF%AFC4BDBEBDBEBDC4BDC4BDBEBDBD9495A1FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD41FFC495B794CBFFA37F794F7973%794F7379FFFFFFC4BEBEC4BDBEBDC4BDC4BDC4BD9B94CAFD06FF7979A3FD%1EFFA8CBFD07FFCBA8FFFFFFA9CBFD0CFFA8FFA8CBFD16FFBD948DBDFFFF%797F4F734F734F4F4FFD04FFCBCAFFCAC4BDBEBDBEBDBEBDBD9495A1FFFF%FFA9A94F4F4F7373A9FD1BFF4D5353FD07FF787EFFFFFFA253FD0CFFA253%7E7EFFA9FD15FFBD94A8FFFFA379794F734F7379FD0BFFC4BEBDC4BDC49B%9594CAFFFFFFA379A379734F734F79A9FD10FFA8FFFFFFA8FFFFFFA84D4D%A9A84D29A27E4D5378777E29787753FFCBFD044D7D7E29537E532977777E%774D53FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFA2FFA8FFA9A3%4F4F4F7349A9FFFFAFFFCACBAFFFFFFFAFFFC4BEBDBEBDBD94CAFFFFCFFF%797F797F79794F734F7379FFFFFFA8FFFFFFA8FFFFFFA8FD0CFFA8544D78%537E4D4D7EFF53787853297E53FFA84D785353784D5353784DA25378787E%4D4DA9FD1AFFCBA3A97979FFFFFFCBBEBEBDC4CBFD06FFCBBEC4C4FD06FF%A37FA37FA37F7F73734F7373A9FD15FFA8784D4D774D4D78534D77784D4D%294D774DA2CB4D7E4D7E4D782378774D4D7853784D4D22CBFD13FFCBC4CA%FD07FFCBA9FFCAC4BDBEBDBE95BDA1FD07FFCAFD07FF7F7F79FD057F7973%4F734FA3FD15FFA2A9A8FFA8A9FFFFA2A9A8CBA8A9A8FFA2FFFFA9A8CBA9%CBA9A9A8FFA8A9A9CBA8FFA8A9CBFD11FFCBC4BDBEBDC4CAFD07FFC4BEBD%C4BDC49B9B9495A2FD07FFA9A9A9FFFFFFA9A37FA379A37FA37FA37F794F%794FA9FD0DFFA8FFFFFFA8FD27FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A2BEBDBE959B949BA8FFFFFFAFCABDBDBDC4BDBD94959495949CFFFFA8FF%A9A9797F79797EFFFFFF797F79A37F7F797F797F79794F7379FFA8FFFFFF%A8FFFFFFA8FD3DFFCBBDC4BEBE95BD959B95FD04FFCBBDC4BDC4BDBD95BD%959B95BD9BFFFFFFA9A37FA379794F79FFFFA9A37F7FA9CB7FA37FA37FA3%79794F79A9FD44FFCAC4BDBE9BBD9495949B949BA8FFFFCABDBEBDBE9595%9495949B949594C4FFFFFD047F4F734F7373FFFFFF797F7F7F79A9A97F79%7F7F7F4F734FCBFD43FFC4BEBDC49B9B949B959B959B95FFFFFFBEBEBDC4%959595BD959594BD95959BFFA97F7F794F7979794F79FFFFCBA37FA37F7F%7FA3A9FF79A37F794F79A9FD0AFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A9A8FFA8FFA8CBA8FFA8FFA8A9A8FFA8FFA8FFA8FFA8FF%A8FFA8FFFFFFA8FFFFFFBDBEBDBD9495949B9B9B9495949BCAFFA2BEBDBE%9595949594959B9B9495949BA9A379794F79797F794F73FFCFFF797F797F%797F79A37F7F797F794F4FCBFFFFA8FFFFFFA8FD0CFFA8CBA8FFA8FFFFCB%A8CBA8FFA9FFA8FFA8FFA9FFA8FFA8CBA9CBA8FFFFFFA8FFA8A9A8FFA8A9%A8FD07FFC4BEBEBD95BD95C4A2C49B9B95BD95FFFFCABDC4BDBD959B95BD%9BC49BBE95959BFF7FA34F7379A37F794F79FFFFFFA379A37FA37FA37F7F%7FA37F794F79A9FD12FFCBFFFFFFCBFFFFFFA8FFFFFFA9FFFFFFA9FFA8FF%A8FFFFFFA9FFFFFFA8FFCBFFCBFFFFFFA9FFFFFFCBFD05FFCABEBDBD9495%94BE9B9B9BBE9495949BCBFFC4BEBDBD949B949B9BC4949B9B95949BA9A3%79734F7979794F73A3FFFFFF7FA9A9A9797F797F7F7F79A3794F4FFFFFFF%A9FD10FFA8FFA8A9A8CBA8CBA8FFA9A9A8FFFFA9A8A9A9A9A8FFA8CBA8FF%A8FFA8CBA8A9A8FFA8CBA8FD08FFCBBDC4959B959B9BC49CC4959B959595%FFFFC4BDC49B9594BE9B9B9BBDA29B95959BFF7FA34F734F794F73A3FD04%FFCBCBFFFFCB7F7F79A37FA37F794F73A9FFFFFFA8FD08FFA8FFFFFFA8FF%A9A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CBA8FFA8CBA8FFA8CBA8FFA8A9%A8FFA8FFA8FFA8CBA8FFFFFFA8FFFFFFA2BE9B95949595A29BC49B959495%9495A8FFC4BDBDBD94959B9B94959B9B949594C4FF7F79734F4F4F7FA9FF%AFFFCAC4BDBEC4FFFFFFA37F797F797F4F4F79FFA8FFA8FFA8FFFFFFA8FD%0EFFA9FD13FFCBFD14FFCBBDC495BD959B9BC49B9B94BD9BBD95FFFFC4BD%C49B9B95BEA29B95C4959B95BDCAFF7FA3737379CBFD04FFC4BEBDC4BEBE%9BCAFFFFCBA97F7F79A3A9FD15FFA8A8FFFD07A8FFA8FFFD05A8A9A8A8A8%FFA8A8A8A9A8A9A8A9A8A8A2FFA8FD09FFC4BEBD95949B94959495949BA8%FFFFCBCBFFC4BEBDBD949594BE9BA29B9594959BFFFF7F797379FFFFFFCB%C4BDBEBDBEBDBD959594CBFD04FFA3A9A9FD1CFFA9FD19FFA9FD0CFFCBBD%C4959B95BD959595CAFD06FFA8C4BDC4959B959B94BE9C9B95BD95A27EFF%A37F79FFFFFFC4C4BDBEBDC4BD9B949B9595A8FD14FFA8FFFFFFA8FFFFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8CBA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FF%A8A9A8CBA8A9A8FFA8FFA9FFFFFFA8FFCABD9B9B94959495A1FD07FF8459%9BBEBD9B949594959495949594A284847DA87ECBFFFFBDBDBDBEBDBD9495%9495949594CAFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0CFFA8FFA8A9A8%CBFFFFA9FFA8FFA8FFA8FFA8CBA8FFA8FFA8FFA8A9A8FFFFA9A8FFA8FFA8%FFA8CBFD08FFC4C4959594C4CBFD07FF7D52009BBEC49BBD959B95BD95BD%9BA984A9A8AF84A8A8FFC4BEBDC4BDBD95BD959B9BBD959BCAFD20FFA8FD%0FFFCBFFFFFFCBFD07FFCBFFFFFFA8FFFFFFCBFD07FFCABE9BCAFD06FFA8%7D2827F8537EBEBD9B949B9495949594A884A984A87EA98484A1BEBDBE9B%9B9495949B9BC49B9594CAFFFFFD05A9FD4EFF7E7E532728A8A9A9A2C4BD%9594BD959B94A284A984A984A884A9A8C4BDC4BD9B94BD95C49BC495C495%9BCAFFA979797F4FA3FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA9FFFFFFA8A87D7E7DA97EA97EA97EA97EA2959B9BBE%94957DA984847E8484A884A8BDBEBDBD94A2A1C49BA29B9B9B9594CBFFA9%49734F4F73FFFFFFA8FFFFFFA8FFFFFFA8FD3EFFA8A87EA97EA9A9A9A8A9%A8A97EA884A984A9A2BE9BA98484A2C4A2A984AFA8C4BDC4959BA2BE9BC4%9BC49BC494BDFFFFFFA94F7373FD07FFA9FD42FF7D7E7EA97EA97EA97EA9%7EA97E847EA984A984A97EA27EA8A1BEBDBE9B8484A9BDBE9B9B94A295C4%9BA29BC495959BFD04FFA34FCBFD04FFA8FFA8FD42FF7EA2A9A9A2A9A8A9%A2A984A87EA984A884A984A984A984A2BDC4BDBD94B7A1AFA8C4BDC4959B%A29B9BC4A2BE95959BFD0BFFA9FD0AFFA8FFFFFFA8FD04FFA95378537853%785378537853785378537853A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFF7E7DA97EA97EA97EA87E847EA87E847E84%7EA984A884C4BDBE959B949571A284A89BBE9B9594C49BA29B9B94959BFF%FFFFA8FFFFFFCFFFFFFFA8FFFFFFA8FFFFFFA8FD0CFF2929234D2329224D%2329224D2329224D232929FD1FFF7D597EA9A9A9A8A97EA9A8A97EA984A8%7EA9A8A984A9BDC495BD949B78797FAFA8C4BDC495BD9BC49BBD95BDA1A8%A8FD1EFFA84D2329294D294D234D234D294D294D224D2329A8FD0FFFA9FD%0EFF7E2853537E7EA97EA97EA87EA87EA87EA984A98485A1BE9B95949C79%4F497FA8A8BDBEBD959495949594A2A8A9A2A87EA9FD04FFA8FD17FFCB29%4D235377A9A2FD047EA2A27EA84D234D29CBFD0EFFA9FD0FFFA953285352%7E7EA9A9A984A97EA984A9A8A984A984A2BDBD9B794F794F7379AFA8C4BD%C4959B94BD9BA8A8A97FA37F7F79A3A9FD14FFA8FFFFFFA8FFA829224D23%534D544D4D294D295329532929224DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87D28522E5359A97EA97EA97E%A87EA984A87EA97EA378794F734F7372A284A8BDBE9B9B949BA1A9A8A879%7F797FFD04797EFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0AFF29292329%22292329224D2329224D232923294DFD22FFA959522E5353A8A8A9A8A984%A9A8A984A9A8A97F794F794F799CBDA1AFA8C4BDC4959BA2FFA8CB7FA37F%A3797973794F797FFD19FFA8537E7778537E7778537E7778537E777853A9%FD20FFA8FFA8FF845327522E7D7EA984A97EA984A884A97F7F4F734F9C95%B795A884A8BDBE9B95A1A9A8A9A87F79A379734F734F734F7378A8A8FD48%FFA8FD06FF842E522E5959A9A9A984A984A984A37F79729C949595A884A8%84CABEBE9BAFA8A9A8CB7FA37F794F734F797F794FCBA8A884FD0CFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FF%A9FFA8FFFFFF53522852527E7EA97EA98484A1BE959594959BA87E8484A8%84A8A1A8A8A9A8A87E7F797F4F734F7F79794F79CACBA2A27DA8FFFFA8FF%FFFFA8FD3AFFA9FD07FFA8FD05FFA87D2E53527D7EA9A8A984AFA2BD959C%A2A984A9A8A8A8AFA8AFA8CBA8A9A8A3797F797979A379794FA3CACB7973%A2FFA2A8FD3FFFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFFFA852522E5253%A884A984A984A87E8484A87EA884A87EA9A8A8A8A9A8A9797F79794F794F%4F78CBA8794F79A2CACACB7DFD3EFFCBFD05FFA9FD05FFA8FD07FF7D532E%52527E84A984A9848484A984A884A884A8A8A9A8A9A8CBA8A3797F4F734F%79A2CBA2794FA3A8FFCACBA27DFD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFCBFFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA87D%285228597DA884A984847EA87E847EA9A8A884A9A8A8A8A9A8A878794FA3%A8A94F4F78CBFD04CA7D522EFFFFFFA8FFFFFFA8FD38FFCBFD14FFA85353%2E5353A8A8AF84A984A884AFA8A9A8AFA8A9A8CBA8CBA8FFA8CBC3C47379%A2FFCACBCAA8532E287DFD1BFFA8FD13FFA8FD0DFFA9FFA8FFFFFFA8FFA9%FD11FF7D5328522E7D84A984A984A884A9A8A8A8A9A8A8A8A9A8A8A8CB78%9694A2A8CAA8CBA27D27280553A8FD1CFFA8FD1FFFA8FD07FFA8FD13FFA8%8452522E597DA984A9A8A9A8A9A8A9A8A9A8A9A8FFA8A34F7378C4A8FFCA%CA7D5327272EA8FD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%CBFFA8FFFFFFA8FFA8FFA9FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8A8532E2852527E84A984A884A9A8A8A8A9A8A87E794979A2CAA8CBA27E%2E2E282E7DFD05FFA8FFFFFFA8FD3AFFA8FD05FFA9FD11FFA8FFFFFFA87D%2E52527D84AFA8AFA8A9A8FFA8A9797373A9A8FFCACB7E7D2727287DA8FD%05FFA8FD3CFFA8FFA8FD05FFA8FD0FFFA8FFA8FFA8FFFFFFA8A82E2E2853%59A8A8A9A8A8A27F4F7378A9A8CBA8A85352F8272EA8FD06FFA8FFA8FD3A%FFA9FFCBFD17FFA8FD09FF7D522E53537EA8AFA8A9797FA8FFA8FFA87E52%5327287DFD14FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FD05%FFA85928522E597DA9A8A9A8A9A8A87D532728287DA8FD05FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD32FFA9FD28FFA852522E5959A8A8FFA8A853532E27%52FD72FF7D522852525952592E52285984FD74FFA87D2E522E522E525284%FD19FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFA853532E537DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD8BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD6C%FFA9FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD68FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FD04FFCBFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD68FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD68FFA8FFCB%FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FD64FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FD04FFCBFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFD66%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD68FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD68FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA9FFFFFFA9FFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-11-14T17:51:18+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-11-14T17:51:18+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-11-14T17:51:18+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgECbAJsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABACbAAAAAEA&#xA;AQJsAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CAC4AQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;AQAAAAAAAAABAAIDBAUGBwgJCgsQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQy&#xA;kaEHFbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW&#xA;01UoGvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4&#xA;KTlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+hEAAgIBAgMFBQQFBgQIAwNtAQACEQMEIRIxQQVR&#xA;E2EiBnGBkTKhsfAUwdHhI0IVUmJy8TMkNEOCFpJTJaJjssIHc9I14kSDF1STCAkKGBkmNkUaJ2R0&#xA;VTfyo7PDKCnT4/OElKS0xNTk9GV1hZWltcXV5fVGVmZ2hpamtsbW5vZHV2d3h5ent8fX5/c4SFho&#xA;eIiYqLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/9oADAMBAAIRAxEAPwD0ZkkuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KouwHxOfYDEqjMCHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHdXLcjGhoB9&#xA;ojClCYq7FXYq7FXYq2qlmCjuaYq1irsVdirsVdirsVdirsVdirsVdiqYWcfGGp6tv9GAoV8Vdirs&#xA;VdirsVdirsVdirsVdirsVdirsVSqQESMD1qa4UrcVdirsVdirsVRlnAa+qw/1R/HEqg8VdirsVdi&#xA;rsVdirsVdirsVdiqtbQGV9/sDqf4YqmOBDsVdirsVdirsVdirsVdiqQp5vsW8zDQBE5nbmFmBBSs&#xA;ac299umZ57PkMHjXt3e80y4drT7MBi7FXYq7FVGe1SU8geLePjiqh9Qf+cYbS76g/wDOMbV31B/5&#xA;xjatiwbu4+7G1VY7OJDU/Effp92C0K+KpRhS7FXYq7FXYq7FXYq7FXYqiIbN33f4V/HG1RyIqKFU&#xA;UAwIbxV2KuxV2KuxV2KuxV2KuxV5b5C0u8/x9c3F0rD6pZOh5dp3mAb6eIzqe1M0fygEf4pj5U2k&#xA;+n4vTri6traIzXMqQRDYySMEUV92oM5ZhGBkaAsr0kSRFeNg6MKqymoIPcEYoII2LeKHYq7FXYq7&#xA;FXYq7FXYq7FVH6nB/KfvONpd9Tg/lP3nG1d9Tg/lP3nG1d9Tg/lP3nG1d9Tg/lP3nG1d9Tg/lP3n&#xA;G1d9Tg/lP3nG1cLO3/l/E42hUSKNPsqB74quxV2KuxV2KuxV2KuxV2KuxVBarrWm6XD6t5MI6/Yj&#xA;G7t/qr1y/Bp55TUQljMP5o6ILjjfIbK3Y0juJHUj/ZLtT6K5spdiZa9HqPckRJ5MjvtWt4tFk1a0&#xA;KXMYh9WB1NVcEVU1HbNVLHKMuGWxDdpsHiZYwO1l4t5o/Smvyie6vXkkT+7hc0hX/VVQAvzpl0aD&#xA;3Wn0uPCKgK+9LdB83eZ/KlwI4XP1Ymr2c1WhYV3K7/CfdT88MoiTVq9Bizj1D1d/V695U/MrQNf4&#xA;QM/1LUW2+qzEUY/8VvsG+Wx9sx5YyHldZ2Vlw7/VHvH6WW5B1iD1fVrTSrJ7u5J4LQKi05MxNAFB&#xA;Iy7T4JZZcMUozKUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpF5v8A&#xA;MDaPpoaGn1u4JSCu4Wn2np7frzO7P0vjT3+kc0gPD/MnmydLl1Dm5vW3llkJIUnoPc/qzuNHoQY9&#xA;0XIx4r3LE7yS+nK3F0Xb1QTHI4IUgHfh2oD4ZtsYjHaPRyQANg968r/+Sftv+YaT/k82edds/wCO&#xA;T94+4Lov8aj72IWttJdXUNtFT1J3WNK7Dk5Civ35gl7XJkEImR5AWs1DTykktnew/HGSskbdiPD+&#xA;BGEFceSM4iUTYLFtY0b6oPXgJMFfiB3Kk9N/DJAs3rH5R+b7rVrCbS7+Qy3diFaKZjVnhO3xHuUO&#xA;1fcZRljW7yPbWijikJx2jL72J/nhrN3Hr8WnJURG2RyancM7VA8K8d87L2a08TiM+vE63BAc2ffl&#xA;RfXl95OgurpSHeWXgaEAqGpVeRaoqDmg7dxRhqTGPcGnJEA0zDNO1uxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KpHr/nTy/oUPq3twGo/CRIaO6HvyUHb9eSESXYaXszNn+kUO87&#xA;X7mL/mHdwXkekXVu/O3uIWlhfcVSQIymh8Qc3vYvKXwcOUDCRieYNPG9BtLXUtSmkvpo1IV5xDKZ&#xA;FWVgC5BMasQqgFmpueg3OdpqskscAIg9BtW3z/HUuZI0NlfzXrNjqC2MFmeSWqEM4j9FORVEoiVN&#xA;F/d1+nIaHTyx8Rl/F5338z8VhEjm9n0G1ntfyktop14SfVC/E9eMjl1/4VhnB9rTEtXMjv8Au2Za&#xA;I/4VH3sR0i4it9VsriU8YoZ4pJGpWiq4JNB7DMQ8nsdVAzxSiOZiR9iaaidLnsG9TUYp7uD/AHkZ&#xA;I5wzRk/3TlkUfDX4TX26dIi3DweLGe0CIy+rePPvFH5/NjV8oaynU7gxt+o5MOzRn5I/8pXd/wDM&#xA;BJ/yeiyObk6Tt/8AuB/WH3F7JeaXpl6VN7aQ3JTZDNGklK+HIGmQx55w+mRj7jTyIJCtBBBBEsME&#xA;axQoKJGgCqo8ABsMhKRkbJsqvyKHYq7FXYq7FXYq7FXmWufm3rFt57u/KWkaNb3VxaekOV3fR2bT&#xA;NKiycYVkX4jR+1T3pmwx6KJxCcpEX3C2wQ2tk0v5l+R4NfHl+fV4Y9Y5rC1tSQqJWoBGZePp8qml&#xA;C1cxxpMhjxAeljwnml+q/m75Mh/SdlpupQ3etWEFxKLUiZYi9ujMwaYRmOg470OWQ0WQ0SKia+1I&#xA;gVlt+cfkeGDTotY1WCz1S9t4Z3gRZ3iUzIHFJfTChfi2LEYnQ5CTwiwD5LwFM/KvnNtb1HzJazWy&#xA;20egXrWYlDl/UVATzIoOPTpvlebBwCJv6haDGkAfzp/K8K7fp+GkaCRvgmJ4k0oo4VZv8kb+2T/I&#xA;Zv5qeAonUfzY/LzTmtlu9aiQ3UMdxDxSWT91MAY3f00bgDUfbpgjo8srqPJHAUr83/nL5b0a6TTt&#xA;Omi1LV1vILS5tAZEEazEguJOBRitPsg5Zg0M5iztGrSIEr7T83vLtrY3t35kuoNOWDU7rTrb0PXu&#xA;Q4tghJPCLkG/eCopglopkgQF+kHu5rwHozPSNX03WNOg1LTLhbqxuQWgnStGAJU9aHYgg1zEnAxN&#xA;HYsSKReRQ7FXYq7FXinmH8q/MF15ztInka40a7kHqXS1/dRoOUgfwZqGh7nLeLZ7TD23i/LmQ2yR&#xA;HL7q8mafmFo9w1tYy2cBa1tEaNljFeC0XjsP2aLm17HzRiZRJomnjuIk2eZfOxV1ZlIIZahh3HY1&#xA;z0Ww7B6N+VX5bW/mAHWNTY/o63l4R2oFPXZQCeTV+wKgGnXOc7c7YOn/AHeP6yOfd+1ozZeHYPbd&#xA;Ti0+azaxuplginXgF5Khp4LXOEBN216aU4yE4CzHySm48heX5LX0Yo2hlHScMWavuGNDkuMufDtr&#xA;OJWTY7mE635T1XSSXdPWtR0uIxVR/rDqv6stjIF6PR9p4s+wNS7j+N0gvP8AeSf/AIxt/wAROSdg&#xA;nP5J6JqSandavJA8di1s0EUrggOzSI3wV6gemakZDKdqee7ezwMBAH1cV/Yf1s885+Zp9Gt4o7VF&#xA;a7ueXB3BKoFpvQEVO+2+ZXZ2iGYky+kPMAPDdeuvOY1E6s+pXFxMp5LcROyNGOtAikBV/wBXbO50&#xA;sNNweGIRA7j1+LlwlEimZeT/AM8XXhaeZo+Y2A1GFdx7yxjr80+7NN2h7ND6sB/zT+g/r+bCeDue&#xA;t6fqNhqNql3Y3CXNtJ9iWNgyn227+2cllwzxy4ZgguMQRzRGVodirsVdirsVeXfmT+VXmLznqbM1&#xA;/p1vp4aP6tIbQtexIoHNfWBBYFqmlab5sdLrIYhyN+/ZsjMBA3X5G6pNrFxTWo/0HdavHrU8bQsb&#xA;v1k51UScuND6rb/Tkx2hER+n1CPD5J41fTvyk826ZpWteX7PW7RvL2rfW29KS2b6wHuI+CVkDfsM&#xA;FJ8fauwlrYSlGRieKNde5HGOaT6x/wA4/eZNRtorY+Yk+rRWdrbx27rOY43to0RuCiRU4uVL1Kk1&#xA;PTvlsO0oRN8O9n7UjIGbeU/IOs6DrXmGc6hDPpet8pltxGVljuGAFS1TVQOQzDzamM4xFbxYmVsU&#xA;svyG1C3s9PgfULZ2s9J1HTZG9NvjlvmuDHL/AM8/rC++2ZMu0QSTR3lE/Kv1MvEQt9/zj3qsk9tN&#xA;Bq1u4+o2tne29wk/pM1qiIGURSR8lPpg8W2rk49pxo2DzJ6dV8RHXn5H64dQvfqetW8ek3upQ6s9&#xA;o1uQ4miZjwVwxogDtx+jIR7QjQuJ4hGua8bd9+SXmGe2mt4NfW3huNXvdSnt1EwieO8WJVD+m8TF&#xA;4vSNPipv23qI6+INmP8ACB8l4wzn8tvKNz5R8o2uhXFwl1LbvKxmjBVSJJGcUB3/AGsw9VnGWZkB&#xA;TCRssnzHYuxV2KoLVNY07TIfVvJhHX7CdXb/AFVG5wgEuTp9LkzGoC/uYNqn5pTQTCWKKKG0U/Zm&#xA;q0j/APAnb6ActGN6HF2BAR9cjxeXJlHlHzjpnme0lms1eOW3KrcQv1UsCVII6g0OVyhTo9doZaeV&#xA;HcHkV2peVvKJtrqS6sLW3SYE3NwqJExrtUuACev05l4+0M8SKnLblvbjQE5kRjZLEx5pstE0qHRf&#xA;LcZW2tlKrdSipJYlmZVPcsa1b7sGoyyzZDknzL0Ol7EJPFmPwH6T+r5sN1bXkSV5buZp7ptypPJz&#xA;869BkQHoccIwFRFBGeUPzQ1m31W0sbnjJpk0qxFGqzxq5Cgq5P7NenTIzxinVdo9mY8kZTAqYF+9&#xA;7cQCCCKg9RmO8cw7XIvImmXRlubZZro7m0iqy/7KOojA9j92Z2m0mXLy2HeXPHaeo4OHiNfb8+aa&#xA;6F5w0HVpfqltMIrxVJ+pPRZOK9wASCPljqez8uEcRHp7+jgkHmx38z/7/T/9WT9a5sexeUvgoYUY&#xA;pREJSjCJiVWSh4kjqAembriF11Sk2p+XLK8rJGPQnO/NR8JP+Uv9MzMOrlDY7hthlISjRde8weUN&#xA;Y9S1lMZRgZoK1hmTwI6EEdD1HzzL1Glw6vHUh7j1DkECYfSuh6va6xpFpqlrX0LuMSKp6qTsyn3V&#xA;qg55tqdPLDkljlziXBlGjSOyhi7FXYq7FVNrm3RiryqrCooxAOwDHr4A40lpby0ZuKzRsxrRQwJ2&#xA;67A+2GlaW8tGNBPGTvtyFduvfGld9ds+HP10K1C1DA7noNsaVy31k3SeM70+0N+nTx6jGld9ctA5&#xA;QzJzAJI5D9nZvu740rje2QrWePbr8a/1xpWzdWo41mQcgGWrAVB6EfPBSrfr1jx5fWIuJ6HmtP1+&#xA;2GlcL+xLBRcRlmPEDmtSRXbr7Y0VVUkjkXlGwda0qpBFR8sCG2ZVUsxAUCpJ2AAxSBbB/MH5iJGJ&#xA;ItLACrUNeSfZHuin9bfdlscfe9Ho+w+Usv8Apf1/seZan5nuby6K23O8vJTT1WqxJ/yR1OXCL0UY&#xA;RxxoVGIY9frfLcML0Os/UiQEGnsPDJMoSEhYNvUPyI/6Xn/Rr/zOynN0ec9ov4P87/eozz1rkl5q&#xA;T2MbEWto3EqOjSjZifl0GCEaDmdjaMY8fGfql9zzfV9ck9Rre0biq7PKOpPgv9cuAdyk8UFxO5EU&#xA;byv1YKCx+ZphRKQHM0r6R/x1bL/jPF/xMYDyYZvol7i9q8/ebbmymfT7SX0FiTndzj7QBHLiD2+H&#xA;fNj2XoIzHHIXfIPncRbyGXV9U1ZphYVgt03luWDM/wAVf5A7CvsPpzro6fHirj3Pd/a5QxiPNMfy&#xA;jilh/Ma2il/vYxcpJvX4ljYHf55j9vSB0ZI5en7wyzfQ9J/M/wDv9P8A9WT9a5zfYvKXwcMMSt9S&#xA;nihS1k/e2KzLO9q32WYbHcfEKjbY5tp4QTxDaVVaVW5g0+eG6vbaQW/GYCKwc1f03rurbV4ntTIw&#xA;lOJEZC9vq81Yd5xtkNvBc9HV/TJ8QwLD7uObjs+e5i5GA9HsP5NknyDY+0k9P+RzZx/tD/jcvcPu&#xA;as/1M2zSNLsVdirsVSe7ZTdyH6hLK8bArJ+8KNUAHiBtWn6vHJBKy3lhCxPHpsiqwJU0ei+oQp7E&#xA;0ofDCfeqnEtmsscT2EgkcSOOTNy+EVoAadaUp4YqrW/pvSN7B4lILKDzBLIKhelN+bd8VWQMgnjC&#xA;aZKg5F2Zi5FVQuDvty5bfF4/PH4quBiZbh206Quxo4XmOYkY8qVC/P8Apj8VWA27Ii/ouWkdeIIc&#xA;UK0O1R3x+KqvLnLHCbGag4oZHaQrxJNRXvTkevb7sCqKpA4UyaVIlCFJ5PQA1JPQbCpw/FVSCK2u&#xA;Zxy0+RC5q0zGQDYMa1NP8/oxKpxFFHDGI414oK0HzNcghIPPd3Lb+XpRGaGd1iYj+U1J+/jTJwG7&#xA;tuxsYlqBfQW8H8xXkkl2bYGkUVPh7FiK1/GmZIe0CY6DaMtirW9RNdK/qMoHOgEgRAxBEYZk+144&#xA;uu1M/Vvyj+z5+5K/MN2lxfBUKt6K+mzruGapLEHv1whydLAxj73ov5Ef9Lz/AKNf+Z2U5ujovaL+&#xA;D/O/3qS67K6PqEoPxgzMG71qd8kHf4dscfcGGabbQzyyPOSLe3jM0wXZiAQAo/1mYDLGWWZA25nZ&#xA;M7C9gkMCW0bWltbE3WoFWJ5+mRwHImvgAPE4uNkxkXZ4idooDSBJc69ZBF/eTXUXFF8WkFAPvwHk&#xA;35qjil5RP3M1/NwkX+rU2/3n/wCIxZ1PYP0Q/wA79LwWH6gwHQdWvbflZ2kD3E8xP1eONVYl3ABH&#xA;Eo7N9kfZI/HN/qsEZeqRoDn+LcqUQXrP5U/lvqWj3j67raiO9dCttbE8nT1PtvIR+0RtSvc1zk+3&#xA;e2IZo+Fi+nqfd0DjZsoOwTrzhceWb6/to7u+cfV+SyLbpzpyI6v0FOPQAnNPo9XLDE0LtysHZefJ&#xA;HiAoeeyB1DyJDPbC80C5F1CR/dMwLEj+VhQV9jTNhp+1t6yCvNw8mOUJcMhRYjPBPbytDPG0UqGj&#xA;I4IIPyObmMhIWDYYJB5v/wCOXH/xnX/iD5n9n/Wfd+pvwc3sH5TWl1aeQ7BLiJo5HMsqowoxR5GZ&#xA;TQ/zDcZx/b2SM9XIxN8h9jVmNyZZDM8jENGUA7nNO1KuKuxV2KpZcs4vG/3ILGhH9wafDQCpJ6jx&#xA;yQSpJb3MhPp6mrtKeUYFD9nwofbG/JV0Jl/vTqaSUTjQ8QodjVSRX2pQ4/BVlHljCR6pGWHL1XqC&#xA;SPtGnxbAV+jD8FaLTFyBq8dZABEo4Hf+OPwVUd3VpJjqSek3wIAVIDfD/L32P34Pgqikc6kgavHU&#xA;UG5XZe3U74fgqIZnEXL9JqFkkb0X+A1DEKijx4nbB8FQ6y3P1r49Wh9JUZSoZQ3q8j1U12Hz7Yfg&#xA;qYWV1CkUcEt5FPcGvxBlBarGlBXt0yJCozAhjH5hgnQAQK0nQn22YZPHzdz2Ef3/APmn9DwXW/8A&#xA;jqT/ADX/AIiMyQ9gEVoNh5l1ctpmkrNLG/8AeohKxqD3duij54kgc3G1OTDi9c6D1Pyt+T2k2Krc&#xA;a2w1C6p/cCogQ/gX+nb2yiWUnk85rO25z2x+kfb+xPktPJnkiO6vEK2CXnHnDzZy5i5EemhLN+2a&#xA;02yNmTq9TrcmUDxDfC8s1uZZ7W8nSoWUO6g9aNvvl4e7xf3cfcGH2d3LazerGFaoKujjkrKeqsPA&#xA;5NnOAkKKMvLywFkYbBHj+sOJLlXNePH7Mat3WpLfd4YtcMcuK5dOX60+/LzTZoNVg1ye0a4tbRiY&#xA;4wwR3ehAZA2zcPcjfvkZiw6XtztKOOPhRPqlz8h+1PPO+n3Xma+uv0RGZ/rr28aihVo2AQMJlPxR&#xA;04k/EOgqM6DsjWY8UBxGuDiv7XmsMxdsx0rRvKXkLTY6Ir6g6UkuOPKeZgPi41+wte1afTmm13aO&#xA;XVSuR9PQdA5en02XUyqPL7Ax7XvOupairorfVLLvGhoSB/O+39MxIwAem0fZOLDufVLvP6Awa/8A&#xA;MUUdY7UCV+hkP2R8vHLAHao38u9d1ZPOVgguX9K6k9OeKp4MrKeqjbbqMGQCnW9q4oywSJG45PcN&#xA;W0LTNVi4XkIZh9iUbOvyb+GRwameI3EvEJVp35f+XrS4S4kiN5LEeUJuKMqH+YIAFr7n6Mys3aua&#xA;YoHhB50niLJM1rF2KuxV2KuxVDvp1k8rStEPUbcvuDWlOxw2lbBpVhAYzHFRovsNUkjanjjZVcdO&#xA;sSgQwrxBBA36itP+JHGyrS6bYqxZYgCeQNK/t/a298bKubTLFn5mIB+IXkCQaKKAbHsMbKtDS7Dh&#xA;w9Eca8qVPWgHj7Y2VXDTrMOj+nVot4ySx406UBONq46dZEofRFYv7vrtvy2+nfGyrX6MsS7uYQWk&#xA;JLkkmpJr442VdHptlGwdY/jC8A5JJpSnWvhjaonAhTuba3uoHguI1lhcUdGFQe+ILPHklCXFE0Qw&#xA;a6/J3y/c6w19JcTi1YhmswQBsKU9T7XH8ffLfFNO5Hb2Xgqhxd/7GX29to+h6dwhSGwsIBVjsiD3&#xA;Zj1J8Tvle5dPlzSmeKRssQ8x/mFfsHtfLdsslxx5CedlRuPTlHC5Dkf5TD6Dl0cB6tBl3PGx5D8+&#xA;ecdQe7853zWdgzb2EEnOWVR2kkHQf5I6dqdMtGI+4MGaan5eeDTHt7IGSNIfTjQmr0VaAe/TJGFP&#xA;W9ndtY5RGPJ6ZDr0P6mCQWF5O7LFEzFPtbUp7EnA9DxjvTXyhpC6hrCrOnK3twZJlYbEjZVP04uq&#xA;7b1pwYDwmpS2H6XpRniipFEvJhssadAB+rA+e2SbK4W7SMk5Jgu46+ncQsVkUHty7jxBqPbAQ2xL&#xA;GtW1S4uppb29lMrKvxSEAfCo/lFAPoyIFPpek04w4xAdPvYtLb69q8X1iGFjZ8iqqrKFFP5qkdPE&#xA;5NnPUQiaJ3Xfou20+0N5MovXGyjlxt6+x2aWnfj8PvhafGM5cI9P3/s+KZ+W7aG3/MuzggXhFHd0&#xA;RRU0HEnvkJ/S4+qmZaQk8+F6Z+YH5h/4UubKD6t631pWcuQSKKQCB8S77++bDsrsn81GRuuF42GM&#xA;yQXk/wDNUeYvMzaSlnwgZZGhmFSQI96sa9D8hl3aHYf5fB4nFvtfxZTxGIt6DnPtLsVdirsVdiqT&#xA;6z5x8qaJOlvq+r2ljcOvNYZ5kRyvTlxJrTLYYJzFxBKQCUB/ytD8uv8AqY9P/wCkhP65P8pl/mn5&#xA;J4S7/laH5df9THp//SQn9cfymX+afkvCXf8AK0Py6/6mPT/+khP64/lMv80/JeEq1n+YnkS9uo7W&#xA;11+wmuJmCRRLPHyZj0A36nBLS5QLMSvCWQ5QxdirsVdirsVdirsVQWtakNM0i81AoZPqsTyiMbci&#xA;oqBX54QLKk088lmutUMd3qFx9ZlI5xBdoY+Q/wB1J0H+sat75sceIRCKXrFGpDUBdV4+oacqDxOW&#xA;MSsa6qSsQ5kdWOyj6ciSwKnEyNJzkJk49XOyL8sgwKMHpyJ2dG7HcHAURmYm4mik0sdpps8/1dQj&#xA;3JDyKp3NBQVPbIE077T6XUdocMshqEdr7/x3sf1HzUsJKwP6knghog+Z74Kekw9k6eEOEQB8zufx&#xA;7mTeUdSvdR04z3KiMxuYwirQGiqwbff9rDKBHMPH9qaXHhzcOM3GvfXkxjXTTSp/9j/xMZEPoKF0&#xA;+Nns9IAjMoD3ZZQnqbUTqpKr1/mNPHC4OU1Ke9fT5d6tqWtWcPOM0uZWHF41bkpp0EswpyH+RGAu&#xA;LDFp5HfkPxyH6Tuyr8qfKWp3GqnzPqKtGg5G19QUaR5AQ0gB/ZCkgfh0yrLPo67tnWQEPBh8fKuj&#xA;0XzR5W0rzJpj2N/GCaEwXAA9SJz+0h/WO+W6LXZNNPjgfeOhebhMxNhL/IvkTTfKlgUiIn1CYD61&#xA;eEULf5Cjfig8O/fL+0+1J6qdnaA5D8dU5MhkWQSi5dyq/BH/ADV3OaxrXwwrEpA3J6k4qqYq7FXY&#xA;q+Ovzud3/NLXuTFqSRKKmtAII6DOq7P/ALmP46uTDkgNG8reW9RtkmufMMOmMY4SY5lEhMjvIsoo&#xA;GQqI1RDuN+XWlSJ5M04naNpJK1PLPlcywI3mRFV2pcP9XrwHpSPVf3vx/HGE3p9oHD4s/wCb9q2V&#xA;eLyl5Qd7MN5rjjW6Lhma2/uuKlk9QCbblTj7NT9n4sic2Tf0cvP9iLPcxI1SQ8W3U/Cw9j12zKZv&#xA;vWwZmsbdmJZmiQsx3JJUbnOKlzLiK+BDsVU53lSnppyr1xVehYqCwoT1GKt4q7FUv8waWdW0O/0w&#xA;P6TXkEkKyUqFLqQCR88INFSLD54TVPNnk++/R+rW7qg6Qy7qy13aNxsw9wcy4ZKaBIxZro3mXSNZ&#xA;iCxOFmP2rdzRq+3j0y8TBZ8QKYyWxp8PxAfZj+yo+fjiQxK6O1rQzHkR0QbKPowMCiRtkSwLBfNd&#xA;06xzfvVjEkhV3Y0+EV2Hc+G2ZOHs/NknQHP5PeaPX4IaeIB5Abdb/HXkwyTUFj2tR8X+/nA5f7Fd&#xA;wv686rQ9h48Xqn6pfY4Op7QyZdvpj3D9Jej/AJYrKNCuDLXm907fF1NY49zmj9oMkZZxwkGo1t7y&#xA;6DWwImLFbfrSnXf+OVP/ALH/AImM0YfRilOjaf5g1SNrKxMhtC372rFYVP8AlHp9AwkuJqtRhw+q&#xA;dcX2sutfK+iaDEkt6o1C+b7KOB6Y+Smv3muX6bTSzHbYDq85q+18mXaPpj9qY2nne80cR/VFraE8&#xA;Xspn5Rrvt6LGjJX+XdR2GZ8exRIm5fY6fh7mZ6H560rW5FtLRxDqHHk9pIRzAHUr2Yf50zWavs3L&#xA;gHERcO/ogxLIYInSpdyzHr4ZgMVXFXYq7FXYq7FXm/nb8ifKnmvXJNanuLqyvJwouRbmPhIyKFV+&#xA;Lq1G4ihod8z9P2jPHHhABDZGZCQf9CueUP8Aq7ah98P/AFTy/wDlfJ3BPil3/QrnlD/q7ah98P8A&#xA;1Tx/lfJ3BfFLv+hXPKH/AFdtQ++H/qnj/K+TuC+KVay/5xj8lQXcU09/fXMUbBnt3aJVcDfixVA1&#xA;D3pgl2tkI2AXxS9gVVVQqgKqiiqNgAOwzVNTeKuxV2KuxV2KuxVQlu0U8UHN/AdMVQGqaFYazam3&#xA;1mGOe2bpE46HxU9VPuN8INKRbyPzj+R+q2TnUPKlw06L8X1KQgSgdfhbZXH3H55YMjWYMf0Pz/qu&#xA;nyNZa7bvyhYo/MESqR4hqH6DmRHJ3tZL0HTtUsNRhE1nMsq9wDuPmMsu0FFjAWBededrd3AWoX9+&#xA;xJbsKHOl0HaeHHG5HkKrq9FpOzspqhtKN30SLTNJuLmYRWMLTS/tSEfZHjX7KD3zX67trLm2j6Ie&#xA;XP4l3g0+DSx48p3/AByD1Hy/ZLpunxWcI9aSpe4l6KXb7VCfuGaUvIa/WHUZTPpyHuSfWvL2oyQG&#xA;0jTmZmRUkH2R8YJJ8KDfAHscXbGCcOK6I6df2sr0fS7bTLCKztx8MY+Ju7MerH55El5PUaiWaZnL&#xA;qxvXLuOfVZgkgcR0QU9huP8Agq502gxGOEWKvdreb3c95rGqBIFaV5H4WsK9aV2oPxOdTjjHDjs7&#xA;VzLmRiIhtIby3ltJbO7L6ldMytDCW9WNg/FQzD9pjuKZGUoSEhOP7uPU8jt+hNA7Vs980zW9a0qC&#xA;3h1CT9JoUVWNVW6DAfHxqQswH0N/rZ5jkiJSkYio39nRxp6cjcbsp07VLDUYPWs5hKoPF13Do38r&#xA;oaMrexGUkU46KwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoTxTSNTmFi7+OKqQkjjPC3Xm5/&#xA;awpbMQH7y5ep7LirfqTzfDEOEfTliqTeY/y/8t+YbcpqMH+kgUjvY/gmT5NvUezAjCJEMTEF455i&#xA;/Lbzh5Qna/0x3vbBPi+s24IdR/xbECSBtuRUfLLY5GmUCER5e/MiCbjBqy+lJ0Fwo+E/6wHT6MuE&#xA;mshlN9pulavbK8iLcp9qN0alSNvtKcJcnTdo58G0JUO7m1bWcFtGLaGIIq7iCPZR7u3c5Fx8ueeW&#xA;XFMmRRERcuOH7x16Bdo1/rgUJhEHCDmQW7kdMDbFV3psaHxyLaHmnmLT9T0i2mmkQmn2Jl3Ukmla&#xA;/jvnbaHU4s5AB+DdAWUq8v6Fr+pWCiP09P02KVriTVJR6ZqV4mj7MwArsNvE5la3XYcM97nkIrgG&#xA;/wBn4LlmrTfTLjTNPuPqXlCxbVtXpSTVJl+BK7EoDQKPfb5tmv1EMmWPHq5+Fi/mDmff3/jkkMn0&#xA;PyVcRX6a35gvmvNTi+NAGKxRU99q0+ge2abWdrxOM4cERDGfmfx8SzCYaZ5q0m4/MDS7DTpRLPKs&#xA;8V5LH9lkWFpFUn9qjJUH7upzScOzg6nLGUgBzel5W0OxV2KuxV2KuxVD3F0Y34ha+5wqqW83qpyp&#xA;Qg0wKqYq7FXYqoywO7hlkKgdhiqtirsVWyOUQsFLHwGKoYpNKOUzenGP2emFLllAPC2SvixxVWdo&#xA;gqicqW8OuBCrirsVdirBPOX5ReXte53NoBpmompM0S/u3P8AxZGCB9Iofnk4zIYSgC8ku7Pzn5Fv&#xA;OE6k2paiyqTJbSfJux26Ghy6MmmUO9lmheeNH1dBBckW1yaVjc0Vj7Nk7auGmVRqqqAoAHYDA2BU&#xA;GBtiqDItoY5r/njSrBzZW6HUtQY8VtIfiHLsGYA/cKnNvoux8uUccj4eP+cfx+xyYQJSu38veaNb&#xA;kVtdjihs53Mk0Qb94qD7Maj4uORz58Onyg6YkmI3PQ/j5O2hq4DAYEb9NvtTfUfMflTyhZi0hVEk&#xA;GyWkNORb/Lbff575rc2bJmlxTNl1c88Y+951qPmP8w/POq/ojQbR1t6gyFarEindS7dPpY0qMroB&#xA;w55pT/U9T/K78n4/KbR6lqd4b/WQrcSNo4zICHIruxoSPAD78rlO0RjW70rIMnYq7FXYq7FXYq0V&#xA;VvtAH54q2AAKDYYq7FXYq7FXYq7FXYqoS3aqeKDm/gOmKrVt5ZTynbbsgwpVjHSPhGeHvgQsitUU&#xA;8m+N/E4qrYq7FVssnBOXEsfAYqh/TuJ95DwT+UYUr5bGzmt3tp4UmglHGWKRQ6sPBgag4LQ8t84f&#xA;kbazl73yzKLWf7RsJSfSJ6/u33KH2O3yyyOTva5Y+5gtl5m80eVLz9G6xbycI+tvOKMF8UbuPcbZ&#xA;cDbVVPQtD8z6RrEYNpMBL+1A+zj6O+LOJS/XdL816tqBs4bpbHRwB6k0dfUevVdjU/gPnm50eo0u&#xA;DHxmPHl7jyH4+JczHKIF9URa2HlTyhaeqxWKQihnkIad/l7fKgzB1naObUn1nbuHJZZe9hWt/mhq&#xA;ut+pZeV0LM5aKH0/jlkkFaJ8FSu9Om+YVOPPMTsNkT5E/wCcddYv7yHXfPt85mBEkWmQtutf523C&#xA;/Rv8jkDNAi950rR9L0izWz022jtbZOkcYpU+LHqx9zvlZNswKVLm3klYFW2H7JxSutoXiUhmrXoO&#xA;wwIVsVdirsVdirsVdirsVdirsVdirsVdirToHUqeh64qtjhjj+yKHx74qvxV2KuxV2KuxV2KuxV2&#xA;KuxVLtc8u6NrtmbTVbVLmH9ksKMh8UcUZT8jhBpBFvHPNf5M65o8jah5ale9t0PL6v0uUA32pQSd&#xA;O2/sctjk72qWOuTGP8c+d7UrZyO6zKOPCWH96fnyHKuTRxlONA/LDzn5rulvtZeSxsyQzT3IPquP&#xA;8iI0PTu1B88iZgJESeb2Dyd+X/lbyjaeho1msUjV9W5YBpXJ3NWptXwFBlJkS2gUyPAl2KuxV2Ku&#xA;xVxIAqdgOpxVCyXwBpGK+56YaSpfXZ/b7saVr67P4j7saV312fxH3Y0rvrs/iPuxpVe3u+bcHFGP&#xA;QjFUTgQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgbyYs3pj7&#xA;K9fc4QlDYq7FXYq7FXYqujr6i061FPvxVNcCHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FUtMNwSSY2qd/snClr6vP/vtv+BOKu+rz/wC+2/4E4q76vP8A77b/AIE4&#xA;q76vP/vtv+BOKuFvOf8AdbfccVRdtZsh5uPi7DwwWhE8T4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDFX&#xA;cT4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDFXcT4Yq7ifDF&#xA;XcT4Yq7ifDFXcT4Yq7ifDFXcT4Yq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:f92212d1-56ad-430f-a179-50d729728a45</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f92212d1-56ad-430f-a179-50d729728a45</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:cf2a452e-c057-4da2-8ca5-e147cf30ca7c</stRef:instanceID>
            <stRef:documentID>xmp.did:cf2a452e-c057-4da2-8ca5-e147cf30ca7c</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4c695c7f-6fb7-4e2d-afca-049f399d6faf</stEvt:instanceID>
                  <stEvt:when>2020-11-13T16:21:34+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f92212d1-56ad-430f-a179-50d729728a45</stEvt:instanceID>
                  <stEvt:when>2020-11-14T17:51:18+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
700 500 li
700 0 li
cp
clp
700 0 mo
700 500 li
0 500 li
0 0 li
700 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.984314 .980392 .988235 rgb
f
331.958 384.01 mo
265.757 422.231 li
263.606 423.473 260.12 423.473 257.97 422.231 cv
255.819 420.99 255.819 418.977 257.97 417.735 cv
324.171 379.515 li
326.321 378.272 329.808 378.272 331.958 379.515 cv
334.108 380.756 334.108 382.769 331.958 384.01 cv
cp
.917647 .909804 .929412 rgb
f
383.1 354.483 mo
348.114 374.683 li
345.964 375.924 342.478 375.924 340.327 374.683 cv
338.177 373.44 338.177 371.428 340.327 370.187 cv
375.313 349.988 li
377.463 348.746 380.949 348.746 383.1 349.988 cv
385.25 351.229 385.25 353.242 383.1 354.483 cv
cp
f
351.584 352.624 mo
285.383 390.846 li
283.232 392.087 279.746 392.087 277.596 390.846 cv
275.445 389.604 275.445 387.591 277.596 386.35 cv
343.796 348.128 li
345.947 346.887 349.433 346.887 351.584 348.128 cv
353.733 349.37 353.733 351.383 351.584 352.624 cv
cp
f
436.235 303.751 mo
370.034 341.972 li
367.884 343.213 364.397 343.213 362.247 341.972 cv
360.097 340.73 360.097 338.718 362.247 337.476 cv
428.448 299.255 li
430.599 298.014 434.085 298.014 436.235 299.255 cv
438.386 300.496 438.386 302.509 436.235 303.751 cv
f
474.255 321.91 mo
408.054 360.131 li
405.903 361.373 402.417 361.373 400.267 360.131 cv
398.116 358.89 398.116 356.877 400.267 355.635 cv
466.468 317.414 li
468.618 316.173 472.104 316.173 474.255 317.414 cv
476.405 318.655 476.405 320.669 474.255 321.91 cv
cp
f
349.326 394.038 mo
329.949 405.226 li
327.798 406.467 324.312 406.467 322.162 405.226 cv
320.011 403.983 320.011 401.971 322.162 400.729 cv
341.539 389.542 li
343.689 388.301 347.176 388.301 349.326 389.542 cv
351.477 390.783 351.477 392.796 349.326 394.038 cv
cp
f
515.464 298.118 mo
496.086 309.306 li
493.936 310.547 490.449 310.547 488.299 309.306 cv
486.148 308.064 486.148 306.052 488.299 304.81 cv
507.677 293.622 li
509.827 292.381 513.313 292.381 515.464 293.622 cv
517.614 294.864 517.614 296.877 515.464 298.118 cv
cp
f
364.753 324.966 mo
298.552 363.188 li
296.401 364.429 292.915 364.429 290.765 363.188 cv
288.614 361.945 288.614 359.933 290.765 358.691 cv
356.966 320.47 li
359.116 319.229 362.603 319.229 364.753 320.47 cv
366.903 321.712 366.903 323.725 364.753 324.966 cv
cp
f
405.961 301.174 mo
386.584 312.361 li
384.434 313.603 380.947 313.603 378.797 312.361 cv
376.646 311.12 376.646 309.107 378.797 307.866 cv
398.174 296.679 li
400.324 295.437 403.811 295.437 405.961 296.679 cv
408.111 297.92 408.111 299.933 405.961 301.174 cv
f
482.494 375.14 mo
416.293 413.361 li
414.143 414.603 410.656 414.603 408.506 413.361 cv
406.355 412.12 406.355 410.106 408.506 408.865 cv
474.707 370.645 li
476.857 369.402 480.344 369.402 482.494 370.645 cv
484.645 371.886 484.645 373.898 482.494 375.14 cv
f
533.636 345.613 mo
498.65 365.813 li
496.5 367.054 493.014 367.054 490.863 365.813 cv
488.713 364.57 488.713 362.558 490.863 361.316 cv
525.849 341.118 li
527.999 339.876 531.485 339.876 533.636 341.118 cv
535.786 342.359 535.786 344.372 533.636 345.613 cv
f
502.12 343.754 mo
435.919 381.976 li
433.769 383.217 430.282 383.217 428.132 381.976 cv
425.981 380.733 425.981 378.721 428.132 377.479 cv
494.333 339.258 li
496.483 338.017 499.97 338.017 502.12 339.258 cv
504.27 340.5 504.27 342.513 502.12 343.754 cv
f
586.771 294.881 mo
520.57 333.102 li
518.42 334.343 514.934 334.343 512.783 333.102 cv
510.633 331.86 510.633 329.848 512.783 328.605 cv
578.984 290.385 li
581.135 289.144 584.621 289.144 586.771 290.385 cv
588.922 291.626 588.922 293.639 586.771 294.881 cv
cp
f
624.791 313.04 mo
558.59 351.261 li
556.44 352.503 552.954 352.503 550.804 351.261 cv
548.653 350.02 548.653 348.007 550.804 346.765 cv
617.004 308.544 li
619.154 307.303 622.641 307.303 624.791 308.544 cv
626.941 309.785 626.941 311.799 624.791 313.04 cv
cp
f
499.862 385.168 mo
480.485 396.355 li
478.335 397.597 474.849 397.597 472.698 396.355 cv
470.548 395.113 470.548 393.101 472.698 391.859 cv
492.075 380.672 li
494.226 379.431 497.712 379.431 499.862 380.672 cv
502.013 381.913 502.013 383.926 499.862 385.168 cv
cp
f
666 289.248 mo
646.622 300.436 li
644.472 301.677 640.985 301.677 638.836 300.436 cv
636.686 299.194 636.686 297.182 638.836 295.939 cv
658.213 284.752 li
660.363 283.511 663.85 283.511 666 284.752 cv
668.15 285.994 668.15 288.007 666 289.248 cv
cp
f
515.289 316.096 mo
449.088 354.317 li
446.938 355.559 443.451 355.559 441.301 354.317 cv
439.15 353.075 439.15 351.063 441.301 349.821 cv
507.502 311.6 li
509.652 310.358 513.139 310.358 515.289 311.6 cv
517.439 312.842 517.439 314.854 515.289 316.096 cv
cp
f
556.497 292.304 mo
537.12 303.491 li
534.97 304.733 531.483 304.733 529.333 303.491 cv
527.183 302.25 527.183 300.237 529.333 298.996 cv
548.71 287.809 li
550.86 286.566 554.347 286.566 556.497 287.809 cv
558.647 289.05 558.647 291.063 556.497 292.304 cv
cp
f
327.097 305.496 mo
328.228 306.97 329.751 308.09 331.336 309.008 cv
522.95 419.627 li
525.171 420.919 527.573 421.827 530.157 422.383 cv
532.629 422.907 535.264 423.199 537.908 423.21 cv
543.187 423.23 548.546 422.13 552.886 419.627 cv
644.065 366.992 li
646.639 365.509 649.436 362.945 650.102 360.049 cv
650.212 359.564 650.263 359.069 650.263 358.575 cv
650.263 364.479 650.263 366.246 650.263 372.16 cv
650.272 375.895 647.376 378.893 644.065 380.8 cv
552.886 433.445 li
550.666 434.727 548.264 435.646 545.68 436.19 cv
538.281 437.775 529.471 437.21 522.95 433.445 cv
331.336 322.816 li
330.509 322.332 329.702 321.797 328.935 321.182 cv
326.854 319.536 325.149 316.771 325.149 314.116 cv
325.14 314.116 li
325.14 308.151 325.14 306.323 325.14 300.358 cv
325.149 300.358 li
325.2 302.186 325.967 304.022 327.097 305.496 cv
cp
.34902 .407843 .462745 rgb
f
606.188 393.093 mo
606.772 392.76 607.297 392.71 607.701 392.901 cv
608.155 393.113 608.438 393.628 608.438 394.395 cv
608.438 395.364 li
608.438 396.808 607.418 398.554 606.188 399.26 cv
590.765 408.162 li
590.14 408.524 589.584 408.555 589.181 408.323 cv
588.767 408.091 588.515 407.587 588.515 406.869 cv
588.515 405.891 li
588.515 404.458 589.534 402.712 590.765 402.005 cv
606.188 393.093 li
cp
.109804 .101961 .164706 rgb
f
571.952 412.612 mo
574.102 410.433 576.161 411.301 576.101 413.552 cv
576.009 416.933 572.658 420.232 570.842 419.103 cv
570.599 418.951 570.397 418.729 570.216 418.426 cv
569.913 417.901 569.902 417.256 569.974 416.64 cv
570.064 415.893 570.286 415.177 570.609 414.511 cv
570.619 414.5 li
570.791 414.237 570.952 413.965 571.094 413.673 cv
571.347 413.288 571.629 412.936 571.952 412.612 cv
cp
f
330.822 304.648 mo
332.396 306.546 333.658 307.051 339.168 310.271 cv
339.269 310.331 525.897 418.113 526.867 418.588 cv
530.036 420.132 533.982 420.908 537.928 420.908 cv
537.908 423.21 li
535.264 423.199 532.629 422.907 530.157 422.383 cv
527.573 421.827 525.171 420.919 522.95 419.627 cv
331.336 309.008 li
329.751 308.09 328.228 306.97 327.097 305.496 cv
325.967 304.022 325.2 302.186 325.149 300.358 cv
325.119 299.783 325.17 299.219 325.301 298.663 cv
325.977 295.767 328.763 293.203 331.336 291.72 cv
422.516 239.084 li
426.855 236.582 432.205 235.491 437.483 235.502 cv
437.464 237.803 li
435.516 237.803 433.517 237.995 431.569 238.409 cv
427.622 239.246 425.716 240.447 422.778 242.204 cv
419.801 243.99 429.551 238.237 388.553 261.904 cv
381.882 265.76 375.24 269.687 368.569 273.532 cv
361.898 277.377 355.196 281.151 348.535 285.048 cv
345.759 286.673 342.994 288.318 340.208 289.893 cv
336.948 291.729 333.91 293.334 332.356 294.575 cv
328.884 297.361 327.976 301.228 330.822 304.648 cv
cp
.443137 .498039 .564706 rgb
f
376.798 342.562 mo
378.325 341.68 li
361.516 331.975 li
359.988 332.856 li
376.798 342.562 li
cp
.25098 .239216 .329412 rgb
f
378.325 343.802 mo
378.325 341.68 li
376.798 342.562 li
376.798 344.685 li
378.325 343.802 li
cp
.184314 .176471 .239216 rgb
f
376.798 344.685 mo
376.798 342.562 li
359.988 332.856 li
359.988 334.979 li
376.798 344.685 li
cp
.345098 .345098 .345098 rgb
f
562.117 421.565 mo
562.117 421.565 li
562.442 421.378 562.708 420.929 562.708 420.567 cv
562.708 420.206 562.442 420.064 562.117 420.252 cv
561.792 420.439 561.526 420.889 561.526 421.25 cv
561.526 421.611 561.792 421.753 562.117 421.565 cv
cp
.109804 .101961 .164706 rgb
f
639.174 380.265 mo
639.174 380.265 li
639.679 379.974 640.091 379.277 640.091 378.717 cv
640.091 374.351 li
640.091 373.79 639.679 373.569 639.174 373.86 cv
638.67 374.152 638.257 374.849 638.257 375.409 cv
638.257 379.775 li
638.257 380.336 638.67 380.557 639.174 380.265 cv
cp
f
635.506 382.383 mo
635.506 382.383 li
636.011 382.092 636.423 381.395 636.423 380.834 cv
636.423 376.468 li
636.423 375.907 636.011 375.688 635.506 375.979 cv
635.002 376.27 634.589 376.966 634.589 377.526 cv
634.589 381.894 li
634.589 382.454 635.002 382.674 635.506 382.383 cv
cp
f
631.838 384.5 mo
631.838 384.5 li
632.343 384.209 632.755 383.513 632.755 382.952 cv
632.755 378.586 li
632.755 378.025 632.343 377.805 631.838 378.096 cv
631.334 378.388 630.921 379.084 630.921 379.645 cv
630.921 384.011 li
630.921 384.571 631.334 384.792 631.838 384.5 cv
cp
f
628.17 386.618 mo
628.17 386.618 li
628.675 386.327 629.087 385.63 629.087 385.069 cv
629.087 380.703 li
629.087 380.143 628.675 379.923 628.17 380.214 cv
627.666 380.505 627.254 381.202 627.254 381.762 cv
627.254 386.129 li
627.254 386.688 627.666 386.909 628.17 386.618 cv
cp
f
624.503 388.735 mo
624.503 388.735 li
625.007 388.444 625.42 387.748 625.42 387.188 cv
625.42 382.82 li
625.42 382.261 625.007 382.04 624.503 382.331 cv
623.998 382.623 623.586 383.319 623.586 383.88 cv
623.586 388.246 li
623.586 388.807 623.998 389.026 624.503 388.735 cv
cp
f
620.835 390.854 mo
620.835 390.854 li
621.339 390.563 621.752 389.865 621.752 389.305 cv
621.752 384.938 li
621.752 384.378 621.339 384.158 620.835 384.449 cv
620.33 384.74 619.918 385.437 619.918 385.997 cv
619.918 390.363 li
619.918 390.924 620.33 391.145 620.835 390.854 cv
cp
f
644.065 366.992 mo
552.886 419.627 li
548.546 422.13 543.187 423.23 537.908 423.21 cv
537.928 420.908 li
541.44 420.908 544.974 420.283 547.971 419.032 cv
549.736 418.294 551.05 417.447 552.624 416.509 cv
555.601 414.722 545.852 420.475 586.85 396.807 cv
593.521 392.951 600.161 389.025 606.833 385.18 cv
613.514 381.334 620.216 377.56 626.867 373.664 cv
629.643 372.039 632.408 370.394 635.204 368.819 cv
640.725 365.711 643.329 364.5 645.034 362.047 cv
647.265 358.837 646.75 354.598 641.239 351.338 cv
641.028 351.207 449.403 240.548 448.535 240.125 cv
445.498 238.65 441.571 237.803 437.464 237.803 cv
437.483 235.502 li
440.128 235.512 442.763 235.804 445.245 236.33 cv
447.829 236.884 450.231 237.793 452.462 239.084 cv
644.065 349.703 li
645.66 350.622 647.174 351.742 648.314 353.216 cv
649.496 354.75 650.263 356.677 650.263 358.575 cv
650.263 359.069 650.212 359.564 650.102 360.049 cv
649.436 362.945 646.639 365.509 644.065 366.992 cv
cp
.443137 .498039 .564706 rgb
f
452.063 242.155 mo
449.837 240.87 448.596 240.153 448.529 240.125 cv
445.492 238.648 441.57 237.807 437.457 237.803 cv
435.513 237.807 433.51 237.999 431.565 238.414 cv
427.618 239.25 425.707 240.449 422.777 242.208 cv
420.014 243.87 428.256 239.006 396.389 257.376 cv
388.544 261.905 li
381.875 265.766 375.23 269.687 368.568 273.533 cv
366.74 274.59 364.911 275.636 363.074 276.678 cv
358.226 279.458 353.359 282.219 348.527 285.048 cv
345.755 286.677 342.991 288.32 340.202 289.892 cv
336.95 291.731 333.905 293.337 332.35 294.578 cv
328.882 297.364 327.964 301.228 330.811 304.649 cv
332.391 306.546 333.648 307.053 339.16 310.272 cv
420.204 357.063 li
470.747 386.245 526.33 418.326 526.868 418.589 cv
530.028 420.137 533.984 420.91 537.923 420.91 cv
541.432 420.91 544.965 420.285 547.961 419.033 cv
549.731 418.297 551.047 417.452 552.611 416.511 cv
555.59 414.724 545.842 420.476 586.845 396.812 cv
593.514 392.952 600.158 389.03 606.828 385.18 cv
613.506 381.334 620.209 377.56 626.87 373.666 cv
629.634 372.041 632.406 370.394 635.194 368.821 cv
640.723 365.716 643.32 364.502 645.025 362.047 cv
647.177 358.961 646.779 354.929 641.848 351.728 cv
641.649 351.594 641.442 351.465 641.227 351.341 cv
641.037 351.221 478.286 257.228 452.063 242.155 cv
f
537.901 420.91 mo
537.812 420.91 537.723 420.91 537.634 420.909 cv
534.076 420.877 530.553 420.212 527.626 418.939 cv
527.625 418.938 527.623 418.938 527.622 418.937 cv
527.613 418.933 527.604 418.929 527.595 418.925 cv
527.591 418.923 527.587 418.922 527.582 418.92 cv
527.577 418.917 527.571 418.915 527.566 418.912 cv
527.558 418.909 527.55 418.906 527.542 418.902 cv
527.541 418.901 527.539 418.901 527.537 418.9 cv
527.31 418.8 527.087 418.696 526.868 418.589 cv
526.868 418.589 li
526.868 418.589 li
526.539 418.428 504.01 405.436 474.537 388.428 cv
472.073 387.006 469.558 385.554 467.006 384.082 cv
464.449 382.606 461.846 381.103 459.218 379.587 cv
456.059 377.764 452.868 375.922 449.636 374.056 cv
447.059 372.568 444.454 371.065 441.848 369.56 cv
421.27 357.682 400.038 345.424 382.047 335.036 cv
379.372 333.491 376.78 331.995 374.26 330.54 cv
357.767 321.017 344.886 313.579 339.218 310.306 cv
339.199 310.295 339.179 310.284 339.16 310.272 cv
339.16 310.272 li
333.648 307.053 332.391 306.546 330.811 304.649 cv
329.66 303.266 329.124 301.811 329.124 300.383 cv
329.123 298.28 330.284 296.238 332.35 294.578 cv
332.35 294.578 li
332.961 294.09 333.548 293.697 334.489 293.138 cv
335.369 292.616 336.558 291.948 338.369 290.92 cv
340.609 289.649 343.799 287.826 348.527 285.048 cv
348.527 285.048 li
350.331 283.992 352.14 282.945 353.951 281.903 cv
355.922 280.769 357.894 279.641 359.866 278.514 cv
359.884 278.503 359.902 278.493 359.921 278.483 cv
360.799 277.998 361.93 277.755 363.061 277.755 cv
364.222 277.755 365.383 278.01 366.268 278.522 cv
368.349 279.723 371.078 280.324 373.807 280.324 cv
376.536 280.324 379.263 279.724 381.346 278.522 cv
399.641 267.958 li
403.805 265.555 403.805 261.657 399.641 259.254 cv
397.764 258.17 397.882 256.516 399.608 255.521 cv
403.804 253.103 407.202 251.147 409.958 249.563 cv
410.01 249.533 410.064 249.502 410.116 249.473 cv
410.121 249.469 410.126 249.466 410.132 249.463 cv
417.609 245.165 420.286 243.643 421.311 243.066 cv
422.408 242.447 421.609 242.91 422.777 242.208 cv
425.707 240.449 427.618 239.25 431.565 238.414 cv
431.565 238.414 li
433.45 238.011 435.378 237.816 437.273 237.804 cv
437.337 237.803 437.401 237.803 437.464 237.803 cv
437.562 237.803 437.659 237.804 437.756 237.805 cv
439.031 237.817 440.289 237.912 441.505 238.082 cv
441.51 238.083 441.514 238.083 441.518 238.084 cv
441.52 238.084 441.522 238.084 441.523 238.084 cv
444.121 238.448 446.531 239.153 448.529 240.125 cv
448.529 240.125 li
448.53 240.125 448.531 240.125 448.531 240.125 cv
448.532 240.125 448.532 240.125 448.532 240.125 cv
448.531 240.124 448.531 240.124 448.532 240.124 cv
448.534 240.124 448.569 240.142 448.875 240.318 cv
451.379 241.754 472.035 253.686 641.848 351.728 cv
644.959 353.747 646.265 356.097 646.266 358.332 cv
646.266 359.64 645.82 360.908 645.025 362.047 cv
643.32 364.502 640.723 365.716 635.194 368.821 cv
632.406 370.394 629.634 372.041 626.87 373.666 cv
620.209 377.56 613.506 381.334 606.828 385.18 cv
600.158 389.03 593.514 392.952 586.845 396.812 cv
545.842 420.476 555.59 414.724 552.611 416.511 cv
551.047 417.452 549.731 418.297 547.961 419.033 cv
547.961 419.033 li
544.947 420.292 541.413 420.91 537.901 420.91 cv
506.27 356.92 mo
505.385 356.92 504.501 357.115 503.826 357.505 cv
474.825 374.249 li
473.476 375.028 473.476 376.292 474.825 377.071 cv
475.5 377.461 476.384 377.656 477.269 377.656 cv
478.154 377.656 479.038 377.461 479.713 377.071 cv
508.715 360.327 li
510.064 359.548 510.064 358.284 508.715 357.505 cv
508.04 357.115 507.155 356.92 506.27 356.92 cv
496.499 351.279 mo
495.614 351.279 494.729 351.474 494.055 351.863 cv
465.054 368.607 li
463.704 369.387 463.704 370.65 465.054 371.43 cv
465.728 371.819 466.613 372.014 467.498 372.014 cv
468.382 372.014 469.267 371.819 469.941 371.43 cv
498.943 354.686 li
500.293 353.906 500.293 352.643 498.943 351.863 cv
498.268 351.474 497.383 351.279 496.499 351.279 cv
499.282 338.389 mo
498.397 338.389 497.513 338.584 496.838 338.974 cv
455.282 362.966 li
453.933 363.745 453.933 365.009 455.282 365.788 cv
455.957 366.178 456.842 366.373 457.726 366.373 cv
458.611 366.373 459.495 366.178 460.17 365.788 cv
501.726 341.796 li
503.076 341.017 503.076 339.753 501.726 338.974 cv
501.051 338.584 500.166 338.389 499.282 338.389 cv
417.757 301.791 mo
416.873 301.791 415.988 301.986 415.313 302.376 cv
386.313 319.12 li
384.963 319.899 384.963 321.162 386.313 321.941 cv
386.987 322.331 387.872 322.526 388.756 322.526 cv
389.641 322.526 390.525 322.331 391.2 321.941 cv
420.202 305.198 li
421.552 304.419 421.552 303.155 420.202 302.376 cv
419.527 301.986 418.642 301.791 417.757 301.791 cv
407.986 296.15 mo
407.101 296.15 406.217 296.345 405.542 296.734 cv
376.541 313.478 li
375.191 314.258 375.191 315.521 376.541 316.3 cv
377.216 316.689 378.1 316.884 378.985 316.884 cv
379.869 316.884 380.754 316.689 381.429 316.3 cv
410.431 299.557 li
411.78 298.777 411.78 297.514 410.431 296.734 cv
409.755 296.345 408.871 296.15 407.986 296.15 cv
410.769 283.26 mo
409.885 283.26 409 283.455 408.325 283.845 cv
366.769 307.837 li
365.42 308.616 365.42 309.88 366.769 310.659 cv
367.444 311.049 368.329 311.244 369.213 311.244 cv
370.098 311.244 370.982 311.049 371.657 310.659 cv
413.213 286.667 li
414.563 285.888 414.563 284.624 413.213 283.845 cv
412.538 283.455 411.654 283.26 410.769 283.26 cv
492.743 289.717 mo
491.858 289.717 490.974 289.912 490.299 290.302 cv
461.297 307.046 li
459.947 307.825 459.947 309.089 461.297 309.868 cv
461.972 310.258 462.857 310.453 463.742 310.453 cv
464.626 310.453 465.511 310.258 466.185 309.868 cv
495.186 293.124 li
496.536 292.345 496.536 291.081 495.186 290.302 cv
494.512 289.912 493.627 289.717 492.743 289.717 cv
482.971 284.076 mo
482.087 284.076 481.202 284.27 480.527 284.66 cv
451.525 301.404 li
450.176 302.184 450.176 303.447 451.525 304.227 cv
452.201 304.616 453.085 304.811 453.97 304.811 cv
454.855 304.811 455.739 304.616 456.414 304.227 cv
485.415 287.482 li
486.765 286.703 486.765 285.439 485.415 284.66 cv
484.74 284.27 483.856 284.076 482.971 284.076 cv
485.754 271.186 mo
484.87 271.186 483.985 271.381 483.31 271.771 cv
441.754 295.763 li
440.404 296.542 440.404 297.806 441.754 298.585 cv
442.429 298.975 443.314 299.169 444.199 299.169 cv
445.083 299.169 445.968 298.975 446.643 298.585 cv
488.198 274.593 li
489.548 273.813 489.548 272.55 488.198 271.771 cv
487.523 271.381 486.639 271.186 485.754 271.186 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.768627 .721569 .913725 ]
/C1 [.698039 .811765 .870588 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.698039 .811765 .870588 ]
/C1 [1 .792157 .870588 ]
/N 1 
>>
]
/Bounds [.416563 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5BL1_o'@._SX1,_83t(_83q&^qdb$^V@Ou^V@Ls^:q=q]tM+m]tM(k]Y(ni]=Y\e]=YYc]"5Ja\[f8]
\[f5[\@B&Y\$riU\$rfS[^NWP[C*EM[C!<J['[3HZa7!EZa-mBZEgdAZEpmE['d<M[^W`U\@K/]]">Se
]tM.o^V@S"_84"*_o'F2`Poj:a2c9BaiV]JbKJ,Rc-FV\cd:%ddF-Ile'umte^i='f@\a/g"P07gYCT?
hVR/Ii8ESQio9"YjQ,Fak2tjikih9qlK[^$m-O-,mdKW6nF?&>o(2JFo_%nNp@n=Vq"aa^qYU0fr;HTn
~>
<~\@B&Y\@K/\\[f;_]"5Mc]=Y\f]Y(ni]tM+m^:q=q^;%Ft^V@S"^qde&_83t)_SX1,_o'C0`5KU4`5T^7
`Q#p;`l?'>a2c6AaN2HEaiVZHb0%lLb0.uObKS2Sbfn>Vc-=MYcHa_\cHa_\cHa_\cHa_\cHa_\cHa_\
cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfe2QbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
~>
<~l0.?pkih6okih3mkND$kkND$kk2tggk2tggk2tdejlPUcjlPUbjQ,C_jQ,C_jQ#:\j5]1[j5]1Zio8tW
io8tWiSibSiSibSiSi_Qi8EPOi8EPOhr!>Khr!>Khqm5HhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
392.454 264.576 mo
393.281 264.092 394.614 264.092 395.441 264.576 cv
396.552 265.213 li
376.255 276.93 li
375.427 277.414 374.085 277.404 373.257 276.93 cv
372.157 276.294 li
392.454 264.576 li
cp
.0352941 0 0 rgb
f
395.441 262.508 mo
396.844 263.314 li
397.683 263.799 397.662 264.565 396.844 265.04 cv
396.552 265.213 li
395.441 264.576 li
394.614 264.092 393.281 264.092 392.454 264.576 cv
372.157 276.294 li
371.864 276.122 li
371.461 275.891 371.248 275.577 371.238 275.274 cv
371.238 275.254 li
371.238 274.941 371.451 274.629 371.864 274.396 cv
392.454 262.508 li
393.281 262.023 394.624 262.033 395.441 262.508 cv
cp
.101961 .152941 .219608 rgb
f
357.882 285.395 mo
359.569 286.369 362.307 286.369 363.994 285.395 cv
365.683 284.42 365.683 282.84 363.994 281.866 cv
362.307 280.892 359.569 280.892 357.882 281.866 cv
356.194 282.84 356.194 284.42 357.882 285.395 cv
cp
.443137 .498039 .564706 rgb
f
416.333 251.648 mo
418.021 252.623 420.758 252.623 422.445 251.648 cv
424.133 250.674 424.133 249.094 422.445 248.119 cv
420.758 247.145 418.021 247.145 416.333 248.119 cv
414.645 249.094 414.645 250.674 416.333 251.648 cv
cp
f
348.713 290.688 mo
349.557 291.176 350.925 291.176 351.77 290.688 cv
352.613 290.201 352.613 289.411 351.77 288.924 cv
350.925 288.437 349.557 288.437 348.713 288.924 cv
347.869 289.411 347.869 290.201 348.713 290.688 cv
cp
f
403.344 258.706 mo
404.188 259.193 405.556 259.193 406.4 258.706 cv
407.244 258.219 407.244 257.429 406.4 256.941 cv
405.556 256.454 404.188 256.454 403.344 256.941 cv
402.5 257.429 402.5 258.219 403.344 258.706 cv
cp
f
408.311 255.839 mo
409.154 256.326 410.522 256.326 411.366 255.839 cv
412.21 255.352 412.21 254.562 411.366 254.074 cv
410.522 253.587 409.154 253.587 408.311 254.074 cv
407.466 254.562 407.466 255.352 408.311 255.839 cv
cp
f
369.213 311.244 mo
368.329 311.244 367.444 311.049 366.769 310.659 cv
365.42 309.88 365.42 308.616 366.769 307.837 cv
408.325 283.845 li
409 283.455 409.885 283.26 410.769 283.26 cv
411.654 283.26 412.538 283.455 413.213 283.845 cv
414.563 284.624 414.563 285.888 413.213 286.667 cv
371.657 310.659 li
370.982 311.049 370.098 311.244 369.213 311.244 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.682353 .662745 .819608 ]
/C1 [.627451 .72549 .788235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.627451 .72549 .788235 ]
/C1 [.85098 .713725 .788235 ]
/N 1 
>>
]
/Bounds [.416563 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Xf\_-Xf\_-XK8M)XK8M)X/i;%X/i;$WiE)!WiE(uWMukrWMukqW2QYnW2QVlVl-GjVl-DhVP^5fVPU,c
V5:#bV50o_Unjf^Una][USFTZU8"BVU8"BVTqS0RTqS0RTV.sNTV.sNTV/!PU8"BWUSFW\V5:#cVPg>i
W2QYoWN)tuX/i;&XKAV,Y-+t3YHY78Z*CU?ZEpmD['[6K[C3NQ\$rlW\@K/]]"5Mc]=bei]tM.o^V@P!
^qde&_SX1-_o0L3`Pog9`lH-?aN2HEai_cKbKJ,Rbg"DWcHab^cd:%cdF$CjdaQ[peC<%!e^i='f@S[-
~>
<~W2ZbqWMuksWiE)!WiE,#X/i;%XK8M)XK8M*Xf\_-Xf\b/Y-+q1YHP.5YHP.6Yct@9YctC;Z*CR=ZEgdA
ZEgdBZa7!EZa7$G['[3I[C*EM[C*EN[^NWQ[^NZS\$riU\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y
\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@8rV\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
\$riU\$riU\$riU\$riT[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
~>
<~d*U.dd*U.dd*U.dd*U+bcd0q`cd0q`cd0q_cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXc-=JVbfn;Tbfn;T
bfn;SbKJ)PbKJ)PbKJ)Pb0%lLb0%lLb0%lLb0%iJaiVZHaiVZHaiVZGaN2HDaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
378.985 316.884 mo
378.1 316.884 377.216 316.689 376.541 316.3 cv
375.191 315.521 375.191 314.258 376.541 313.478 cv
405.542 296.734 li
406.217 296.345 407.101 296.15 407.986 296.15 cv
408.871 296.15 409.755 296.345 410.431 296.734 cv
411.78 297.514 411.78 298.777 410.431 299.557 cv
381.429 316.3 li
380.754 316.689 379.869 316.884 378.985 316.884 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
388.756 322.526 mo
387.872 322.526 386.987 322.331 386.313 321.941 cv
384.963 321.162 384.963 319.899 386.313 319.12 cv
415.313 302.376 li
415.988 301.986 416.873 301.791 417.757 301.791 cv
418.642 301.791 419.527 301.986 420.202 302.376 cv
421.552 303.155 421.552 304.419 420.202 305.198 cv
391.2 321.941 li
390.525 322.331 389.641 322.526 388.756 322.526 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
444.199 299.169 mo
443.314 299.169 442.429 298.975 441.754 298.585 cv
440.404 297.806 440.404 296.542 441.754 295.763 cv
483.31 271.771 li
483.985 271.381 484.87 271.186 485.754 271.186 cv
486.639 271.186 487.523 271.381 488.198 271.771 cv
489.548 272.55 489.548 273.813 488.198 274.593 cv
446.643 298.585 li
445.968 298.975 445.083 299.169 444.199 299.169 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
453.97 304.811 mo
453.085 304.811 452.201 304.616 451.525 304.227 cv
450.176 303.447 450.176 302.184 451.525 301.404 cv
480.527 284.66 li
481.202 284.27 482.087 284.076 482.971 284.076 cv
483.856 284.076 484.74 284.27 485.415 284.66 cv
486.765 285.439 486.765 286.703 485.415 287.482 cv
456.414 304.227 li
455.739 304.616 454.855 304.811 453.97 304.811 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
463.742 310.453 mo
462.857 310.453 461.972 310.258 461.297 309.868 cv
459.947 309.089 459.947 307.825 461.297 307.046 cv
490.299 290.302 li
490.974 289.912 491.858 289.717 492.743 289.717 cv
493.627 289.717 494.512 289.912 495.186 290.302 cv
496.536 291.081 496.536 292.345 495.186 293.124 cv
466.185 309.868 li
465.511 310.258 464.626 310.453 463.742 310.453 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
457.726 366.373 mo
456.842 366.373 455.957 366.178 455.282 365.788 cv
453.933 365.009 453.933 363.745 455.282 362.966 cv
496.838 338.974 li
497.513 338.584 498.397 338.389 499.282 338.389 cv
500.166 338.389 501.051 338.584 501.726 338.974 cv
503.076 339.753 503.076 341.017 501.726 341.796 cv
460.17 365.788 li
459.495 366.178 458.611 366.373 457.726 366.373 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
467.498 372.014 mo
466.613 372.014 465.728 371.819 465.054 371.43 cv
463.704 370.65 463.704 369.387 465.054 368.607 cv
494.055 351.863 li
494.729 351.474 495.614 351.279 496.499 351.279 cv
497.383 351.279 498.268 351.474 498.943 351.863 cv
500.293 352.643 500.293 353.906 498.943 354.686 cv
469.941 371.43 li
469.267 371.819 468.382 372.014 467.498 372.014 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
477.269 377.656 mo
476.384 377.656 475.5 377.461 474.825 377.071 cv
473.476 376.292 473.476 375.028 474.825 374.249 cv
503.826 357.505 li
504.501 357.115 505.385 356.92 506.27 356.92 cv
507.155 356.92 508.04 357.115 508.715 357.505 cv
510.064 358.284 510.064 359.548 508.715 360.327 cv
479.713 377.071 li
479.038 377.461 478.154 377.656 477.269 377.656 cv
level3{
gsave
clp
[317.142 0 0 317.142 329.124 329.357 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[317.142 0 0 317.142 329.124 329.357 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
636.052 239.268 mo
630.954 242.205 625.849 245.159 620.751 248.097 cv
623.324 246.5 624.905 243.215 624.905 238.597 cv
624.905 230.008 624.905 221.41 624.905 212.821 cv
624.905 203.346 618.252 191.828 610.052 187.094 cv
597.449 179.813 584.838 172.539 572.235 165.257 cv
568.214 162.94 564.573 162.675 561.9 164.131 cv
567.006 161.169 572.119 158.223 577.233 155.269 cv
579.923 153.722 583.639 153.945 587.734 156.312 cv
600.337 163.593 612.939 170.867 625.551 178.149 cv
633.751 182.882 640.404 194.401 640.404 203.876 cv
640.404 212.465 640.404 221.055 640.404 229.652 cv
640.404 234.385 638.741 237.712 636.052 239.268 cv
cp
.505882 .25098 1 rgb
f
624.905 212.821 mo
624.905 221.41 624.905 230.008 624.905 238.597 cv
624.905 243.215 623.324 246.5 620.751 248.097 cv
620.553 248.213 li
617.863 249.769 614.156 249.545 610.052 247.17 cv
597.449 239.896 584.838 232.615 572.235 225.341 cv
557.382 229.578 li
557.382 222.85 557.382 180.623 557.382 173.838 cv
557.382 169.104 559.045 165.778 561.734 164.222 cv
561.9 164.131 li
564.573 162.675 568.214 162.94 572.235 165.257 cv
584.838 172.539 597.449 179.813 610.052 187.094 cv
618.252 191.828 624.905 203.346 624.905 212.821 cv
cp
.65098 .556863 .996078 rgb
f
583.192 200.391 mo
583.192 202.415 581.552 203.108 579.528 201.939 cv
577.504 200.771 575.863 198.183 575.863 196.159 cv
575.863 194.135 577.504 193.442 579.528 194.61 cv
581.552 195.779 583.192 198.367 583.192 200.391 cv
cp
.988235 1 1 rgb
f
594.809 207.097 mo
594.809 209.121 593.167 209.814 591.144 208.646 cv
589.12 207.477 587.479 204.889 587.479 202.865 cv
587.479 200.841 589.12 200.148 591.144 201.316 cv
593.167 202.485 594.809 205.073 594.809 207.097 cv
cp
f
606.424 213.803 mo
606.424 215.827 604.783 216.521 602.759 215.352 cv
600.735 214.184 599.095 211.596 599.095 209.572 cv
599.095 207.548 600.735 206.854 602.759 208.023 cv
604.783 209.191 606.424 211.779 606.424 213.803 cv
cp
f
575.484 119.716 mo
575.484 121.033 575.484 122.345 575.484 123.657 cv
575.484 122.57 574.402 121.689 573.066 121.689 cv
574.402 121.689 575.484 120.803 575.484 119.716 cv
cp
.65098 .556863 .996078 rgb
f
575.484 116.335 mo
575.484 117.46 575.484 118.59 575.484 119.716 cv
575.484 118.624 574.402 117.743 573.066 117.743 cv
571.85 117.743 568.799 117.743 567.53 117.743 cv
567.53 117.724 li
567.588 117.546 568.732 114.094 568.732 110.914 cv
568.732 110.751 568.732 110.583 568.732 110.421 cv
569.518 110.421 571.95 110.421 573.066 110.421 cv
574.402 110.421 575.484 111.302 575.484 112.394 cv
575.484 113.706 575.484 115.018 575.484 116.335 cv
cp
f
575.015 124.825 mo
575.015 125.678 575.015 126.53 575.015 127.387 cv
575.015 126.621 574.483 125.96 573.703 125.63 cv
573.109 125.63 li
573.895 125.621 574.584 125.304 575.015 124.825 cv
cp
f
572.602 129.36 mo
572.932 129.36 573.248 129.308 573.535 129.212 cv
573.535 129.811 573.535 130.404 573.535 131.008 cv
573.535 130.352 573.147 129.777 572.549 129.418 cv
572.549 129.36 li
572.602 129.36 li
cp
f
568.732 110.914 mo
568.732 114.094 567.588 117.546 567.53 117.724 cv
567.53 117.743 li
568.799 117.743 571.85 117.743 573.066 117.743 cv
574.402 117.743 575.484 118.624 575.484 119.716 cv
575.484 120.803 574.402 121.689 573.066 121.689 cv
574.402 121.689 575.484 122.57 575.484 123.657 cv
575.484 124.098 575.312 124.5 575.015 124.825 cv
574.584 125.304 573.895 125.621 573.109 125.63 cv
573.703 125.63 li
574.483 125.96 575.015 126.621 575.015 127.387 cv
575.015 128.207 574.407 128.91 573.535 129.207 cv
573.535 129.212 li
573.248 129.308 572.932 129.36 572.602 129.36 cv
572.549 129.36 li
571.988 129.36 571.424 129.36 570.863 129.36 cv
572.549 129.418 li
573.147 129.777 573.535 130.352 573.535 131.008 cv
573.535 132.095 572.453 132.976 571.122 132.976 cv
570.969 132.976 570.815 132.976 570.662 132.976 cv
569.427 132.976 568.187 132.976 566.946 132.976 cv
565.007 132.976 563.067 132.976 561.123 132.976 cv
557.44 132.976 554.457 130.539 554.457 127.531 cv
554.457 126.162 554.457 123.6 554.457 121.813 cv
554.457 119.812 555.951 118.016 558.23 117.278 cv
560.404 116.579 562.962 114.889 564.278 110.914 cv
565.375 107.6 568.378 107.71 568.703 110.421 cv
568.723 110.574 568.732 110.742 568.732 110.914 cv
cp
.505882 .25098 1 rgb
f
558.23 117.278 mo
555.951 118.016 554.457 119.812 554.457 121.813 cv
554.457 121.277 554.457 120.746 554.457 120.209 cv
554.457 120.161 li
554.457 118.27 554.457 116.383 554.457 114.491 cv
554.457 112.489 555.951 110.694 558.23 109.956 cv
560.404 109.257 562.962 107.566 564.278 103.592 cv
565.438 100.086 568.732 100.412 568.732 103.592 cv
568.732 105.867 568.732 108.141 568.732 110.421 cv
568.703 110.421 li
568.378 107.71 565.375 107.6 564.278 110.914 cv
562.962 114.889 560.404 116.579 558.23 117.278 cv
cp
.65098 .556863 .996078 rgb
f
447.832 65.9233 mo
445.849 65.6182 443.865 65.3125 441.887 65.0068 cv
442.464 60.0029 443.87 56.1475 444.84 55.9053 cv
444.977 55.915 li
447.309 56.2739 449.646 56.6372 451.979 56.9961 cv
451.979 57.001 li
451.644 57.001 451.241 57.4473 450.81 58.3833 cv
449.665 60.8467 448.734 65.7734 448.734 69.3809 cv
448.734 67.1357 448.375 65.9282 447.832 65.9282 cv
447.832 65.9233 li
cp
f
448.734 69.3809 mo
448.734 65.7734 449.665 60.8467 450.81 58.3833 cv
451.241 57.4473 451.644 57.001 451.979 57.001 cv
452.521 57.001 452.88 58.2085 452.88 60.4536 cv
452.88 63.5278 452.536 64.8276 448.734 87.7305 cv
447.6 85.335 446.392 83.2642 445.121 81.5186 cv
444.792 81.0723 444.593 79.9814 444.593 78.3081 cv
444.593 74.7007 445.52 69.7739 446.664 67.3105 cv
447.095 66.3745 447.498 65.9282 447.832 65.9282 cv
448.375 65.9282 448.734 67.1357 448.734 69.3809 cv
cp
.505882 .25098 1 rgb
f
440.835 64.8423 mo
441.184 64.8955 441.533 64.9487 441.887 65.0068 cv
443.865 65.3125 445.849 65.6182 447.832 65.9233 cv
447.832 65.9282 li
447.498 65.9282 447.095 66.3745 446.664 67.3105 cv
445.52 69.7739 444.593 74.7007 444.593 78.3081 cv
444.593 79.9814 444.792 81.0723 445.121 81.5186 cv
446.392 83.2642 447.6 85.335 448.734 87.7305 cv
441.684 86.6392 li
440.544 84.2437 439.342 82.1733 438.066 80.4272 cv
437.741 79.9814 437.537 78.8901 437.537 77.2173 cv
437.537 73.6094 438.469 68.6826 439.608 66.2192 cv
440.068 65.2349 440.49 64.7891 440.835 64.8423 cv
cp
.65098 .556863 .996078 rgb
f
489.317 300.493 mo
489.317 301.128 489.317 301.768 489.317 302.402 cv
487.374 303.526 li
449.203 325.566 li
449.203 324.927 449.203 324.292 449.203 323.652 cv
449.203 316.3 454.369 307.357 460.738 303.681 cv
466.418 300.398 472.103 297.116 477.787 293.835 cv
480.91 292.031 483.742 291.831 485.815 292.96 cv
487.974 294.135 489.317 296.747 489.317 300.493 cv
cp
.823529 .266667 .552941 rgb
f
489.317 304.645 mo
449.203 327.809 li
439.847 322.409 li
441.79 321.285 li
449.203 325.566 li
487.374 303.526 li
489.317 304.645 li
cp
.65098 .556863 .996078 rgb
f
489.302 325.352 mo
449.219 348.495 li
439.861 343.09 li
441.805 341.972 li
449.219 346.247 li
487.359 324.228 li
489.302 325.352 li
cp
1 .45098 .709804 rgb
f
489.302 325.352 mo
489.003 332.564 483.962 341.077 477.787 344.644 cv
472.103 347.926 466.418 351.208 460.738 354.49 cv
457.551 356.328 454.668 356.498 452.58 355.294 cv
452.551 355.274 li
450.607 354.136 449.363 351.803 449.219 348.495 cv
489.302 325.352 li
cp
.823529 .266667 .552941 rgb
f
476.589 287.625 mo
479.666 289.398 482.743 291.182 485.82 292.955 cv
485.815 292.96 li
483.742 291.831 480.91 292.031 477.787 293.835 cv
472.103 297.116 466.418 300.398 460.738 303.681 cv
454.369 307.357 449.203 316.3 449.203 323.652 cv
449.203 324.292 449.203 324.927 449.203 325.566 cv
441.79 321.285 li
439.847 320.161 li
439.847 319.526 439.847 318.887 439.847 318.253 cv
439.847 310.899 445.012 301.957 451.382 298.28 cv
457.066 294.999 462.746 291.717 468.431 288.435 cv
471.618 286.596 474.501 286.421 476.589 287.625 cv
cp
1 .45098 .709804 rgb
f
449.219 348.495 mo
449.363 351.803 450.607 354.136 452.551 355.274 cv
449.443 353.486 446.336 351.692 443.229 349.895 cv
441.266 348.766 440.007 346.422 439.861 343.09 cv
449.219 348.495 li
cp
f
487.359 324.228 mo
449.219 346.247 li
449.198 345.728 449.203 346.912 449.203 327.809 cv
489.317 304.645 li
489.317 322.424 li
489.317 322.653 489.313 322.879 489.302 323.104 cv
487.359 324.228 li
cp
.505882 .25098 1 rgb
f
449.203 327.809 mo
449.203 346.912 449.198 345.728 449.219 346.247 cv
441.805 341.972 li
439.861 340.848 li
439.842 340.362 439.847 341.896 439.847 322.409 cv
449.203 327.809 li
cp
.65098 .556863 .996078 rgb
f
368.343 145.103 mo
369.826 145.959 371.309 146.816 372.792 147.673 cv
372.792 147.677 li
371.911 147.159 370.69 147.234 369.341 148.011 cv
366.65 149.57 364.465 153.351 364.465 156.46 cv
364.465 154.901 363.917 153.807 363.031 153.305 cv
363.036 153.301 li
362.133 152.779 361.227 152.256 360.324 151.738 cv
361.018 149.202 362.802 146.649 364.891 145.446 cv
366.24 144.664 367.456 144.593 368.343 145.103 cv
cp
1 .45098 .709804 rgb
f
374.217 150.828 mo
374.217 152.269 373.703 153.84 372.972 155.298 cv
370.139 160.956 367.302 166.614 364.465 172.271 cv
361.786 169.643 358.949 167.257 355.957 165.122 cv
355.185 164.57 354.712 163.534 354.712 162.093 cv
354.712 158.979 356.894 155.198 359.589 153.644 cv
360.934 152.867 362.149 152.795 363.031 153.305 cv
363.917 153.807 364.465 154.901 364.465 156.46 cv
364.465 153.351 366.65 149.57 369.341 148.011 cv
370.69 147.234 371.911 147.159 372.792 147.677 cv
373.674 148.183 374.217 149.273 374.217 150.828 cv
cp
.823529 .180392 .447059 rgb
f
354.712 162.093 mo
354.712 163.534 355.185 164.57 355.957 165.122 cv
358.949 167.257 361.786 169.643 364.465 172.271 cv
360.015 169.702 li
357.336 167.073 354.499 164.692 351.507 162.552 cv
350.734 162.001 350.262 160.964 350.262 159.523 cv
350.262 156.414 352.443 152.628 355.139 151.074 cv
356.483 150.297 357.704 150.226 358.586 150.736 cv
359.166 151.07 359.743 151.404 360.324 151.738 cv
361.227 152.256 362.133 152.779 363.036 153.301 cv
363.031 153.305 li
362.149 152.795 360.934 152.867 359.589 153.644 cv
356.894 155.198 354.712 158.979 354.712 162.093 cv
cp
1 .45098 .709804 rgb
f
627.728 276.968 mo
627.728 280.583 li
627.728 277.488 624.653 274.976 620.859 274.976 cv
617.216 274.976 614.237 277.292 614.008 280.221 cv
613.991 280.221 li
613.991 276.968 li
613.991 273.869 617.065 271.36 620.859 271.36 cv
624.653 271.36 627.728 273.869 627.728 276.968 cv
cp
.65098 .556863 .996078 rgb
f
613.991 296.323 mo
610.223 292.168 606.229 288.166 602.016 284.318 cv
600.926 283.324 600.261 282.018 600.261 280.583 cv
600.261 277.488 603.334 274.976 607.128 274.976 cv
610.922 274.976 613.991 277.488 613.991 280.583 cv
613.991 280.462 613.996 280.342 614.008 280.221 cv
614.237 277.292 617.216 274.976 620.859 274.976 cv
624.653 274.976 627.728 277.488 627.728 280.583 cv
627.728 282.018 627.003 283.282 625.972 284.318 cv
621.979 288.32 617.985 292.321 613.991 296.323 cv
cp
.505882 .25098 1 rgb
f
614.008 280.221 mo
613.996 280.342 613.991 280.462 613.991 280.583 cv
613.991 277.488 610.922 274.976 607.128 274.976 cv
603.334 274.976 600.261 277.488 600.261 280.583 cv
600.261 279.376 600.261 278.174 600.261 276.968 cv
600.256 276.968 li
600.261 274.022 603.151 271.36 607.128 271.36 cv
610.922 271.36 613.991 273.869 613.991 276.968 cv
613.991 280.221 li
614.008 280.221 li
cp
.65098 .556863 .996078 rgb
f
442.269 115.071 mo
442.269 123.354 442.269 131.632 442.269 139.909 cv
442.269 148.606 436.166 159.181 428.633 163.53 cv
427.569 164.144 426.512 164.752 425.448 165.367 cv
417.88 183.587 li
410.312 174.111 li
409.248 174.719 408.185 175.334 407.127 175.948 cv
406.82 176.125 406.513 176.291 406.212 176.439 cv
402.809 178.146 399.748 178.211 397.479 176.899 cv
397.303 176.793 li
394.939 175.328 393.485 172.315 393.485 168.073 cv
393.485 159.795 393.485 151.519 393.485 143.241 cv
393.485 134.539 399.595 123.963 407.127 119.615 cv
414.294 115.479 421.467 111.337 428.633 107.202 cv
432.325 105.069 435.676 104.827 438.127 106.162 cv
438.274 106.245 li
440.744 107.668 442.269 110.723 442.269 115.071 cv
cp
.505882 .25098 1 rgb
f
386.42 170.513 mo
383.95 169.089 382.426 166.029 382.426 161.686 cv
382.426 153.409 382.426 145.132 382.426 136.849 cv
382.426 128.152 388.528 117.577 396.062 113.228 cv
403.229 109.092 410.4 104.951 417.567 100.809 cv
421.336 98.6353 424.745 98.4341 427.209 99.8579 cv
430.854 101.956 434.487 104.059 438.127 106.162 cv
435.676 104.827 432.325 105.069 428.633 107.202 cv
421.467 111.337 414.294 115.479 407.127 119.615 cv
399.595 123.963 393.485 134.539 393.485 143.241 cv
393.485 151.519 393.485 159.795 393.485 168.073 cv
393.485 172.315 394.939 175.328 397.303 176.793 cv
393.675 174.702 390.047 172.61 386.42 170.513 cv
cp
.65098 .556863 .996078 rgb
f
410.312 174.111 mo
417.88 183.587 li
406.814 177.201 li
406.212 176.439 li
406.513 176.291 406.82 176.125 407.127 175.948 cv
408.185 175.334 409.248 174.719 410.312 174.111 cv
cp
f
421.387 133.119 mo
421.387 132.523 421.87 131.759 422.465 131.416 cv
423.06 131.072 423.543 131.278 423.543 131.874 cv
423.543 141.965 li
423.543 142.562 423.06 143.326 422.465 143.669 cv
421.871 144.012 421.387 143.806 421.387 143.21 cv
421.387 133.119 li
cp
419.225 142.818 mo
411.198 146.371 li
410.902 146.502 410.679 146.375 410.679 146.075 cv
410.679 142.619 li
410.679 142.319 410.902 141.934 411.198 141.723 cv
419.225 136.008 li
419.225 142.818 li
cp
410.91 139.746 mo
409.545 140.718 408.517 142.489 408.517 143.867 cv
408.517 144.514 li
406.516 145.669 li
405.919 146.014 405.435 146.777 405.435 147.375 cv
405.435 147.972 405.919 148.176 406.516 147.832 cv
408.517 146.677 li
408.517 147.323 li
408.517 148.701 409.545 149.285 410.91 148.681 cv
411.19 148.557 li
411.19 152.82 li
411.19 153.417 411.675 153.622 412.271 153.277 cv
412.869 152.932 413.353 152.168 413.353 151.571 cv
413.353 147.599 li
419.271 144.979 li
419.531 146.357 420.864 146.755 422.465 145.831 cv
424.252 144.799 425.705 142.505 425.705 140.717 cv
425.705 130.625 li
425.705 128.837 424.252 128.221 422.465 129.253 cv
420.864 130.177 419.531 132.114 419.271 133.793 cv
410.91 139.746 li
cp
.862745 .827451 .996078 rgb
f
382.426 198.2 mo
382.426 204.179 382.426 241.41 382.426 247.344 cv
369.333 243.605 li
353.852 252.54 338.375 261.476 322.9 270.41 cv
319.281 272.498 316.007 272.696 313.636 271.323 cv
311.265 269.956 309.801 267.029 309.801 262.854 cv
309.801 255.274 309.801 247.701 309.801 240.128 cv
309.801 231.777 315.667 221.623 322.9 217.448 cv
338.375 208.507 353.852 199.573 369.333 190.638 cv
372.878 188.59 376.095 188.363 378.449 189.645 cv
380.899 190.973 382.426 193.939 382.426 198.2 cv
cp
.823529 .266667 .552941 rgb
f
378.449 189.645 mo
376.095 188.363 372.878 188.59 369.333 190.638 cv
353.852 199.573 338.375 208.507 322.9 217.448 cv
315.667 221.623 309.801 231.777 309.801 240.128 cv
309.801 247.701 309.801 255.274 309.801 262.854 cv
309.801 267.029 311.265 269.956 313.636 271.323 cv
313.636 271.329 li
310.096 269.287 306.557 267.239 303.017 265.196 cv
300.646 263.829 299.176 260.891 299.176 256.716 cv
299.176 249.142 299.176 241.569 299.176 233.996 cv
299.176 225.645 305.042 215.485 312.275 211.31 cv
327.75 202.375 343.231 193.44 358.707 184.505 cv
362.326 182.418 365.6 182.219 367.966 183.586 cv
371.466 185.6 374.96 187.625 378.455 189.639 cv
378.449 189.645 li
cp
1 .45098 .709804 rgb
f
353.231 234.393 mo
352.788 234.449 352.329 234.535 351.854 234.649 cv
353.003 231.877 353.662 228.848 353.736 225.991 cv
357.266 223.954 li
357.238 224.54 357.168 225.145 357.057 225.764 cv
356.749 227.386 356.23 228.844 355.766 229.936 cv
355.719 230.03 li
355.062 231.521 354.218 232.999 353.231 234.393 cv
cp
351.677 236.381 mo
351.172 236.968 350.644 237.526 350.101 238.051 cv
350.52 237.394 350.915 236.683 351.282 235.925 cv
351.606 235.841 351.923 235.771 352.231 235.715 cv
352.051 235.94 351.865 236.163 351.677 236.381 cv
cp
346.544 240.835 mo
346.544 237.889 li
347.809 237.193 349.032 236.645 350.182 236.255 cv
349.135 238.297 347.875 239.884 346.544 240.835 cv
cp
346.006 234.361 mo
345.61 234.589 345.288 234.454 345.288 234.058 cv
345.288 233.662 345.61 233.154 346.006 232.925 cv
346.402 232.697 346.724 232.833 346.724 233.229 cv
346.724 233.624 346.402 234.132 346.006 234.361 cv
cp
345.468 237.433 mo
343.984 238.328 342.552 239.355 341.214 240.478 cv
340.081 239.148 339.428 236.979 339.352 234.296 cv
345.468 230.765 li
345.468 232.242 li
344.74 232.891 344.211 233.877 344.211 234.679 cv
344.211 235.481 344.74 235.856 345.468 235.666 cv
345.468 237.433 li
cp
345.468 241.457 mo
344.137 242.042 342.877 241.91 341.83 241.078 cv
342.98 240.139 344.203 239.275 345.468 238.51 cv
345.468 241.457 li
cp
339.785 242.899 mo
340.092 242.601 340.407 242.306 340.729 242.018 cv
341.096 242.351 341.49 242.604 341.908 242.778 cv
341.158 242.917 340.447 242.957 339.785 242.899 cv
cp
334.746 236.955 mo
338.275 234.918 li
338.35 237.689 339.008 239.957 340.157 241.403 cv
339.685 241.834 339.227 242.277 338.786 242.73 cv
336.439 242.125 334.9 240.118 334.746 236.955 cv
cp
335.583 231.636 mo
335.679 231.596 335.779 231.547 335.88 231.489 cv
336.87 230.917 337.675 229.647 337.675 228.658 cv
337.675 228.248 337.536 227.949 337.303 227.781 cv
337.748 226.984 338.245 226.199 338.782 225.44 cv
339.224 225.383 339.683 225.298 340.157 225.183 cv
339.632 226.45 339.197 227.806 338.875 229.211 cv
338.799 229.542 338.971 229.737 339.258 229.647 cv
339.396 229.586 li
339.634 229.448 339.852 229.163 339.916 228.885 cv
340.239 227.475 340.68 226.127 341.209 224.89 cv
342.548 224.468 343.983 223.839 345.468 223.021 cv
345.468 229.689 li
339.352 233.22 li
339.368 232.651 339.408 232.071 339.473 231.489 cv
339.507 231.173 339.297 231.028 339.001 231.163 cv
338.707 231.298 338.438 231.664 338.404 231.979 cv
338.334 232.606 338.291 233.23 338.275 233.841 cv
334.746 235.879 li
334.807 234.542 335.087 233.119 335.583 231.636 cv
cp
335.88 228.977 mo
336.276 228.748 336.599 228.884 336.599 229.28 cv
336.599 229.676 336.276 230.184 335.88 230.412 cv
335.484 230.641 335.162 230.505 335.162 230.109 cv
335.162 229.713 335.484 229.206 335.88 228.977 cv
cp
340.9 222.816 mo
341.238 222.45 341.581 222.098 341.929 221.762 cv
341.501 222.429 341.1 223.147 340.73 223.907 cv
340.406 223.991 340.089 224.062 339.781 224.117 cv
340.142 223.669 340.516 223.234 340.9 222.816 cv
cp
345.468 218.998 mo
345.468 221.944 li
344.201 222.64 342.976 223.189 341.824 223.579 cv
342.853 221.576 344.119 219.963 345.468 218.998 cv
cp
346.544 230.144 mo
352.66 226.613 li
352.584 229.383 351.931 232.307 350.798 234.944 cv
349.46 235.366 348.027 235.994 346.544 236.812 cv
346.544 235.044 li
347.271 234.395 347.801 233.409 347.801 232.607 cv
347.801 231.805 347.271 231.43 346.544 231.621 cv
346.544 230.144 li
cp
346.544 222.399 mo
348.027 221.504 349.459 220.478 350.797 219.355 cv
351.214 219.844 351.576 220.462 351.868 221.204 cv
351.373 221.81 351.045 222.556 351.045 223.188 cv
351.045 224.081 351.7 224.445 352.557 224.087 cv
352.61 224.552 352.646 225.037 352.66 225.537 cv
346.544 229.067 li
346.544 222.399 li
cp
346.544 218.377 mo
347.882 217.793 349.148 217.947 350.179 218.757 cv
349.03 219.695 347.808 220.558 346.544 221.323 cv
346.544 218.377 li
cp
352.227 216.933 mo
351.92 217.232 351.604 217.526 351.282 217.814 cv
350.979 217.539 350.65 217.315 350.302 217.146 cv
350.098 217.055 li
350.85 216.915 351.563 216.875 352.227 216.933 cv
cp
353.558 221.737 mo
353.558 222.132 353.235 222.641 352.839 222.869 cv
352.443 223.098 352.121 222.962 352.121 222.566 cv
352.121 222.17 352.443 221.663 352.839 221.434 cv
353.235 221.205 353.558 221.341 353.558 221.737 cv
cp
357.266 222.877 mo
353.736 224.915 li
353.722 224.363 353.684 223.827 353.622 223.314 cv
354.221 222.677 354.634 221.824 354.634 221.115 cv
354.634 220.148 353.865 219.802 352.907 220.319 cv
352.62 219.583 352.267 218.949 351.855 218.429 cv
352.327 217.998 352.785 217.555 353.226 217.102 cv
355.572 217.708 357.111 219.714 357.266 222.877 cv
cp
358.354 222.787 mo
358.354 215.98 352.815 213.642 346.006 217.573 cv
344.037 218.71 342.155 220.246 340.413 222.138 cv
338.88 223.803 337.507 225.706 336.418 227.672 cv
336.248 227.717 336.067 227.792 335.88 227.9 cv
334.89 228.472 334.085 229.742 334.085 230.731 cv
334.085 231.23 334.291 231.564 334.621 231.699 cv
333.981 233.584 333.657 235.381 333.657 237.046 cv
333.657 243.852 339.196 246.191 346.006 242.259 cv
348.192 240.997 350.341 239.178 352.22 236.998 cv
353.473 235.543 354.589 233.951 355.512 232.306 cv
355.573 232.215 li
355.644 232.099 356.862 230.053 357.679 227.201 cv
357.701 227.134 li
357.867 226.55 358.002 225.975 358.104 225.411 cv
358.215 224.832 358.301 224.232 358.353 223.62 cv
358.337 223.448 li
358.349 223.225 358.354 223.004 358.354 222.787 cv
cp
.909804 .67451 .835294 rgb
f
479.372 195.955 mo
479.372 207.556 479.372 219.149 479.372 230.742 cv
479.372 242.923 470.824 257.735 460.273 263.825 cv
458.784 264.686 457.303 265.538 455.813 266.398 cv
445.213 291.919 li
434.613 278.646 li
433.123 279.498 431.634 280.358 430.152 281.219 cv
429.723 281.468 429.292 281.699 428.87 281.906 cv
424.104 284.298 419.817 284.389 416.64 282.552 cv
416.392 282.402 li
413.081 280.351 411.046 276.13 411.046 270.188 cv
411.046 258.596 411.046 247.002 411.046 235.409 cv
411.046 223.22 419.603 208.408 430.152 202.318 cv
440.19 196.525 450.236 190.725 460.273 184.933 cv
465.445 181.945 470.137 181.606 473.571 183.476 cv
473.778 183.592 li
477.237 185.586 479.372 189.864 479.372 195.955 cv
cp
.823529 .266667 .552941 rgb
f
401.149 273.606 mo
397.69 271.612 395.556 267.325 395.556 261.243 cv
395.556 249.65 395.556 238.057 395.556 226.456 cv
395.556 214.275 404.104 199.463 414.653 193.373 cv
424.691 187.581 434.737 181.78 444.774 175.979 cv
450.054 172.934 454.828 172.652 458.279 174.646 cv
463.385 177.584 468.474 180.53 473.571 183.476 cv
470.137 181.606 465.445 181.945 460.273 184.933 cv
450.236 190.725 440.19 196.525 430.152 202.318 cv
419.603 208.408 411.046 223.22 411.046 235.409 cv
411.046 247.002 411.046 258.596 411.046 270.188 cv
411.046 276.13 413.081 280.351 416.392 282.402 cv
411.311 279.474 406.229 276.544 401.149 273.606 cv
cp
1 .45098 .709804 rgb
f
434.613 278.646 mo
445.213 291.919 li
429.714 282.974 li
428.87 281.906 li
429.292 281.699 429.723 281.468 430.152 281.219 cv
431.634 280.358 433.123 279.498 434.613 278.646 cv
cp
f
441.197 227.074 mo
440.432 227.074 439.551 227.35 438.611 227.892 cv
435.034 229.955 432.014 235.19 432.014 239.324 cv
432.014 240.957 432.484 242.191 433.338 242.8 cv
437.341 245.657 441.21 248.857 444.857 252.328 cv
448.805 244.457 452.751 236.587 456.692 228.716 cv
457.813 226.483 458.404 224.387 458.404 222.654 cv
458.404 220.889 457.876 219.614 456.917 219.064 cv
455.95 218.496 454.577 218.673 453.042 219.558 cv
449.468 221.628 446.445 226.863 446.445 230.989 cv
446.445 231.672 445.892 232.226 445.209 232.226 cv
444.526 232.226 443.973 231.672 443.973 230.989 cv
443.973 229.243 443.428 227.934 442.479 227.396 cv
442.105 227.181 441.674 227.074 441.197 227.074 cv
cp
445.209 255.623 mo
444.888 255.623 444.576 255.498 444.343 255.27 cv
440.434 251.434 436.248 247.916 431.901 244.814 cv
430.379 243.727 429.54 241.778 429.54 239.324 cv
429.54 234.247 432.981 228.284 437.375 225.75 cv
439.696 224.41 441.944 224.231 443.707 225.25 cv
444.146 225.499 444.537 225.813 444.876 226.185 cv
446.179 222.578 448.764 219.177 451.805 217.416 cv
454.147 216.067 456.403 215.894 458.159 216.925 cv
459.908 217.928 460.878 219.965 460.878 222.654 cv
460.878 224.8 460.213 227.212 458.903 229.824 cv
454.712 238.196 450.513 246.568 446.314 254.941 cv
446.138 255.294 445.802 255.542 445.412 255.606 cv
445.209 255.623 li
cp
.909804 .67451 .835294 rgb
f
630.384 353.223 mo
630.384 354.1 630.037 354.621 629.656 354.836 cv
615.191 363.194 600.727 371.543 586.263 379.893 cv
586.263 375.971 li
582.604 373.86 li
597.11 365.478 611.617 357.104 626.123 348.729 cv
626.619 348.448 627.289 348.597 627.827 348.87 cv
628.556 349.234 629.044 349.813 629.457 350.476 cv
629.979 351.312 630.384 352.263 630.384 353.223 cv
cp
.505882 .25098 1 rgb
f
605.212 327.521 mo
605.634 328.556 605.841 329.862 605.75 331.46 cv
607.968 330.326 609.962 330.269 611.427 331.12 cv
613.016 332.022 613.991 333.976 613.991 336.764 cv
613.991 342.341 610.077 349.127 605.245 351.915 cv
593.834 358.511 582.415 365.098 570.995 371.692 cv
568.521 373.124 566.287 373.224 564.698 372.23 cv
563.176 371.287 562.249 369.358 562.249 366.637 cv
562.249 361.779 565.228 356.003 569.191 352.751 cv
566.121 345.204 572.195 332.139 580.462 327.372 cv
583.747 325.469 586.726 325.271 588.894 326.486 cv
588.969 326.528 li
590.425 327.363 591.509 328.845 592.071 330.872 cv
595.729 325.526 600.445 323.665 603.275 325.254 cv
604.104 325.717 604.773 326.47 605.212 327.521 cv
cp
f
605.212 327.521 mo
607.289 328.713 609.357 329.921 611.435 331.112 cv
611.427 331.12 li
609.962 330.269 607.968 330.326 605.75 331.46 cv
605.841 329.862 605.634 328.556 605.212 327.521 cv
cp
.65098 .556863 .996078 rgb
f
587.785 316.309 mo
592.948 319.287 598.112 322.274 603.275 325.254 cv
600.445 323.665 595.729 325.526 592.071 330.872 cv
591.509 328.845 590.425 327.363 588.969 326.528 cv
588.894 326.486 li
585.244 324.368 581.587 322.267 577.938 320.156 cv
579.088 318.824 580.379 317.698 581.753 316.904 cv
584.111 315.547 586.237 315.415 587.785 316.309 cv
cp
.596078 .486275 .996078 rgb
f
586.263 379.893 mo
586.263 383.592 li
579.659 387.398 li
579.659 379.777 li
586.263 375.971 li
586.263 379.893 li
cp
.823529 .266667 .552941 rgb
f
586.263 375.971 mo
579.659 379.777 li
572.808 375.821 li
579.402 372.007 li
582.604 373.86 li
586.263 375.971 li
cp
1 .45098 .709804 rgb
f
579.659 379.777 mo
579.659 387.398 li
576.465 385.553 li
576.945 385.271 577.425 384.998 577.904 384.717 cv
578.376 384.493 578.732 383.956 578.732 383.046 cv
578.732 381.324 577.342 379.148 575.927 378.568 cv
575.373 378.337 574.909 378.346 574.562 378.503 cv
574.404 378.594 li
573.875 378.899 573.337 379.206 572.808 379.512 cv
572.808 375.821 li
579.659 379.777 li
cp
f
573.535 317.616 mo
575 318.46 576.474 319.313 577.938 320.156 cv
581.587 322.267 585.244 324.368 588.894 326.486 cv
586.726 325.271 583.747 325.469 580.462 327.372 cv
572.195 332.139 566.121 345.204 569.191 352.751 cv
553.692 343.806 li
550.614 336.242 556.713 323.185 564.963 318.418 cv
568.289 316.507 571.302 316.325 573.478 317.583 cv
573.535 317.616 li
cp
.65098 .556863 .996078 rgb
f
553.692 343.806 mo
569.191 352.751 li
565.228 356.003 562.249 361.779 562.249 366.637 cv
562.249 369.358 563.176 371.287 564.698 372.23 cv
564.698 372.238 li
559.576 369.276 554.438 366.313 549.314 363.352 cv
547.734 362.441 546.75 360.479 546.75 357.691 cv
546.75 352.834 549.729 347.05 553.692 343.806 cv
cp
.596078 .486275 .996078 rgb
f
533.667 409.062 mo
533.593 406.307 530.887 403.699 529.422 404.577 cv
529.414 404.568 li
543.87 396.211 558.343 387.861 572.808 379.512 cv
573.337 379.206 573.875 378.899 574.404 378.594 cv
574.562 378.503 li
574.909 378.346 575.373 378.337 575.927 378.568 cv
577.342 379.148 578.732 381.324 578.732 383.046 cv
578.732 383.956 578.376 384.493 577.904 384.717 cv
577.425 384.998 576.945 385.271 576.465 385.553 cv
561.959 393.927 547.444 402.301 532.938 410.676 cv
532.931 410.667 li
533.146 410.535 533.319 410.345 533.443 410.138 cv
533.626 409.814 533.684 409.442 533.667 409.062 cv
cp
.505882 .25098 1 rgb
f
531.508 410.667 mo
529.464 409.807 528.098 406.513 528.909 405.114 cv
529.05 404.866 529.224 404.692 529.422 404.577 cv
530.887 403.699 533.593 406.307 533.667 409.062 cv
533.684 409.442 533.626 409.814 533.443 410.138 cv
533.319 410.345 533.146 410.535 532.931 410.667 cv
532.823 410.733 532.707 410.783 532.592 410.816 cv
532.235 410.907 531.854 410.816 531.508 410.667 cv
cp
.65098 .556863 .996078 rgb
f
582.314 352.595 mo
582.314 354.27 580.957 356.411 579.282 357.378 cv
577.607 358.345 576.249 357.771 576.249 356.096 cv
576.249 354.421 577.607 352.279 579.282 351.313 cv
580.957 350.346 582.314 350.92 582.314 352.595 cv
cp
.862745 .827451 .996078 rgb
f
591.926 347.045 mo
591.926 348.72 590.568 350.861 588.894 351.828 cv
587.219 352.795 585.861 352.222 585.861 350.547 cv
585.861 348.872 587.219 346.73 588.894 345.764 cv
590.568 344.796 591.926 345.37 591.926 347.045 cv
cp
f
601.538 341.495 mo
601.538 343.17 600.181 345.312 598.506 346.278 cv
596.831 347.246 595.474 346.672 595.474 344.997 cv
595.474 343.322 596.831 341.181 598.506 340.214 cv
600.181 339.247 601.538 339.82 601.538 341.495 cv
cp
f
540.645 200.063 mo
540.645 205.596 540.645 211.124 540.645 216.652 cv
540.645 222.75 536.363 230.163 531.085 233.209 cv
522.975 237.896 514.857 242.577 506.747 247.263 cv
497.188 261.03 li
497.188 256.7 497.188 229.519 497.188 225.157 cv
497.188 219.059 501.47 211.646 506.747 208.594 cv
514.857 203.913 522.975 199.231 531.085 194.545 cv
533.674 193.054 536.017 192.883 537.737 193.815 cv
539.531 194.79 540.645 196.952 540.645 200.063 cv
cp
.505882 .25098 1 rgb
f
527.985 188.186 mo
531.239 190.061 534.488 191.94 537.737 193.815 cv
536.017 192.883 533.674 193.054 531.085 194.545 cv
522.975 199.231 514.857 203.913 506.747 208.594 cv
501.47 211.646 497.188 219.059 497.188 225.157 cv
497.188 229.519 497.188 256.7 497.188 261.03 cv
487.213 255.273 li
487.213 250.943 487.213 223.767 487.213 219.395 cv
487.213 213.302 491.494 205.889 496.772 202.837 cv
504.889 198.156 512.999 193.469 521.11 188.788 cv
523.752 187.265 526.143 187.121 527.868 188.117 cv
527.985 188.186 li
cp
.65098 .556863 .996078 rgb
f
519.493 213.109 mo
521.139 212.159 522.686 211.907 523.849 212.398 cv
525.013 212.891 525.653 214.068 525.653 215.713 cv
525.653 218.718 523.933 222.187 522.489 224.568 cv
521.248 226.615 519.992 228.235 519.493 228.856 cv
518.994 228.812 517.738 228.642 516.497 228.028 cv
515.054 227.313 513.333 225.831 513.333 222.827 cv
513.333 219.43 516.097 215.071 519.493 213.109 cv
cp
515.885 228.984 mo
517.494 229.776 519.083 229.857 519.258 229.864 cv
519.494 229.798 li
519.586 229.745 519.673 229.666 519.744 229.574 cv
519.98 229.29 521.532 227.402 523.102 224.818 cv
525.333 221.144 526.513 217.823 526.513 215.217 cv
526.513 213.342 525.782 212.001 524.456 211.44 cv
523.131 210.88 521.369 211.167 519.495 212.249 cv
519.493 212.25 li
519.491 212.25 li
515.622 214.486 512.474 219.453 512.474 223.323 cv
512.474 225.929 513.653 227.887 515.885 228.984 cv
cp
.862745 .827451 .996078 rgb
f
516.502 221.39 mo
516.502 219.723 517.862 217.613 519.493 216.671 cv
521.149 215.715 522.484 216.294 522.484 217.936 cv
522.484 219.584 521.143 221.701 519.493 222.654 cv
517.839 223.609 516.502 223.031 516.502 221.39 cv
cp
523.344 217.439 mo
523.344 215.14 521.359 214.529 519.104 216.056 cv
517.127 217.397 515.643 219.919 515.643 221.886 cv
515.643 222.94 516.069 223.658 516.771 223.955 cv
518.584 224.721 521.615 222.54 522.859 219.584 cv
523.168 218.854 523.344 218.116 523.344 217.439 cv
cp
f
586.333 253.227 mo
586.333 261.824 586.333 270.413 586.333 279.003 cv
586.333 288.478 579.68 299.996 571.479 304.729 cv
558.877 312.012 546.266 319.285 533.663 326.566 cv
518.81 347.957 li
518.81 341.229 518.81 298.995 518.81 292.218 cv
518.81 282.743 525.463 271.225 533.663 266.482 cv
546.266 259.209 558.877 251.936 571.479 244.653 cv
575.501 242.336 579.143 242.072 581.815 243.52 cv
584.604 245.034 586.333 248.394 586.333 253.227 cv
cp
.823529 .266667 .552941 rgb
f
566.664 234.773 mo
571.72 237.686 576.768 240.607 581.815 243.52 cv
579.143 242.072 575.501 242.336 571.479 244.653 cv
558.877 251.936 546.266 259.209 533.663 266.482 cv
525.463 271.225 518.81 282.743 518.81 292.218 cv
518.81 298.995 518.81 341.229 518.81 347.957 cv
503.311 339.013 li
503.311 332.285 503.311 290.058 503.311 283.265 cv
503.311 273.798 509.964 262.279 518.164 257.537 cv
530.775 250.264 543.378 242.982 555.98 235.708 cv
560.085 233.342 563.801 233.118 566.481 234.666 cv
566.664 234.773 li
cp
1 .45098 .709804 rgb
f
569.405 286.496 mo
569.405 287.415 568.659 288.593 567.742 289.122 cv
553.797 297.173 li
547.727 300.678 li
537.073 306.828 li
536.156 307.358 535.41 307.042 535.41 306.123 cv
535.41 283.539 li
541.615 284.674 li
541.89 284.725 542.225 284.644 542.568 284.445 cv
567.742 269.911 li
568.659 269.382 569.405 269.698 569.405 270.616 cv
569.405 286.496 li
cp
567.742 266.761 mo
543.1 280.988 li
534.788 279.469 li
534.312 279.382 533.672 279.689 533.136 280.266 cv
532.6 280.841 532.26 281.584 532.26 282.182 cv
532.26 307.942 li
532.26 310.598 534.419 311.511 537.073 309.979 cv
547.727 303.828 li
553.797 300.323 li
567.742 292.271 li
570.396 290.739 572.556 287.333 572.556 284.678 cv
572.556 268.797 li
572.556 266.143 570.396 265.229 567.742 266.761 cv
cp
.909804 .67451 .835294 rgb
f
563.396 284.086 mo
542.406 296.204 li
541.536 296.706 540.831 297.818 540.831 298.688 cv
540.831 299.559 541.536 299.856 542.406 299.354 cv
563.396 287.236 li
564.266 286.733 564.971 285.621 564.971 284.752 cv
564.971 283.882 564.266 283.584 563.396 284.086 cv
cp
f
542.406 292.214 mo
561.297 281.308 li
562.167 280.805 562.872 279.692 562.872 278.823 cv
562.872 277.953 562.167 277.655 561.297 278.157 cv
542.406 289.063 li
541.536 289.566 540.831 290.678 540.831 291.548 cv
540.831 292.418 541.536 292.716 542.406 292.214 cv
cp
f
533.953 170.875 mo
528.855 173.812 523.75 176.766 518.652 179.704 cv
521.226 178.107 522.807 174.822 522.807 170.204 cv
522.807 161.615 522.807 153.017 522.807 144.428 cv
522.807 134.953 516.153 123.435 507.953 118.701 cv
495.351 111.419 482.739 104.146 470.137 96.8638 cv
466.115 94.5469 462.474 94.2822 459.802 95.7383 cv
464.907 92.7759 470.021 89.8301 475.135 86.876 cv
477.824 85.3286 481.539 85.5518 485.636 87.9185 cv
498.238 95.2007 510.841 102.474 523.452 109.756 cv
531.652 114.489 538.306 126.008 538.306 135.483 cv
538.306 144.072 538.306 152.662 538.306 161.259 cv
538.306 165.992 536.642 169.319 533.953 170.875 cv
cp
.823529 .266667 .552941 rgb
f
522.807 144.428 mo
522.807 153.017 522.807 161.615 522.807 170.204 cv
522.807 174.822 521.226 178.107 518.652 179.704 cv
518.454 179.82 li
515.765 181.375 512.058 181.152 507.953 178.777 cv
495.351 171.503 482.739 164.222 470.137 156.948 cv
455.283 161.185 li
455.283 154.457 455.283 112.23 455.283 105.445 cv
455.283 100.711 456.946 97.3853 459.636 95.8296 cv
459.802 95.7383 li
462.474 94.2822 466.115 94.5469 470.137 96.8638 cv
482.739 104.146 495.351 111.419 507.953 118.701 cv
516.153 123.435 522.807 134.953 522.807 144.428 cv
cp
1 .45098 .709804 rgb
f
487.089 144.371 mo
487.082 144.37 li
481.63 144.362 li
481.63 128.836 li
495.107 144.381 li
487.089 144.371 li
cp
498.48 145.161 mo
480.954 124.947 li
480.538 124.467 480.024 124.17 479.607 124.171 cv
479.191 124.171 478.935 124.468 478.935 124.949 cv
478.935 145.138 li
478.935 145.619 479.191 146.212 479.607 146.693 cv
479.816 146.934 480.049 147.129 480.282 147.263 cv
480.514 147.397 480.746 147.472 480.954 147.472 cv
486.12 147.479 li
486.128 147.48 li
498.48 147.496 li
498.897 147.496 499.155 147.2 499.155 146.718 cv
499.155 146.236 498.897 145.642 498.48 145.161 cv
cp
.988235 1 1 rgb
f
114.896 383.58 mo
119.709 386.358 119.709 390.863 114.896 393.642 cv
110.084 396.42 102.281 396.42 97.4688 393.642 cv
92.6563 390.863 92.6563 386.358 97.4688 383.58 cv
102.281 380.802 110.084 380.802 114.896 383.58 cv
cp
.917647 .909804 .929412 rgb
f
663.133 395.842 mo
667.945 398.62 667.945 403.125 663.133 405.903 cv
658.32 408.683 650.518 408.683 645.705 405.903 cv
640.893 403.125 640.893 398.62 645.705 395.842 cv
650.518 393.063 658.32 393.063 663.133 395.842 cv
cp
f
217.102 375.458 mo
220.092 377.184 220.092 379.982 217.102 381.709 cv
214.112 383.436 209.264 383.436 206.274 381.709 cv
203.285 379.982 203.285 377.184 206.274 375.458 cv
209.264 373.731 214.112 373.731 217.102 375.458 cv
cp
f
667.489 230.8 mo
670.479 232.526 670.479 235.325 667.489 237.051 cv
664.499 238.777 659.651 238.777 656.661 237.051 cv
653.672 235.325 653.672 232.526 656.661 230.8 cv
659.651 229.073 664.499 229.073 667.489 230.8 cv
cp
f
242.236 316.705 mo
245.226 318.432 245.226 321.23 242.236 322.956 cv
239.246 324.683 234.399 324.683 231.409 322.956 cv
228.419 321.23 228.419 318.432 231.409 316.705 cv
234.399 314.979 239.246 314.979 242.236 316.705 cv
cp
f
50.0923 221.402 mo
50.0923 221.69 50.166 221.909 50.3145 222.057 cv
50.4619 222.205 50.6763 222.278 50.9561 222.278 cv
54.04 222.278 li
54.0645 222.878 li
53.2163 222.926 52.1362 222.951 50.8242 222.951 cv
50.3203 222.951 49.9399 222.818 49.6841 222.555 cv
49.4282 222.291 49.3003 221.942 49.3003 221.51 cv
49.3003 214.659 li
50.0923 214.659 li
50.0923 221.402 li
cp
.682353 .643137 .741176 rgb
f
56.4941 217.856 mo
56.2261 218.004 56.0342 218.249 55.9185 218.588 cv
55.8022 218.929 55.7441 219.411 55.7441 220.035 cv
55.7441 220.659 55.8022 221.141 55.9185 221.48 cv
56.0342 221.821 56.2261 222.064 56.4941 222.212 cv
56.7622 222.361 57.1362 222.435 57.6162 222.435 cv
58.0962 222.435 58.4702 222.361 58.7383 222.212 cv
59.0063 222.064 59.1982 221.821 59.3145 221.48 cv
59.4302 221.141 59.4883 220.659 59.4883 220.035 cv
59.4883 219.411 59.4302 218.929 59.3145 218.588 cv
59.1982 218.249 59.0063 218.004 58.7383 217.856 cv
58.4702 217.708 58.0962 217.634 57.6162 217.634 cv
57.1362 217.634 56.7622 217.708 56.4941 217.856 cv
cp
59.1821 217.274 mo
59.5703 217.475 59.8501 217.796 60.022 218.24 cv
60.1943 218.685 60.2803 219.283 60.2803 220.035 cv
60.2803 220.787 60.1943 221.383 60.022 221.822 cv
59.8501 222.263 59.5703 222.583 59.1821 222.783 cv
58.7939 222.982 58.272 223.083 57.6162 223.083 cv
56.9521 223.083 56.4282 222.982 56.0444 222.783 cv
55.6602 222.583 55.3799 222.263 55.2041 221.822 cv
55.0283 221.383 54.9404 220.787 54.9404 220.035 cv
54.9404 219.283 55.0283 218.685 55.2041 218.24 cv
55.3799 217.796 55.6621 217.475 56.0503 217.274 cv
56.438 217.075 56.96 216.975 57.6162 216.975 cv
58.272 216.975 58.7939 217.075 59.1821 217.274 cv
cp
f
65.7202 216.975 mo
65.624 217.694 li
65.3364 217.694 li
65 217.694 64.6621 217.765 64.3223 217.904 cv
63.9819 218.044 63.54 218.271 62.9961 218.583 cv
62.9961 222.938 li
62.228 222.938 li
62.228 217.13 li
62.8164 217.13 li
62.9004 218.103 li
63.8442 217.351 64.7002 216.975 65.4683 216.975 cv
65.7202 216.975 li
cp
f
68.5063 217.838 mo
68.2461 217.975 68.0562 218.198 67.936 218.51 cv
67.8164 218.822 67.748 219.254 67.7324 219.807 cv
70.4561 219.807 li
70.9521 219.807 71.2002 219.491 71.2002 218.858 cv
71.2002 218.426 71.0742 218.114 70.8223 217.922 cv
70.5703 217.73 70.1563 217.634 69.5801 217.634 cv
69.124 217.634 68.7661 217.703 68.5063 217.838 cv
cp
71.7524 222.278 mo
71.8364 222.794 li
71.604 222.883 71.272 222.952 70.8403 223.004 cv
70.4082 223.057 70.0083 223.083 69.6401 223.083 cv
68.9844 223.083 68.46 222.98 68.0684 222.776 cv
67.6763 222.572 67.3901 222.249 67.2104 221.805 cv
67.0303 221.36 66.9404 220.763 66.9404 220.01 cv
66.9404 219.25 67.0283 218.65 67.2041 218.21 cv
67.3799 217.771 67.6563 217.455 68.0322 217.263 cv
68.4082 217.07 68.9121 216.975 69.5444 216.975 cv
70.376 216.975 70.9883 217.128 71.3804 217.437 cv
71.772 217.745 71.9683 218.21 71.9683 218.834 cv
71.9683 219.883 71.5244 220.406 70.6362 220.406 cv
67.7441 220.406 li
67.7681 220.935 67.854 221.342 68.0024 221.63 cv
68.1504 221.918 68.3623 222.123 68.6382 222.243 cv
68.9141 222.362 69.2842 222.422 69.748 222.422 cv
70.3481 222.422 71.0161 222.375 71.7524 222.278 cv
cp
f
81.3882 217.382 mo
81.6523 217.654 81.7842 218.051 81.7842 218.57 cv
81.7842 222.938 li
81.0283 222.938 li
81.0283 218.774 li
81.02 218.375 80.9341 218.084 80.77 217.904 cv
80.606 217.725 80.3481 217.634 79.9961 217.634 cv
79.6763 217.634 79.3701 217.708 79.0781 217.856 cv
78.7861 218.004 78.3843 218.271 77.8721 218.654 cv
77.8721 222.938 li
77.1401 222.938 li
77.1401 218.774 li
77.1401 218.375 77.0562 218.084 76.8882 217.904 cv
76.7202 217.725 76.46 217.634 76.1084 217.634 cv
75.7964 217.634 75.4902 217.708 75.1904 217.856 cv
74.8901 218.004 74.4883 218.267 73.9844 218.643 cv
73.9844 222.938 li
73.228 222.938 li
73.228 217.13 li
73.8521 217.13 li
73.9004 218.103 li
74.7402 217.351 75.5562 216.975 76.3481 216.975 cv
77.1719 216.975 77.6641 217.343 77.8242 218.079 cv
78.6563 217.343 79.4639 216.975 80.248 216.975 cv
80.7441 216.975 81.124 217.111 81.3882 217.382 cv
cp
f
88.0322 222.938 mo
87.2764 222.938 li
87.2764 217.13 li
88.0322 217.13 li
88.0322 222.938 li
cp
88.0801 214.935 mo
88.0801 215.63 li
88.0801 215.798 87.9961 215.882 87.8281 215.882 cv
87.48 215.882 li
87.312 215.882 87.228 215.798 87.228 215.63 cv
87.228 214.935 li
87.228 214.767 87.312 214.683 87.48 214.683 cv
87.8281 214.683 li
87.9961 214.683 88.0801 214.767 88.0801 214.935 cv
cp
f
93.9424 222.194 mo
94.1621 222.05 94.3242 221.809 94.4282 221.468 cv
94.5322 221.128 94.584 220.654 94.584 220.046 cv
94.584 219.455 94.5342 218.984 94.4341 218.637 cv
94.334 218.289 94.1782 218.037 93.9663 217.88 cv
93.7544 217.725 93.4683 217.646 93.1084 217.646 cv
92.7803 217.646 92.4541 217.725 92.1304 217.88 cv
91.8062 218.037 91.4243 218.294 90.9844 218.654 cv
90.9844 221.979 li
91.4482 222.13 91.8281 222.241 92.124 222.309 cv
92.4199 222.376 92.7241 222.411 93.0361 222.411 cv
93.4204 222.411 93.7222 222.338 93.9424 222.194 cv
cp
94.8843 217.718 mo
95.2041 218.215 95.3643 218.995 95.3643 220.059 cv
95.3643 220.794 95.2881 221.384 95.1362 221.829 cv
94.9844 222.272 94.7524 222.593 94.4404 222.789 cv
94.1284 222.984 93.7163 223.083 93.2041 223.083 cv
92.436 223.083 91.688 222.878 90.9604 222.471 cv
90.9844 222.734 90.9961 222.975 90.9961 223.19 cv
90.9844 223.623 li
90.9844 225.387 li
90.228 225.387 li
90.228 217.13 li
90.8521 217.13 li
90.9243 218.09 li
91.2764 217.739 91.6621 217.465 92.082 217.269 cv
92.5024 217.073 92.916 216.975 93.3242 216.975 cv
94.0444 216.975 94.564 217.223 94.8843 217.718 cv
cp
f
101.476 217.154 mo
101.404 217.707 li
100.316 217.659 99.4883 217.634 98.9204 217.634 cv
98.5679 217.634 98.3042 217.654 98.1284 217.694 cv
97.9521 217.734 97.8223 217.818 97.7383 217.946 cv
97.6543 218.075 97.6123 218.278 97.6123 218.559 cv
97.6123 218.887 97.6802 219.115 97.8164 219.243 cv
97.9521 219.371 98.1802 219.466 98.5 219.53 cv
100.288 219.867 li
100.752 219.962 101.092 220.128 101.308 220.364 cv
101.524 220.601 101.632 220.955 101.632 221.426 cv
101.632 221.891 101.546 222.241 101.374 222.477 cv
101.202 222.712 100.948 222.871 100.612 222.951 cv
100.276 223.03 99.812 223.07 99.2202 223.07 cv
98.4282 223.07 97.688 223.019 97 222.915 cv
97.0601 222.351 li
97.5884 222.398 98.1401 222.422 98.7163 222.422 cv
99.0884 222.422 li
99.5762 222.415 99.9419 222.387 100.186 222.338 cv
100.43 222.291 100.608 222.197 100.72 222.057 cv
100.832 221.917 100.888 221.707 100.888 221.426 cv
100.888 221.114 100.812 220.895 100.66 220.767 cv
100.508 220.639 100.268 220.542 99.9404 220.479 cv
98.1641 220.143 li
97.708 220.055 97.3784 219.889 97.1743 219.645 cv
96.9702 219.4 96.8682 219.039 96.8682 218.559 cv
96.8682 218.119 96.9419 217.785 97.0903 217.557 cv
97.2383 217.329 97.46 217.174 97.7563 217.094 cv
98.0522 217.015 98.46 216.975 98.98 216.975 cv
99.8042 216.975 100.636 217.035 101.476 217.154 cv
cp
f
108.004 217.13 mo
108.004 222.938 li
107.404 222.938 li
107.344 222.026 li
106.888 222.387 106.45 222.652 106.03 222.825 cv
105.61 222.997 105.188 223.083 104.764 223.083 cv
104.244 223.083 103.852 222.948 103.588 222.681 cv
103.324 222.413 103.192 222.019 103.192 221.499 cv
103.192 217.13 li
103.948 217.13 li
103.948 221.294 li
103.948 221.695 104.032 221.982 104.2 222.159 cv
104.368 222.334 104.64 222.422 105.016 222.422 cv
105.344 222.422 105.674 222.349 106.006 222.201 cv
106.338 222.053 106.752 221.811 107.248 221.475 cv
107.248 217.13 li
108.004 217.13 li
cp
f
118.388 217.382 mo
118.652 217.654 118.784 218.051 118.784 218.57 cv
118.784 222.938 li
118.028 222.938 li
118.028 218.774 li
118.02 218.375 117.934 218.084 117.77 217.904 cv
117.606 217.725 117.348 217.634 116.996 217.634 cv
116.676 217.634 116.37 217.708 116.078 217.856 cv
115.786 218.004 115.384 218.271 114.872 218.654 cv
114.872 222.938 li
114.14 222.938 li
114.14 218.774 li
114.14 218.375 114.056 218.084 113.888 217.904 cv
113.72 217.725 113.46 217.634 113.108 217.634 cv
112.796 217.634 112.49 217.708 112.19 217.856 cv
111.89 218.004 111.488 218.267 110.984 218.643 cv
110.984 222.938 li
110.228 222.938 li
110.228 217.13 li
110.852 217.13 li
110.9 218.103 li
111.74 217.351 112.556 216.975 113.348 216.975 cv
114.172 216.975 114.664 217.343 114.824 218.079 cv
115.656 217.343 116.464 216.975 117.248 216.975 cv
117.744 216.975 118.124 217.111 118.388 217.382 cv
cp
f
124.894 221.451 mo
124.994 221.794 125.152 222.041 125.368 222.188 cv
125.584 222.336 125.876 222.411 126.244 222.411 cv
126.572 222.411 126.878 222.343 127.162 222.207 cv
127.446 222.07 127.816 221.834 128.272 221.499 cv
128.272 218.066 li
127.832 217.922 127.466 217.816 127.174 217.749 cv
126.882 217.681 126.584 217.646 126.28 217.646 cv
125.896 217.646 125.594 217.718 125.374 217.862 cv
125.154 218.006 124.994 218.249 124.894 218.588 cv
124.794 218.929 124.744 219.403 124.744 220.01 cv
124.744 220.626 124.794 221.106 124.894 221.451 cv
cp
129.028 214.539 mo
129.028 222.938 li
128.44 222.938 li
128.368 222.05 li
127.56 222.739 126.78 223.083 126.028 223.083 cv
125.292 223.083 124.762 222.838 124.438 222.351 cv
124.114 221.863 123.952 221.086 123.952 220.022 cv
123.952 219.278 124.028 218.685 124.18 218.24 cv
124.332 217.796 124.566 217.475 124.882 217.274 cv
125.198 217.075 125.612 216.975 126.124 216.975 cv
126.836 216.975 127.568 217.163 128.32 217.539 cv
128.288 217.274 128.272 216.895 128.272 216.398 cv
128.272 214.539 li
129.028 214.539 li
cp
f
132.494 217.856 mo
132.226 218.004 132.034 218.249 131.918 218.588 cv
131.802 218.929 131.744 219.411 131.744 220.035 cv
131.744 220.659 131.802 221.141 131.918 221.48 cv
132.034 221.821 132.226 222.064 132.494 222.212 cv
132.762 222.361 133.136 222.435 133.616 222.435 cv
134.096 222.435 134.47 222.361 134.738 222.212 cv
135.006 222.064 135.198 221.821 135.314 221.48 cv
135.43 221.141 135.488 220.659 135.488 220.035 cv
135.488 219.411 135.43 218.929 135.314 218.588 cv
135.198 218.249 135.006 218.004 134.738 217.856 cv
134.47 217.708 134.096 217.634 133.616 217.634 cv
133.136 217.634 132.762 217.708 132.494 217.856 cv
cp
135.182 217.274 mo
135.57 217.475 135.85 217.796 136.022 218.24 cv
136.194 218.685 136.28 219.283 136.28 220.035 cv
136.28 220.787 136.194 221.383 136.022 221.822 cv
135.85 222.263 135.57 222.583 135.182 222.783 cv
134.794 222.982 134.272 223.083 133.616 223.083 cv
132.952 223.083 132.428 222.982 132.044 222.783 cv
131.66 222.583 131.38 222.263 131.204 221.822 cv
131.028 221.383 130.94 220.787 130.94 220.035 cv
130.94 219.283 131.028 218.685 131.204 218.24 cv
131.38 217.796 131.662 217.475 132.05 217.274 cv
132.438 217.075 132.96 216.975 133.616 216.975 cv
134.272 216.975 134.794 217.075 135.182 217.274 cv
cp
f
138.996 221.499 mo
138.996 221.771 139.068 221.979 139.212 222.123 cv
139.356 222.267 139.568 222.338 139.848 222.338 cv
140.46 222.338 li
140.544 222.915 li
140.456 222.946 140.31 222.975 140.106 222.999 cv
139.902 223.022 139.728 223.035 139.584 223.035 cv
139.168 223.035 138.84 222.913 138.6 222.668 cv
138.36 222.424 138.24 222.083 138.24 221.643 cv
138.24 214.539 li
138.996 214.539 li
138.996 221.499 li
cp
f
142.494 217.856 mo
142.226 218.004 142.034 218.249 141.918 218.588 cv
141.802 218.929 141.744 219.411 141.744 220.035 cv
141.744 220.659 141.802 221.141 141.918 221.48 cv
142.034 221.821 142.226 222.064 142.494 222.212 cv
142.762 222.361 143.136 222.435 143.616 222.435 cv
144.096 222.435 144.47 222.361 144.738 222.212 cv
145.006 222.064 145.198 221.821 145.314 221.48 cv
145.43 221.141 145.488 220.659 145.488 220.035 cv
145.488 219.411 145.43 218.929 145.314 218.588 cv
145.198 218.249 145.006 218.004 144.738 217.856 cv
144.47 217.708 144.096 217.634 143.616 217.634 cv
143.136 217.634 142.762 217.708 142.494 217.856 cv
cp
145.182 217.274 mo
145.57 217.475 145.85 217.796 146.022 218.24 cv
146.194 218.685 146.28 219.283 146.28 220.035 cv
146.28 220.787 146.194 221.383 146.022 221.822 cv
145.85 222.263 145.57 222.583 145.182 222.783 cv
144.794 222.982 144.272 223.083 143.616 223.083 cv
142.952 223.083 142.428 222.982 142.044 222.783 cv
141.66 222.583 141.38 222.263 141.204 221.822 cv
141.028 221.383 140.94 220.787 140.94 220.035 cv
140.94 219.283 141.028 218.685 141.204 218.24 cv
141.38 217.796 141.662 217.475 142.05 217.274 cv
142.438 217.075 142.96 216.975 143.616 216.975 cv
144.272 216.975 144.794 217.075 145.182 217.274 cv
cp
f
151.72 216.975 mo
151.624 217.694 li
151.336 217.694 li
151 217.694 150.662 217.765 150.322 217.904 cv
149.982 218.044 149.54 218.271 148.996 218.583 cv
148.996 222.938 li
148.228 222.938 li
148.228 217.13 li
148.816 217.13 li
148.9 218.103 li
149.844 217.351 150.7 216.975 151.468 216.975 cv
151.72 216.975 li
cp
f
160.476 217.154 mo
160.404 217.707 li
159.316 217.659 158.488 217.634 157.92 217.634 cv
157.568 217.634 157.304 217.654 157.128 217.694 cv
156.952 217.734 156.822 217.818 156.738 217.946 cv
156.654 218.075 156.612 218.278 156.612 218.559 cv
156.612 218.887 156.68 219.115 156.816 219.243 cv
156.952 219.371 157.18 219.466 157.5 219.53 cv
159.288 219.867 li
159.752 219.962 160.092 220.128 160.308 220.364 cv
160.524 220.601 160.632 220.955 160.632 221.426 cv
160.632 221.891 160.546 222.241 160.374 222.477 cv
160.202 222.712 159.948 222.871 159.612 222.951 cv
159.276 223.03 158.812 223.07 158.22 223.07 cv
157.428 223.07 156.688 223.019 156 222.915 cv
156.06 222.351 li
156.588 222.398 157.14 222.422 157.716 222.422 cv
158.088 222.422 li
158.576 222.415 158.942 222.387 159.186 222.338 cv
159.43 222.291 159.608 222.197 159.72 222.057 cv
159.832 221.917 159.888 221.707 159.888 221.426 cv
159.888 221.114 159.812 220.895 159.66 220.767 cv
159.508 220.639 159.268 220.542 158.94 220.479 cv
157.164 220.143 li
156.708 220.055 156.378 219.889 156.174 219.645 cv
155.97 219.4 155.868 219.039 155.868 218.559 cv
155.868 218.119 155.942 217.785 156.09 217.557 cv
156.238 217.329 156.46 217.174 156.756 217.094 cv
157.052 217.015 157.46 216.975 157.98 216.975 cv
158.804 216.975 159.636 217.035 160.476 217.154 cv
cp
f
163.032 222.938 mo
162.276 222.938 li
162.276 217.13 li
163.032 217.13 li
163.032 222.938 li
cp
163.08 214.935 mo
163.08 215.63 li
163.08 215.798 162.996 215.882 162.828 215.882 cv
162.48 215.882 li
162.312 215.882 162.228 215.798 162.228 215.63 cv
162.228 214.935 li
162.228 214.767 162.312 214.683 162.48 214.683 cv
162.828 214.683 li
162.996 214.683 163.08 214.767 163.08 214.935 cv
cp
f
166.38 217.73 mo
166.38 221.499 li
166.38 221.787 166.45 221.999 166.59 222.134 cv
166.73 222.271 166.944 222.338 167.232 222.338 cv
168.18 222.338 li
168.276 222.915 li
168.108 222.946 167.898 222.975 167.646 222.999 cv
167.394 223.022 167.2 223.035 167.064 223.035 cv
166.584 223.035 166.224 222.911 165.984 222.663 cv
165.744 222.415 165.624 222.055 165.624 221.583 cv
165.624 217.73 li
164.568 217.73 li
164.568 217.19 li
165.624 217.13 li
165.624 215.367 li
166.38 215.367 li
166.38 217.13 li
168.348 217.13 li
168.348 217.73 li
166.38 217.73 li
cp
f
174.886 222.099 mo
175.314 221.922 175.696 221.687 176.032 221.391 cv
176.032 219.962 li
173.548 219.986 li
172.964 220.01 172.672 220.311 172.672 220.887 cv
172.672 221.391 li
172.672 221.727 172.758 221.973 172.93 222.128 cv
173.102 222.285 173.368 222.362 173.728 222.362 cv
174.072 222.362 174.458 222.274 174.886 222.099 cv
cp
176.338 217.389 mo
176.646 217.665 176.8 218.123 176.8 218.763 cv
176.8 222.938 li
176.2 222.938 li
176.104 221.918 li
175.816 222.207 175.444 222.464 174.988 222.692 cv
174.532 222.92 174.056 223.035 173.56 223.035 cv
173.048 223.035 172.644 222.898 172.348 222.626 cv
172.052 222.354 171.904 221.966 171.904 221.462 cv
171.904 220.791 li
171.904 220.343 172.036 219.995 172.3 219.747 cv
172.564 219.499 172.94 219.375 173.428 219.375 cv
176.032 219.375 li
176.032 218.763 li
176.032 218.378 175.942 218.095 175.762 217.911 cv
175.582 217.727 175.26 217.634 174.796 217.634 cv
174.108 217.634 173.248 217.69 172.216 217.802 cv
172.144 217.238 li
173.304 217.063 174.236 216.975 174.94 216.975 cv
175.564 216.975 176.03 217.112 176.338 217.389 cv
cp
f
187.388 217.382 mo
187.652 217.654 187.784 218.051 187.784 218.57 cv
187.784 222.938 li
187.028 222.938 li
187.028 218.774 li
187.02 218.375 186.934 218.084 186.77 217.904 cv
186.606 217.725 186.348 217.634 185.996 217.634 cv
185.676 217.634 185.37 217.708 185.078 217.856 cv
184.786 218.004 184.384 218.271 183.872 218.654 cv
183.872 222.938 li
183.14 222.938 li
183.14 218.774 li
183.14 218.375 183.056 218.084 182.888 217.904 cv
182.72 217.725 182.46 217.634 182.108 217.634 cv
181.796 217.634 181.49 217.708 181.19 217.856 cv
180.89 218.004 180.488 218.267 179.984 218.643 cv
179.984 222.938 li
179.228 222.938 li
179.228 217.13 li
179.852 217.13 li
179.9 218.103 li
180.74 217.351 181.556 216.975 182.348 216.975 cv
183.172 216.975 183.664 217.343 183.824 218.079 cv
184.656 217.343 185.464 216.975 186.248 216.975 cv
186.744 216.975 187.124 217.111 187.388 217.382 cv
cp
f
191.506 217.838 mo
191.246 217.975 191.056 218.198 190.936 218.51 cv
190.816 218.822 190.748 219.254 190.732 219.807 cv
193.456 219.807 li
193.952 219.807 194.2 219.491 194.2 218.858 cv
194.2 218.426 194.074 218.114 193.822 217.922 cv
193.57 217.73 193.156 217.634 192.58 217.634 cv
192.124 217.634 191.766 217.703 191.506 217.838 cv
cp
194.752 222.278 mo
194.836 222.794 li
194.604 222.883 194.272 222.952 193.84 223.004 cv
193.408 223.057 193.008 223.083 192.64 223.083 cv
191.984 223.083 191.46 222.98 191.068 222.776 cv
190.676 222.572 190.39 222.249 190.21 221.805 cv
190.03 221.36 189.94 220.763 189.94 220.01 cv
189.94 219.25 190.028 218.65 190.204 218.21 cv
190.38 217.771 190.656 217.455 191.032 217.263 cv
191.408 217.07 191.912 216.975 192.544 216.975 cv
193.376 216.975 193.988 217.128 194.38 217.437 cv
194.772 217.745 194.968 218.21 194.968 218.834 cv
194.968 219.883 194.524 220.406 193.636 220.406 cv
190.744 220.406 li
190.768 220.935 190.854 221.342 191.002 221.63 cv
191.15 221.918 191.362 222.123 191.638 222.243 cv
191.914 222.362 192.284 222.422 192.748 222.422 cv
193.348 222.422 194.016 222.375 194.752 222.278 cv
cp
f
197.38 217.73 mo
197.38 221.499 li
197.38 221.787 197.45 221.999 197.59 222.134 cv
197.73 222.271 197.944 222.338 198.232 222.338 cv
199.18 222.338 li
199.276 222.915 li
199.108 222.946 198.898 222.975 198.646 222.999 cv
198.394 223.022 198.2 223.035 198.064 223.035 cv
197.584 223.035 197.224 222.911 196.984 222.663 cv
196.744 222.415 196.624 222.055 196.624 221.583 cv
196.624 217.73 li
195.568 217.73 li
195.568 217.19 li
196.624 217.13 li
196.624 215.367 li
197.38 215.367 li
197.38 217.13 li
199.348 217.13 li
199.348 217.73 li
197.38 217.73 li
cp
f
200.894 221.721 mo
200.938 221.765 200.96 221.843 200.96 221.955 cv
200.96 222.723 li
200.944 223.362 200.828 223.938 200.612 224.451 cv
200.252 224.342 li
200.316 223.831 200.348 223.362 200.348 222.938 cv
200.186 222.873 li
200.132 222.687 li
200.132 221.955 li
200.14 221.843 200.166 221.765 200.21 221.721 cv
200.254 221.677 200.328 221.654 200.432 221.654 cv
200.672 221.654 li
200.776 221.654 200.85 221.677 200.894 221.721 cv
cp
f
209.588 217.035 mo
209.916 217.075 210.204 217.143 210.452 217.238 cv
210.332 217.73 li
209.908 217.667 209.392 217.634 208.784 217.634 cv
208.264 217.634 207.858 217.707 207.566 217.851 cv
207.274 217.995 207.062 218.239 206.93 218.583 cv
206.798 218.927 206.732 219.411 206.732 220.035 cv
206.732 220.659 206.798 221.143 206.93 221.486 cv
207.062 221.831 207.274 222.073 207.566 222.212 cv
207.858 222.353 208.264 222.422 208.784 222.422 cv
209.456 222.422 210.02 222.378 210.476 222.291 cv
210.56 222.818 li
209.968 222.994 209.336 223.083 208.664 223.083 cv
207.992 223.083 207.458 222.984 207.062 222.789 cv
206.666 222.593 206.38 222.274 206.204 221.834 cv
206.028 221.395 205.94 220.794 205.94 220.035 cv
205.94 219.274 206.028 218.674 206.204 218.234 cv
206.38 217.794 206.666 217.475 207.062 217.274 cv
207.458 217.075 207.992 216.975 208.664 216.975 cv
208.952 216.975 209.26 216.995 209.588 217.035 cv
cp
f
213.494 217.856 mo
213.226 218.004 213.034 218.249 212.918 218.588 cv
212.802 218.929 212.744 219.411 212.744 220.035 cv
212.744 220.659 212.802 221.141 212.918 221.48 cv
213.034 221.821 213.226 222.064 213.494 222.212 cv
213.762 222.361 214.136 222.435 214.616 222.435 cv
215.096 222.435 215.47 222.361 215.738 222.212 cv
216.006 222.064 216.198 221.821 216.314 221.48 cv
216.43 221.141 216.488 220.659 216.488 220.035 cv
216.488 219.411 216.43 218.929 216.314 218.588 cv
216.198 218.249 216.006 218.004 215.738 217.856 cv
215.47 217.708 215.096 217.634 214.616 217.634 cv
214.136 217.634 213.762 217.708 213.494 217.856 cv
cp
216.182 217.274 mo
216.57 217.475 216.85 217.796 217.022 218.24 cv
217.194 218.685 217.28 219.283 217.28 220.035 cv
217.28 220.787 217.194 221.383 217.022 221.822 cv
216.85 222.263 216.57 222.583 216.182 222.783 cv
215.794 222.982 215.272 223.083 214.616 223.083 cv
213.952 223.083 213.428 222.982 213.044 222.783 cv
212.66 222.583 212.38 222.263 212.204 221.822 cv
212.028 221.383 211.94 220.787 211.94 220.035 cv
211.94 219.283 212.028 218.685 212.204 218.24 cv
212.38 217.796 212.662 217.475 213.05 217.274 cv
213.438 217.075 213.96 216.975 214.616 216.975 cv
215.272 216.975 215.794 217.075 216.182 217.274 cv
cp
f
223.776 217.382 mo
224.04 217.654 224.172 218.051 224.172 218.57 cv
224.172 222.938 li
223.416 222.938 li
223.416 218.774 li
223.416 218.367 223.338 218.075 223.182 217.898 cv
223.026 217.723 222.768 217.634 222.408 217.634 cv
222.056 217.634 221.702 217.712 221.346 217.869 cv
220.99 218.024 220.536 218.283 219.984 218.643 cv
219.996 222.938 li
219.228 222.938 li
219.228 217.13 li
219.864 217.13 li
219.912 218.09 li
220.88 217.347 221.78 216.975 222.612 216.975 cv
223.124 216.975 223.512 217.111 223.776 217.382 cv
cp
f
230.476 217.154 mo
230.404 217.707 li
229.316 217.659 228.488 217.634 227.92 217.634 cv
227.568 217.634 227.304 217.654 227.128 217.694 cv
226.952 217.734 226.822 217.818 226.738 217.946 cv
226.654 218.075 226.612 218.278 226.612 218.559 cv
226.612 218.887 226.68 219.115 226.816 219.243 cv
226.952 219.371 227.18 219.466 227.5 219.53 cv
229.288 219.867 li
229.752 219.962 230.092 220.128 230.308 220.364 cv
230.524 220.601 230.632 220.955 230.632 221.426 cv
230.632 221.891 230.546 222.241 230.374 222.477 cv
230.202 222.712 229.948 222.871 229.612 222.951 cv
229.276 223.03 228.812 223.07 228.22 223.07 cv
227.428 223.07 226.688 223.019 226 222.915 cv
226.06 222.351 li
226.588 222.398 227.14 222.422 227.716 222.422 cv
228.088 222.422 li
228.576 222.415 228.942 222.387 229.186 222.338 cv
229.43 222.291 229.608 222.197 229.72 222.057 cv
229.832 221.917 229.888 221.707 229.888 221.426 cv
229.888 221.114 229.812 220.895 229.66 220.767 cv
229.508 220.639 229.268 220.542 228.94 220.479 cv
227.164 220.143 li
226.708 220.055 226.378 219.889 226.174 219.645 cv
225.97 219.4 225.868 219.039 225.868 218.559 cv
225.868 218.119 225.942 217.785 226.09 217.557 cv
226.238 217.329 226.46 217.174 226.756 217.094 cv
227.052 217.015 227.46 216.975 227.98 216.975 cv
228.804 216.975 229.636 217.035 230.476 217.154 cv
cp
f
233.506 217.838 mo
233.246 217.975 233.056 218.198 232.936 218.51 cv
232.816 218.822 232.748 219.254 232.732 219.807 cv
235.456 219.807 li
235.952 219.807 236.2 219.491 236.2 218.858 cv
236.2 218.426 236.074 218.114 235.822 217.922 cv
235.57 217.73 235.156 217.634 234.58 217.634 cv
234.124 217.634 233.766 217.703 233.506 217.838 cv
cp
236.752 222.278 mo
236.836 222.794 li
236.604 222.883 236.272 222.952 235.84 223.004 cv
235.408 223.057 235.008 223.083 234.64 223.083 cv
233.984 223.083 233.46 222.98 233.068 222.776 cv
232.676 222.572 232.39 222.249 232.21 221.805 cv
232.03 221.36 231.94 220.763 231.94 220.01 cv
231.94 219.25 232.028 218.65 232.204 218.21 cv
232.38 217.771 232.656 217.455 233.032 217.263 cv
233.408 217.07 233.912 216.975 234.544 216.975 cv
235.376 216.975 235.988 217.128 236.38 217.437 cv
236.772 217.745 236.968 218.21 236.968 218.834 cv
236.968 219.883 236.524 220.406 235.636 220.406 cv
232.744 220.406 li
232.768 220.935 232.854 221.342 233.002 221.63 cv
233.15 221.918 233.362 222.123 233.638 222.243 cv
233.914 222.362 234.284 222.422 234.748 222.422 cv
235.348 222.422 236.016 222.375 236.752 222.278 cv
cp
f
241.588 217.035 mo
241.916 217.075 242.204 217.143 242.452 217.238 cv
242.332 217.73 li
241.908 217.667 241.392 217.634 240.784 217.634 cv
240.264 217.634 239.858 217.707 239.566 217.851 cv
239.274 217.995 239.062 218.239 238.93 218.583 cv
238.798 218.927 238.732 219.411 238.732 220.035 cv
238.732 220.659 238.798 221.143 238.93 221.486 cv
239.062 221.831 239.274 222.073 239.566 222.212 cv
239.858 222.353 240.264 222.422 240.784 222.422 cv
241.456 222.422 242.02 222.378 242.476 222.291 cv
242.56 222.818 li
241.968 222.994 241.336 223.083 240.664 223.083 cv
239.992 223.083 239.458 222.984 239.062 222.789 cv
238.666 222.593 238.38 222.274 238.204 221.834 cv
238.028 221.395 237.94 220.794 237.94 220.035 cv
237.94 219.274 238.028 218.674 238.204 218.234 cv
238.38 217.794 238.666 217.475 239.062 217.274 cv
239.458 217.075 239.992 216.975 240.664 216.975 cv
240.952 216.975 241.26 216.995 241.588 217.035 cv
cp
f
245.38 217.73 mo
245.38 221.499 li
245.38 221.787 245.45 221.999 245.59 222.134 cv
245.73 222.271 245.944 222.338 246.232 222.338 cv
247.18 222.338 li
247.276 222.915 li
247.108 222.946 246.898 222.975 246.646 222.999 cv
246.394 223.022 246.2 223.035 246.064 223.035 cv
245.584 223.035 245.224 222.911 244.984 222.663 cv
244.744 222.415 244.624 222.055 244.624 221.583 cv
244.624 217.73 li
243.568 217.73 li
243.568 217.19 li
244.624 217.13 li
244.624 215.367 li
245.38 215.367 li
245.38 217.13 li
247.348 217.13 li
247.348 217.73 li
245.38 217.73 li
cp
f
249.506 217.838 mo
249.246 217.975 249.056 218.198 248.936 218.51 cv
248.816 218.822 248.748 219.254 248.732 219.807 cv
251.456 219.807 li
251.952 219.807 252.2 219.491 252.2 218.858 cv
252.2 218.426 252.074 218.114 251.822 217.922 cv
251.57 217.73 251.156 217.634 250.58 217.634 cv
250.124 217.634 249.766 217.703 249.506 217.838 cv
cp
252.752 222.278 mo
252.836 222.794 li
252.604 222.883 252.272 222.952 251.84 223.004 cv
251.408 223.057 251.008 223.083 250.64 223.083 cv
249.984 223.083 249.46 222.98 249.068 222.776 cv
248.676 222.572 248.39 222.249 248.21 221.805 cv
248.03 221.36 247.94 220.763 247.94 220.01 cv
247.94 219.25 248.028 218.65 248.204 218.21 cv
248.38 217.771 248.656 217.455 249.032 217.263 cv
249.408 217.07 249.912 216.975 250.544 216.975 cv
251.376 216.975 251.988 217.128 252.38 217.437 cv
252.772 217.745 252.968 218.21 252.968 218.834 cv
252.968 219.883 252.524 220.406 251.636 220.406 cv
248.744 220.406 li
248.768 220.935 248.854 221.342 249.002 221.63 cv
249.15 221.918 249.362 222.123 249.638 222.243 cv
249.914 222.362 250.284 222.422 250.748 222.422 cv
251.348 222.422 252.016 222.375 252.752 222.278 cv
cp
f
255.38 217.73 mo
255.38 221.499 li
255.38 221.787 255.45 221.999 255.59 222.134 cv
255.73 222.271 255.944 222.338 256.232 222.338 cv
257.18 222.338 li
257.276 222.915 li
257.108 222.946 256.898 222.975 256.646 222.999 cv
256.394 223.022 256.2 223.035 256.064 223.035 cv
255.584 223.035 255.224 222.911 254.984 222.663 cv
254.744 222.415 254.624 222.055 254.624 221.583 cv
254.624 217.73 li
253.568 217.73 li
253.568 217.19 li
254.624 217.13 li
254.624 215.367 li
255.38 215.367 li
255.38 217.13 li
257.348 217.13 li
257.348 217.73 li
255.38 217.73 li
cp
f
263.004 217.13 mo
263.004 222.938 li
262.404 222.938 li
262.344 222.026 li
261.888 222.387 261.45 222.652 261.03 222.825 cv
260.61 222.997 260.188 223.083 259.764 223.083 cv
259.244 223.083 258.852 222.948 258.588 222.681 cv
258.324 222.413 258.192 222.019 258.192 221.499 cv
258.192 217.13 li
258.948 217.13 li
258.948 221.294 li
258.948 221.695 259.032 221.982 259.2 222.159 cv
259.368 222.334 259.64 222.422 260.016 222.422 cv
260.344 222.422 260.674 222.349 261.006 222.201 cv
261.338 222.053 261.752 221.811 262.248 221.475 cv
262.248 217.13 li
263.004 217.13 li
cp
f
268.72 216.975 mo
268.624 217.694 li
268.336 217.694 li
268 217.694 267.662 217.765 267.322 217.904 cv
266.982 218.044 266.54 218.271 265.996 218.583 cv
265.996 222.938 li
265.228 222.938 li
265.228 217.13 li
265.816 217.13 li
265.9 218.103 li
266.844 217.351 267.7 216.975 268.468 216.975 cv
268.72 216.975 li
cp
f
51.8862 236.499 mo
52.314 236.322 52.6963 236.086 53.0322 235.791 cv
53.0322 234.362 li
50.5483 234.386 li
49.9644 234.41 49.6724 234.71 49.6724 235.287 cv
49.6724 235.791 li
49.6724 236.126 49.7583 236.373 49.9302 236.528 cv
50.1021 236.685 50.3682 236.762 50.728 236.762 cv
51.0723 236.762 51.458 236.674 51.8862 236.499 cv
cp
53.3384 231.789 mo
53.646 232.064 53.8003 232.522 53.8003 233.163 cv
53.8003 237.338 li
53.2002 237.338 li
53.104 236.318 li
52.8164 236.606 52.4443 236.864 51.9883 237.092 cv
51.5322 237.32 51.0562 237.435 50.5601 237.435 cv
50.0483 237.435 49.644 237.298 49.3481 237.026 cv
49.0522 236.754 48.9043 236.366 48.9043 235.862 cv
48.9043 235.19 li
48.9043 234.743 49.0361 234.395 49.3003 234.146 cv
49.5645 233.898 49.9399 233.774 50.4282 233.774 cv
53.0322 233.774 li
53.0322 233.163 li
53.0322 232.778 52.9424 232.495 52.7622 232.311 cv
52.582 232.126 52.2603 232.034 51.7964 232.034 cv
51.1079 232.034 50.248 232.09 49.2163 232.202 cv
49.144 231.638 li
50.3042 231.462 51.2363 231.375 51.9404 231.375 cv
52.5645 231.375 53.0303 231.512 53.3384 231.789 cv
cp
f
56.894 235.851 mo
56.9941 236.194 57.1523 236.44 57.3682 236.588 cv
57.584 236.736 57.876 236.811 58.2441 236.811 cv
58.5723 236.811 58.8779 236.743 59.1621 236.606 cv
59.4463 236.47 59.8164 236.234 60.272 235.898 cv
60.272 232.466 li
59.832 232.322 59.4663 232.216 59.1743 232.148 cv
58.8823 232.081 58.584 232.046 58.2803 232.046 cv
57.896 232.046 57.5942 232.118 57.374 232.262 cv
57.1543 232.406 56.9941 232.648 56.894 232.988 cv
56.7939 233.329 56.7441 233.803 56.7441 234.41 cv
56.7441 235.026 56.7939 235.506 56.894 235.851 cv
cp
61.0283 228.938 mo
61.0283 237.338 li
60.4404 237.338 li
60.3682 236.45 li
59.5601 237.139 58.7803 237.482 58.0283 237.482 cv
57.292 237.482 56.7622 237.238 56.438 236.75 cv
56.1143 236.263 55.9521 235.486 55.9521 234.422 cv
55.9521 233.678 56.0283 233.084 56.1802 232.64 cv
56.332 232.196 56.5659 231.875 56.8823 231.674 cv
57.1982 231.475 57.6123 231.375 58.124 231.375 cv
58.8359 231.375 59.5684 231.563 60.3203 231.938 cv
60.2881 231.674 60.272 231.294 60.272 230.798 cv
60.272 228.938 li
61.0283 228.938 li
cp
f
64.0322 237.338 mo
63.2764 237.338 li
63.2764 231.53 li
64.0322 231.53 li
64.0322 237.338 li
cp
64.0801 229.334 mo
64.0801 230.03 li
64.0801 230.198 63.9961 230.282 63.8281 230.282 cv
63.48 230.282 li
63.312 230.282 63.228 230.198 63.228 230.03 cv
63.228 229.334 li
63.228 229.167 63.312 229.083 63.48 229.083 cv
63.8281 229.083 li
63.9961 229.083 64.0801 229.167 64.0801 229.334 cv
cp
f
69.9424 236.594 mo
70.1621 236.45 70.3242 236.208 70.4282 235.868 cv
70.5322 235.528 70.584 235.054 70.584 234.446 cv
70.584 233.854 70.5342 233.384 70.4341 233.037 cv
70.334 232.688 70.1782 232.437 69.9663 232.28 cv
69.7544 232.125 69.4683 232.046 69.1084 232.046 cv
68.7803 232.046 68.4541 232.125 68.1304 232.28 cv
67.8062 232.437 67.4243 232.694 66.9844 233.054 cv
66.9844 236.378 li
67.4482 236.53 67.8281 236.641 68.124 236.708 cv
68.4199 236.776 68.7241 236.811 69.0361 236.811 cv
69.4204 236.811 69.7222 236.738 69.9424 236.594 cv
cp
70.8843 232.118 mo
71.2041 232.615 71.3643 233.395 71.3643 234.458 cv
71.3643 235.194 71.2881 235.784 71.1362 236.229 cv
70.9844 236.672 70.7524 236.993 70.4404 237.188 cv
70.1284 237.384 69.7163 237.482 69.2041 237.482 cv
68.436 237.482 67.688 237.278 66.9604 236.871 cv
66.9844 237.134 66.9961 237.375 66.9961 237.59 cv
66.9844 238.022 li
66.9844 239.787 li
66.228 239.787 li
66.228 231.53 li
66.8521 231.53 li
66.9243 232.49 li
67.2764 232.139 67.6621 231.865 68.082 231.668 cv
68.5024 231.473 68.916 231.375 69.3242 231.375 cv
70.0444 231.375 70.564 231.623 70.8843 232.118 cv
cp
f
74.0322 237.338 mo
73.2764 237.338 li
73.2764 231.53 li
74.0322 231.53 li
74.0322 237.338 li
cp
74.0801 229.334 mo
74.0801 230.03 li
74.0801 230.198 73.9961 230.282 73.8281 230.282 cv
73.48 230.282 li
73.312 230.282 73.228 230.198 73.228 230.03 cv
73.228 229.334 li
73.228 229.167 73.312 229.083 73.48 229.083 cv
73.8281 229.083 li
73.9961 229.083 74.0801 229.167 74.0801 229.334 cv
cp
f
80.4761 231.554 mo
80.4043 232.106 li
79.3159 232.059 78.4883 232.034 77.9204 232.034 cv
77.5679 232.034 77.3042 232.054 77.1284 232.094 cv
76.9521 232.134 76.8223 232.218 76.7383 232.346 cv
76.6543 232.475 76.6123 232.678 76.6123 232.958 cv
76.6123 233.287 76.6802 233.515 76.8164 233.643 cv
76.9521 233.771 77.1802 233.866 77.5 233.93 cv
79.2881 234.267 li
79.752 234.362 80.0923 234.528 80.3081 234.764 cv
80.5244 235 80.6323 235.354 80.6323 235.826 cv
80.6323 236.291 80.5464 236.641 80.374 236.876 cv
80.2021 237.112 79.9482 237.271 79.6123 237.351 cv
79.2764 237.43 78.812 237.47 78.2202 237.47 cv
77.4282 237.47 76.688 237.418 76 237.314 cv
76.0601 236.75 li
76.5884 236.798 77.1401 236.822 77.7163 236.822 cv
78.0884 236.822 li
78.5762 236.814 78.9419 236.787 79.186 236.738 cv
79.4302 236.69 79.6079 236.597 79.7202 236.457 cv
79.832 236.316 79.8882 236.106 79.8882 235.826 cv
79.8882 235.514 79.812 235.294 79.6602 235.167 cv
79.5083 235.039 79.2681 234.942 78.9404 234.878 cv
77.1641 234.542 li
76.708 234.455 76.3784 234.289 76.1743 234.044 cv
75.9702 233.8 75.8682 233.438 75.8682 232.958 cv
75.8682 232.519 75.9419 232.185 76.0903 231.957 cv
76.2383 231.729 76.46 231.574 76.7563 231.494 cv
77.0522 231.415 77.46 231.375 77.98 231.375 cv
78.8042 231.375 79.6362 231.435 80.4761 231.554 cv
cp
f
85.5884 231.435 mo
85.916 231.475 86.2041 231.542 86.4521 231.638 cv
86.332 232.13 li
85.9082 232.066 85.3921 232.034 84.7842 232.034 cv
84.2642 232.034 83.8579 232.106 83.5664 232.25 cv
83.2739 232.395 83.062 232.639 82.9302 232.982 cv
82.7983 233.327 82.7324 233.811 82.7324 234.435 cv
82.7324 235.059 82.7983 235.542 82.9302 235.886 cv
83.062 236.23 83.2739 236.473 83.5664 236.612 cv
83.8579 236.752 84.2642 236.822 84.7842 236.822 cv
85.4561 236.822 86.02 236.778 86.4761 236.69 cv
86.5601 237.218 li
85.9683 237.394 85.3364 237.482 84.6641 237.482 cv
83.9922 237.482 83.458 237.384 83.062 237.188 cv
82.666 236.993 82.3799 236.674 82.2041 236.234 cv
82.0283 235.794 81.9404 235.194 81.9404 234.435 cv
81.9404 233.674 82.0283 233.074 82.2041 232.634 cv
82.3799 232.194 82.666 231.875 83.062 231.674 cv
83.458 231.475 83.9922 231.375 84.6641 231.375 cv
84.9521 231.375 85.2603 231.395 85.5884 231.435 cv
cp
f
89.0322 237.338 mo
88.2764 237.338 li
88.2764 231.53 li
89.0322 231.53 li
89.0322 237.338 li
cp
89.0801 229.334 mo
89.0801 230.03 li
89.0801 230.198 88.9961 230.282 88.8281 230.282 cv
88.48 230.282 li
88.312 230.282 88.228 230.198 88.228 230.03 cv
88.228 229.334 li
88.228 229.167 88.312 229.083 88.48 229.083 cv
88.8281 229.083 li
88.9961 229.083 89.0801 229.167 89.0801 229.334 cv
cp
f
95.7764 231.782 mo
96.04 232.054 96.1724 232.451 96.1724 232.97 cv
96.1724 237.338 li
95.416 237.338 li
95.416 233.174 li
95.416 232.767 95.3384 232.475 95.1821 232.298 cv
95.0264 232.123 94.7681 232.034 94.4082 232.034 cv
94.0562 232.034 93.7021 232.112 93.3462 232.269 cv
92.9902 232.424 92.5361 232.683 91.9844 233.042 cv
91.9961 237.338 li
91.228 237.338 li
91.228 231.53 li
91.8643 231.53 li
91.9121 232.49 li
92.8799 231.747 93.7803 231.375 94.6123 231.375 cv
95.124 231.375 95.5122 231.511 95.7764 231.782 cv
cp
f
101.78 234.158 mo
102.036 233.966 102.164 233.654 102.164 233.222 cv
102.164 232.774 102.036 232.455 101.78 232.262 cv
101.524 232.07 101.084 231.975 100.46 231.975 cv
99.8281 231.975 99.3823 232.07 99.1221 232.262 cv
98.8623 232.455 98.7324 232.774 98.7324 233.222 cv
98.7324 233.654 98.8643 233.966 99.1284 234.158 cv
99.3921 234.351 99.8364 234.446 100.46 234.446 cv
101.084 234.446 101.524 234.351 101.78 234.158 cv
cp
102.392 237.488 mo
102.336 237.364 102.238 237.269 102.098 237.2 cv
101.958 237.132 101.744 237.074 101.456 237.026 cv
99.2842 236.69 li
99.2363 236.727 li
98.9722 236.911 98.7881 237.094 98.6841 237.278 cv
98.5801 237.462 98.5283 237.71 98.5283 238.022 cv
98.5283 238.326 98.5884 238.558 98.708 238.718 cv
98.8281 238.878 99.0303 238.99 99.3145 239.054 cv
99.5981 239.118 100 239.15 100.52 239.15 cv
101.032 239.15 101.426 239.116 101.702 239.048 cv
101.978 238.98 102.176 238.866 102.296 238.707 cv
102.416 238.546 102.476 238.318 102.476 238.022 cv
102.476 237.79 102.448 237.612 102.392 237.488 cv
cp
103.52 231.962 mo
102.548 232.022 li
102.772 232.303 102.884 232.703 102.884 233.222 cv
102.884 233.854 102.7 234.314 102.332 234.603 cv
101.964 234.89 101.34 235.034 100.46 235.034 cv
99.9004 235.034 99.46 234.982 99.1401 234.878 cv
98.9961 235.079 98.9243 235.267 98.9243 235.442 cv
98.9243 235.603 98.978 235.738 99.0864 235.851 cv
99.1943 235.962 99.3604 236.039 99.584 236.079 cv
101.816 236.45 li
102.344 236.53 102.71 236.694 102.914 236.942 cv
103.118 237.19 103.22 237.558 103.22 238.046 cv
103.22 238.494 103.134 238.844 102.962 239.096 cv
102.79 239.348 102.51 239.528 102.122 239.636 cv
101.734 239.744 101.2 239.798 100.52 239.798 cv
99.832 239.798 99.29 239.744 98.894 239.636 cv
98.498 239.528 98.2144 239.35 98.042 239.103 cv
97.8701 238.854 97.7842 238.51 97.7842 238.07 cv
97.7842 237.687 97.8564 237.38 98 237.152 cv
98.144 236.924 98.4004 236.718 98.7681 236.534 cv
98.6001 236.446 98.4761 236.324 98.396 236.168 cv
98.3159 236.012 98.2764 235.847 98.2764 235.67 cv
98.2764 235.486 98.3159 235.309 98.396 235.136 cv
98.4761 234.964 98.5923 234.822 98.7441 234.71 cv
98.4883 234.566 98.3042 234.373 98.1924 234.128 cv
98.0801 233.884 98.0244 233.583 98.0244 233.222 cv
98.0244 232.574 98.208 232.104 98.5762 231.813 cv
98.9438 231.521 99.5723 231.375 100.46 231.375 cv
101.012 231.375 101.448 231.426 101.768 231.53 cv
103.568 231.53 li
103.52 231.962 li
cp
f
109.506 232.238 mo
109.246 232.375 109.056 232.598 108.936 232.91 cv
108.816 233.222 108.748 233.654 108.732 234.207 cv
111.456 234.207 li
111.952 234.207 112.2 233.891 112.2 233.258 cv
112.2 232.826 112.074 232.514 111.822 232.322 cv
111.57 232.13 111.156 232.034 110.58 232.034 cv
110.124 232.034 109.766 232.103 109.506 232.238 cv
cp
112.752 236.678 mo
112.836 237.194 li
112.604 237.283 112.272 237.352 111.84 237.404 cv
111.408 237.457 111.008 237.482 110.64 237.482 cv
109.984 237.482 109.46 237.38 109.068 237.176 cv
108.676 236.972 108.39 236.648 108.21 236.205 cv
108.03 235.76 107.94 235.163 107.94 234.41 cv
107.94 233.65 108.028 233.05 108.204 232.61 cv
108.38 232.17 108.656 231.854 109.032 231.663 cv
109.408 231.47 109.912 231.375 110.544 231.375 cv
111.376 231.375 111.988 231.528 112.38 231.836 cv
112.772 232.145 112.968 232.61 112.968 233.234 cv
112.968 234.283 112.524 234.806 111.636 234.806 cv
108.744 234.806 li
108.768 235.334 108.854 235.742 109.002 236.03 cv
109.15 236.318 109.362 236.522 109.638 236.643 cv
109.914 236.762 110.284 236.822 110.748 236.822 cv
111.348 236.822 112.016 236.774 112.752 236.678 cv
cp
f
114.996 235.898 mo
114.996 236.17 115.068 236.378 115.212 236.522 cv
115.356 236.667 115.568 236.738 115.848 236.738 cv
116.46 236.738 li
116.544 237.314 li
116.456 237.346 116.31 237.375 116.106 237.398 cv
115.902 237.422 115.728 237.435 115.584 237.435 cv
115.168 237.435 114.84 237.313 114.6 237.068 cv
114.36 236.824 114.24 236.482 114.24 236.042 cv
114.24 228.938 li
114.996 228.938 li
114.996 235.898 li
cp
f
118.032 237.338 mo
117.276 237.338 li
117.276 231.53 li
118.032 231.53 li
118.032 237.338 li
cp
118.08 229.334 mo
118.08 230.03 li
118.08 230.198 117.996 230.282 117.828 230.282 cv
117.48 230.282 li
117.312 230.282 117.228 230.198 117.228 230.03 cv
117.228 229.334 li
117.228 229.167 117.312 229.083 117.48 229.083 cv
117.828 229.083 li
117.996 229.083 118.08 229.167 118.08 229.334 cv
cp
f
121.38 232.13 mo
121.38 235.898 li
121.38 236.187 121.45 236.398 121.59 236.534 cv
121.73 236.67 121.944 236.738 122.232 236.738 cv
123.18 236.738 li
123.276 237.314 li
123.108 237.346 122.898 237.375 122.646 237.398 cv
122.394 237.422 122.2 237.435 122.064 237.435 cv
121.584 237.435 121.224 237.311 120.984 237.063 cv
120.744 236.814 120.624 236.455 120.624 235.982 cv
120.624 232.13 li
119.568 232.13 li
119.568 231.59 li
120.624 231.53 li
120.624 229.767 li
121.38 229.767 li
121.38 231.53 li
123.348 231.53 li
123.348 232.13 li
121.38 232.13 li
cp
f
124.894 236.121 mo
124.938 236.165 124.96 236.243 124.96 236.354 cv
124.96 237.123 li
124.944 237.762 124.828 238.338 124.612 238.851 cv
124.252 238.742 li
124.316 238.23 124.348 237.762 124.348 237.338 cv
124.186 237.272 li
124.132 237.086 li
124.132 236.354 li
124.14 236.243 124.166 236.165 124.21 236.121 cv
124.254 236.077 124.328 236.054 124.432 236.054 cv
124.672 236.054 li
124.776 236.054 124.85 236.077 124.894 236.121 cv
cp
f
134.476 231.554 mo
134.404 232.106 li
133.316 232.059 132.488 232.034 131.92 232.034 cv
131.568 232.034 131.304 232.054 131.128 232.094 cv
130.952 232.134 130.822 232.218 130.738 232.346 cv
130.654 232.475 130.612 232.678 130.612 232.958 cv
130.612 233.287 130.68 233.515 130.816 233.643 cv
130.952 233.771 131.18 233.866 131.5 233.93 cv
133.288 234.267 li
133.752 234.362 134.092 234.528 134.308 234.764 cv
134.524 235 134.632 235.354 134.632 235.826 cv
134.632 236.291 134.546 236.641 134.374 236.876 cv
134.202 237.112 133.948 237.271 133.612 237.351 cv
133.276 237.43 132.812 237.47 132.22 237.47 cv
131.428 237.47 130.688 237.418 130 237.314 cv
130.06 236.75 li
130.588 236.798 131.14 236.822 131.716 236.822 cv
132.088 236.822 li
132.576 236.814 132.942 236.787 133.186 236.738 cv
133.43 236.69 133.608 236.597 133.72 236.457 cv
133.832 236.316 133.888 236.106 133.888 235.826 cv
133.888 235.514 133.812 235.294 133.66 235.167 cv
133.508 235.039 133.268 234.942 132.94 234.878 cv
131.164 234.542 li
130.708 234.455 130.378 234.289 130.174 234.044 cv
129.97 233.8 129.868 233.438 129.868 232.958 cv
129.868 232.519 129.942 232.185 130.09 231.957 cv
130.238 231.729 130.46 231.574 130.756 231.494 cv
131.052 231.415 131.46 231.375 131.98 231.375 cv
132.804 231.375 133.636 231.435 134.476 231.554 cv
cp
f
137.506 232.238 mo
137.246 232.375 137.056 232.598 136.936 232.91 cv
136.816 233.222 136.748 233.654 136.732 234.207 cv
139.456 234.207 li
139.952 234.207 140.2 233.891 140.2 233.258 cv
140.2 232.826 140.074 232.514 139.822 232.322 cv
139.57 232.13 139.156 232.034 138.58 232.034 cv
138.124 232.034 137.766 232.103 137.506 232.238 cv
cp
140.752 236.678 mo
140.836 237.194 li
140.604 237.283 140.272 237.352 139.84 237.404 cv
139.408 237.457 139.008 237.482 138.64 237.482 cv
137.984 237.482 137.46 237.38 137.068 237.176 cv
136.676 236.972 136.39 236.648 136.21 236.205 cv
136.03 235.76 135.94 235.163 135.94 234.41 cv
135.94 233.65 136.028 233.05 136.204 232.61 cv
136.38 232.17 136.656 231.854 137.032 231.663 cv
137.408 231.47 137.912 231.375 138.544 231.375 cv
139.376 231.375 139.988 231.528 140.38 231.836 cv
140.772 232.145 140.968 232.61 140.968 233.234 cv
140.968 234.283 140.524 234.806 139.636 234.806 cv
136.744 234.806 li
136.768 235.334 136.854 235.742 137.002 236.03 cv
137.15 236.318 137.362 236.522 137.638 236.643 cv
137.914 236.762 138.284 236.822 138.748 236.822 cv
139.348 236.822 140.016 236.774 140.752 236.678 cv
cp
f
142.894 235.851 mo
142.994 236.194 143.152 236.44 143.368 236.588 cv
143.584 236.736 143.876 236.811 144.244 236.811 cv
144.572 236.811 144.878 236.743 145.162 236.606 cv
145.446 236.47 145.816 236.234 146.272 235.898 cv
146.272 232.466 li
145.832 232.322 145.466 232.216 145.174 232.148 cv
144.882 232.081 144.584 232.046 144.28 232.046 cv
143.896 232.046 143.594 232.118 143.374 232.262 cv
143.154 232.406 142.994 232.648 142.894 232.988 cv
142.794 233.329 142.744 233.803 142.744 234.41 cv
142.744 235.026 142.794 235.506 142.894 235.851 cv
cp
147.028 228.938 mo
147.028 237.338 li
146.44 237.338 li
146.368 236.45 li
145.56 237.139 144.78 237.482 144.028 237.482 cv
143.292 237.482 142.762 237.238 142.438 236.75 cv
142.114 236.263 141.952 235.486 141.952 234.422 cv
141.952 233.678 142.028 233.084 142.18 232.64 cv
142.332 232.196 142.566 231.875 142.882 231.674 cv
143.198 231.475 143.612 231.375 144.124 231.375 cv
144.836 231.375 145.568 231.563 146.32 231.938 cv
146.288 231.674 146.272 231.294 146.272 230.798 cv
146.272 228.938 li
147.028 228.938 li
cp
f
152.894 235.851 mo
152.994 236.194 153.152 236.44 153.368 236.588 cv
153.584 236.736 153.876 236.811 154.244 236.811 cv
154.572 236.811 154.878 236.743 155.162 236.606 cv
155.446 236.47 155.816 236.234 156.272 235.898 cv
156.272 232.466 li
155.832 232.322 155.466 232.216 155.174 232.148 cv
154.882 232.081 154.584 232.046 154.28 232.046 cv
153.896 232.046 153.594 232.118 153.374 232.262 cv
153.154 232.406 152.994 232.648 152.894 232.988 cv
152.794 233.329 152.744 233.803 152.744 234.41 cv
152.744 235.026 152.794 235.506 152.894 235.851 cv
cp
157.028 228.938 mo
157.028 237.338 li
156.44 237.338 li
156.368 236.45 li
155.56 237.139 154.78 237.482 154.028 237.482 cv
153.292 237.482 152.762 237.238 152.438 236.75 cv
152.114 236.263 151.952 235.486 151.952 234.422 cv
151.952 233.678 152.028 233.084 152.18 232.64 cv
152.332 232.196 152.566 231.875 152.882 231.674 cv
153.198 231.475 153.612 231.375 154.124 231.375 cv
154.836 231.375 155.568 231.563 156.32 231.938 cv
156.288 231.674 156.272 231.294 156.272 230.798 cv
156.272 228.938 li
157.028 228.938 li
cp
f
160.494 232.256 mo
160.226 232.404 160.034 232.648 159.918 232.988 cv
159.802 233.329 159.744 233.811 159.744 234.435 cv
159.744 235.059 159.802 235.541 159.918 235.88 cv
160.034 236.221 160.226 236.464 160.494 236.612 cv
160.762 236.761 161.136 236.834 161.616 236.834 cv
162.096 236.834 162.47 236.761 162.738 236.612 cv
163.006 236.464 163.198 236.221 163.314 235.88 cv
163.43 235.541 163.488 235.059 163.488 234.435 cv
163.488 233.811 163.43 233.329 163.314 232.988 cv
163.198 232.648 163.006 232.404 162.738 232.256 cv
162.47 232.108 162.096 232.034 161.616 232.034 cv
161.136 232.034 160.762 232.108 160.494 232.256 cv
cp
163.182 231.674 mo
163.57 231.875 163.85 232.196 164.022 232.64 cv
164.194 233.084 164.28 233.683 164.28 234.435 cv
164.28 235.187 164.194 235.783 164.022 236.222 cv
163.85 236.663 163.57 236.982 163.182 237.183 cv
162.794 237.382 162.272 237.482 161.616 237.482 cv
160.952 237.482 160.428 237.382 160.044 237.183 cv
159.66 236.982 159.38 236.663 159.204 236.222 cv
159.028 235.783 158.94 235.187 158.94 234.435 cv
158.94 233.683 159.028 233.084 159.204 232.64 cv
159.38 232.196 159.662 231.875 160.05 231.674 cv
160.438 231.475 160.96 231.375 161.616 231.375 cv
162.272 231.375 162.794 231.475 163.182 231.674 cv
cp
f
170.506 232.238 mo
170.246 232.375 170.056 232.598 169.936 232.91 cv
169.816 233.222 169.748 233.654 169.732 234.207 cv
172.456 234.207 li
172.952 234.207 173.2 233.891 173.2 233.258 cv
173.2 232.826 173.074 232.514 172.822 232.322 cv
172.57 232.13 172.156 232.034 171.58 232.034 cv
171.124 232.034 170.766 232.103 170.506 232.238 cv
cp
173.752 236.678 mo
173.836 237.194 li
173.604 237.283 173.272 237.352 172.84 237.404 cv
172.408 237.457 172.008 237.482 171.64 237.482 cv
170.984 237.482 170.46 237.38 170.068 237.176 cv
169.676 236.972 169.39 236.648 169.21 236.205 cv
169.03 235.76 168.94 235.163 168.94 234.41 cv
168.94 233.65 169.028 233.05 169.204 232.61 cv
169.38 232.17 169.656 231.854 170.032 231.663 cv
170.408 231.47 170.912 231.375 171.544 231.375 cv
172.376 231.375 172.988 231.528 173.38 231.836 cv
173.772 232.145 173.968 232.61 173.968 233.234 cv
173.968 234.283 173.524 234.806 172.636 234.806 cv
169.744 234.806 li
169.768 235.334 169.854 235.742 170.002 236.03 cv
170.15 236.318 170.362 236.522 170.638 236.643 cv
170.914 236.762 171.284 236.822 171.748 236.822 cv
172.348 236.822 173.016 236.774 173.752 236.678 cv
cp
f
176.032 237.338 mo
175.276 237.338 li
175.276 231.53 li
176.032 231.53 li
176.032 237.338 li
cp
176.08 229.334 mo
176.08 230.03 li
176.08 230.198 175.996 230.282 175.828 230.282 cv
175.48 230.282 li
175.312 230.282 175.228 230.198 175.228 230.03 cv
175.228 229.334 li
175.228 229.167 175.312 229.083 175.48 229.083 cv
175.828 229.083 li
175.996 229.083 176.08 229.167 176.08 229.334 cv
cp
f
183.004 231.53 mo
183.004 237.338 li
182.404 237.338 li
182.344 236.426 li
181.888 236.787 181.45 237.052 181.03 237.225 cv
180.61 237.396 180.188 237.482 179.764 237.482 cv
179.244 237.482 178.852 237.348 178.588 237.081 cv
178.324 236.813 178.192 236.418 178.192 235.898 cv
178.192 231.53 li
178.948 231.53 li
178.948 235.694 li
178.948 236.095 179.032 236.382 179.2 236.559 cv
179.368 236.734 179.64 236.822 180.016 236.822 cv
180.344 236.822 180.674 236.749 181.006 236.601 cv
181.338 236.453 181.752 236.21 182.248 235.875 cv
182.248 231.53 li
183.004 231.53 li
cp
f
189.476 231.554 mo
189.404 232.106 li
188.316 232.059 187.488 232.034 186.92 232.034 cv
186.568 232.034 186.304 232.054 186.128 232.094 cv
185.952 232.134 185.822 232.218 185.738 232.346 cv
185.654 232.475 185.612 232.678 185.612 232.958 cv
185.612 233.287 185.68 233.515 185.816 233.643 cv
185.952 233.771 186.18 233.866 186.5 233.93 cv
188.288 234.267 li
188.752 234.362 189.092 234.528 189.308 234.764 cv
189.524 235 189.632 235.354 189.632 235.826 cv
189.632 236.291 189.546 236.641 189.374 236.876 cv
189.202 237.112 188.948 237.271 188.612 237.351 cv
188.276 237.43 187.812 237.47 187.22 237.47 cv
186.428 237.47 185.688 237.418 185 237.314 cv
185.06 236.75 li
185.588 236.798 186.14 236.822 186.716 236.822 cv
187.088 236.822 li
187.576 236.814 187.942 236.787 188.186 236.738 cv
188.43 236.69 188.608 236.597 188.72 236.457 cv
188.832 236.316 188.888 236.106 188.888 235.826 cv
188.888 235.514 188.812 235.294 188.66 235.167 cv
188.508 235.039 188.268 234.942 187.94 234.878 cv
186.164 234.542 li
185.708 234.455 185.378 234.289 185.174 234.044 cv
184.97 233.8 184.868 233.438 184.868 232.958 cv
184.868 232.519 184.942 232.185 185.09 231.957 cv
185.238 231.729 185.46 231.574 185.756 231.494 cv
186.052 231.415 186.46 231.375 186.98 231.375 cv
187.804 231.375 188.636 231.435 189.476 231.554 cv
cp
f
199.388 231.782 mo
199.652 232.054 199.784 232.451 199.784 232.97 cv
199.784 237.338 li
199.028 237.338 li
199.028 233.174 li
199.02 232.774 198.934 232.484 198.77 232.304 cv
198.606 232.125 198.348 232.034 197.996 232.034 cv
197.676 232.034 197.37 232.108 197.078 232.256 cv
196.786 232.404 196.384 232.67 195.872 233.054 cv
195.872 237.338 li
195.14 237.338 li
195.14 233.174 li
195.14 232.774 195.056 232.484 194.888 232.304 cv
194.72 232.125 194.46 232.034 194.108 232.034 cv
193.796 232.034 193.49 232.108 193.19 232.256 cv
192.89 232.404 192.488 232.667 191.984 233.042 cv
191.984 237.338 li
191.228 237.338 li
191.228 231.53 li
191.852 231.53 li
191.9 232.502 li
192.74 231.75 193.556 231.375 194.348 231.375 cv
195.172 231.375 195.664 231.743 195.824 232.479 cv
196.656 231.743 197.464 231.375 198.248 231.375 cv
198.744 231.375 199.124 231.511 199.388 231.782 cv
cp
f
203.494 232.256 mo
203.226 232.404 203.034 232.648 202.918 232.988 cv
202.802 233.329 202.744 233.811 202.744 234.435 cv
202.744 235.059 202.802 235.541 202.918 235.88 cv
203.034 236.221 203.226 236.464 203.494 236.612 cv
203.762 236.761 204.136 236.834 204.616 236.834 cv
205.096 236.834 205.47 236.761 205.738 236.612 cv
206.006 236.464 206.198 236.221 206.314 235.88 cv
206.43 235.541 206.488 235.059 206.488 234.435 cv
206.488 233.811 206.43 233.329 206.314 232.988 cv
206.198 232.648 206.006 232.404 205.738 232.256 cv
205.47 232.108 205.096 232.034 204.616 232.034 cv
204.136 232.034 203.762 232.108 203.494 232.256 cv
cp
206.182 231.674 mo
206.57 231.875 206.85 232.196 207.022 232.64 cv
207.194 233.084 207.28 233.683 207.28 234.435 cv
207.28 235.187 207.194 235.783 207.022 236.222 cv
206.85 236.663 206.57 236.982 206.182 237.183 cv
205.794 237.382 205.272 237.482 204.616 237.482 cv
203.952 237.482 203.428 237.382 203.044 237.183 cv
202.66 236.982 202.38 236.663 202.204 236.222 cv
202.028 235.783 201.94 235.187 201.94 234.435 cv
201.94 233.683 202.028 233.084 202.204 232.64 cv
202.38 232.196 202.662 231.875 203.05 231.674 cv
203.438 231.475 203.96 231.375 204.616 231.375 cv
205.272 231.375 205.794 231.475 206.182 231.674 cv
cp
f
209.894 235.851 mo
209.994 236.194 210.152 236.44 210.368 236.588 cv
210.584 236.736 210.876 236.811 211.244 236.811 cv
211.572 236.811 211.878 236.743 212.162 236.606 cv
212.446 236.47 212.816 236.234 213.272 235.898 cv
213.272 232.466 li
212.832 232.322 212.466 232.216 212.174 232.148 cv
211.882 232.081 211.584 232.046 211.28 232.046 cv
210.896 232.046 210.594 232.118 210.374 232.262 cv
210.154 232.406 209.994 232.648 209.894 232.988 cv
209.794 233.329 209.744 233.803 209.744 234.41 cv
209.744 235.026 209.794 235.506 209.894 235.851 cv
cp
214.028 228.938 mo
214.028 237.338 li
213.44 237.338 li
213.368 236.45 li
212.56 237.139 211.78 237.482 211.028 237.482 cv
210.292 237.482 209.762 237.238 209.438 236.75 cv
209.114 236.263 208.952 235.486 208.952 234.422 cv
208.952 233.678 209.028 233.084 209.18 232.64 cv
209.332 232.196 209.566 231.875 209.882 231.674 cv
210.198 231.475 210.612 231.375 211.124 231.375 cv
211.836 231.375 212.568 231.563 213.32 231.938 cv
213.288 231.674 213.272 231.294 213.272 230.798 cv
213.272 228.938 li
214.028 228.938 li
cp
f
220.38 232.13 mo
220.38 235.898 li
220.38 236.187 220.45 236.398 220.59 236.534 cv
220.73 236.67 220.944 236.738 221.232 236.738 cv
222.18 236.738 li
222.276 237.314 li
222.108 237.346 221.898 237.375 221.646 237.398 cv
221.394 237.422 221.2 237.435 221.064 237.435 cv
220.584 237.435 220.224 237.311 219.984 237.063 cv
219.744 236.814 219.624 236.455 219.624 235.982 cv
219.624 232.13 li
218.568 232.13 li
218.568 231.59 li
219.624 231.53 li
219.624 229.767 li
220.38 229.767 li
220.38 231.53 li
222.348 231.53 li
222.348 232.13 li
220.38 232.13 li
cp
f
224.506 232.238 mo
224.246 232.375 224.056 232.598 223.936 232.91 cv
223.816 233.222 223.748 233.654 223.732 234.207 cv
226.456 234.207 li
226.952 234.207 227.2 233.891 227.2 233.258 cv
227.2 232.826 227.074 232.514 226.822 232.322 cv
226.57 232.13 226.156 232.034 225.58 232.034 cv
225.124 232.034 224.766 232.103 224.506 232.238 cv
cp
227.752 236.678 mo
227.836 237.194 li
227.604 237.283 227.272 237.352 226.84 237.404 cv
226.408 237.457 226.008 237.482 225.64 237.482 cv
224.984 237.482 224.46 237.38 224.068 237.176 cv
223.676 236.972 223.39 236.648 223.21 236.205 cv
223.03 235.76 222.94 235.163 222.94 234.41 cv
222.94 233.65 223.028 233.05 223.204 232.61 cv
223.38 232.17 223.656 231.854 224.032 231.663 cv
224.408 231.47 224.912 231.375 225.544 231.375 cv
226.376 231.375 226.988 231.528 227.38 231.836 cv
227.772 232.145 227.968 232.61 227.968 233.234 cv
227.968 234.283 227.524 234.806 226.636 234.806 cv
223.744 234.806 li
223.768 235.334 223.854 235.742 224.002 236.03 cv
224.15 236.318 224.362 236.522 224.638 236.643 cv
224.914 236.762 225.284 236.822 225.748 236.822 cv
226.348 236.822 227.016 236.774 227.752 236.678 cv
cp
f
237.388 231.782 mo
237.652 232.054 237.784 232.451 237.784 232.97 cv
237.784 237.338 li
237.028 237.338 li
237.028 233.174 li
237.02 232.774 236.934 232.484 236.77 232.304 cv
236.606 232.125 236.348 232.034 235.996 232.034 cv
235.676 232.034 235.37 232.108 235.078 232.256 cv
234.786 232.404 234.384 232.67 233.872 233.054 cv
233.872 237.338 li
233.14 237.338 li
233.14 233.174 li
233.14 232.774 233.056 232.484 232.888 232.304 cv
232.72 232.125 232.46 232.034 232.108 232.034 cv
231.796 232.034 231.49 232.108 231.19 232.256 cv
230.89 232.404 230.488 232.667 229.984 233.042 cv
229.984 237.338 li
229.228 237.338 li
229.228 231.53 li
229.852 231.53 li
229.9 232.502 li
230.74 231.75 231.556 231.375 232.348 231.375 cv
233.172 231.375 233.664 231.743 233.824 232.479 cv
234.656 231.743 235.464 231.375 236.248 231.375 cv
236.744 231.375 237.124 231.511 237.388 231.782 cv
cp
f
243.942 236.594 mo
244.162 236.45 244.324 236.208 244.428 235.868 cv
244.532 235.528 244.584 235.054 244.584 234.446 cv
244.584 233.854 244.534 233.384 244.434 233.037 cv
244.334 232.688 244.178 232.437 243.966 232.28 cv
243.754 232.125 243.468 232.046 243.108 232.046 cv
242.78 232.046 242.454 232.125 242.13 232.28 cv
241.806 232.437 241.424 232.694 240.984 233.054 cv
240.984 236.378 li
241.448 236.53 241.828 236.641 242.124 236.708 cv
242.42 236.776 242.724 236.811 243.036 236.811 cv
243.42 236.811 243.722 236.738 243.942 236.594 cv
cp
244.884 232.118 mo
245.204 232.615 245.364 233.395 245.364 234.458 cv
245.364 235.194 245.288 235.784 245.136 236.229 cv
244.984 236.672 244.752 236.993 244.44 237.188 cv
244.128 237.384 243.716 237.482 243.204 237.482 cv
242.436 237.482 241.688 237.278 240.96 236.871 cv
240.984 237.134 240.996 237.375 240.996 237.59 cv
240.984 238.022 li
240.984 239.787 li
240.228 239.787 li
240.228 231.53 li
240.852 231.53 li
240.924 232.49 li
241.276 232.139 241.662 231.865 242.082 231.668 cv
242.502 231.473 242.916 231.375 243.324 231.375 cv
244.044 231.375 244.564 231.623 244.884 232.118 cv
cp
f
248.494 232.256 mo
248.226 232.404 248.034 232.648 247.918 232.988 cv
247.802 233.329 247.744 233.811 247.744 234.435 cv
247.744 235.059 247.802 235.541 247.918 235.88 cv
248.034 236.221 248.226 236.464 248.494 236.612 cv
248.762 236.761 249.136 236.834 249.616 236.834 cv
250.096 236.834 250.47 236.761 250.738 236.612 cv
251.006 236.464 251.198 236.221 251.314 235.88 cv
251.43 235.541 251.488 235.059 251.488 234.435 cv
251.488 233.811 251.43 233.329 251.314 232.988 cv
251.198 232.648 251.006 232.404 250.738 232.256 cv
250.47 232.108 250.096 232.034 249.616 232.034 cv
249.136 232.034 248.762 232.108 248.494 232.256 cv
cp
251.182 231.674 mo
251.57 231.875 251.85 232.196 252.022 232.64 cv
252.194 233.084 252.28 233.683 252.28 234.435 cv
252.28 235.187 252.194 235.783 252.022 236.222 cv
251.85 236.663 251.57 236.982 251.182 237.183 cv
250.794 237.382 250.272 237.482 249.616 237.482 cv
248.952 237.482 248.428 237.382 248.044 237.183 cv
247.66 236.982 247.38 236.663 247.204 236.222 cv
247.028 235.783 246.94 235.187 246.94 234.435 cv
246.94 233.683 247.028 233.084 247.204 232.64 cv
247.38 232.196 247.662 231.875 248.05 231.674 cv
248.438 231.475 248.96 231.375 249.616 231.375 cv
250.272 231.375 250.794 231.475 251.182 231.674 cv
cp
f
257.72 231.375 mo
257.624 232.094 li
257.336 232.094 li
257 232.094 256.662 232.165 256.322 232.304 cv
255.982 232.444 255.54 232.67 254.996 232.982 cv
254.996 237.338 li
254.228 237.338 li
254.228 231.53 li
254.816 231.53 li
254.9 232.502 li
255.844 231.75 256.7 231.375 257.468 231.375 cv
257.72 231.375 li
cp
f
50.0322 251.738 mo
49.2764 251.738 li
49.2764 245.931 li
50.0322 245.931 li
50.0322 251.738 li
cp
50.0801 243.735 mo
50.0801 244.431 li
50.0801 244.599 49.9961 244.683 49.8281 244.683 cv
49.48 244.683 li
49.312 244.683 49.228 244.599 49.228 244.431 cv
49.228 243.735 li
49.228 243.567 49.312 243.483 49.48 243.483 cv
49.8281 243.483 li
49.9961 243.483 50.0801 243.567 50.0801 243.735 cv
cp
f
56.7764 246.183 mo
57.04 246.455 57.1724 246.851 57.1724 247.371 cv
57.1724 251.738 li
56.416 251.738 li
56.416 247.575 li
56.416 247.167 56.3384 246.875 56.1821 246.699 cv
56.0264 246.523 55.7681 246.435 55.4082 246.435 cv
55.0562 246.435 54.7021 246.513 54.3462 246.669 cv
53.9902 246.825 53.5361 247.083 52.9844 247.443 cv
52.9961 251.738 li
52.228 251.738 li
52.228 245.931 li
52.8643 245.931 li
52.9121 246.891 li
53.8799 246.147 54.7803 245.775 55.6123 245.775 cv
56.124 245.775 56.5122 245.912 56.7764 246.183 cv
cp
f
62.5884 245.835 mo
62.916 245.875 63.2041 245.943 63.4521 246.039 cv
63.332 246.531 li
62.9082 246.467 62.3921 246.435 61.7842 246.435 cv
61.2642 246.435 60.8579 246.507 60.5664 246.651 cv
60.2739 246.795 60.062 247.04 59.9302 247.383 cv
59.7983 247.727 59.7324 248.211 59.7324 248.835 cv
59.7324 249.459 59.7983 249.943 59.9302 250.287 cv
60.062 250.631 60.2739 250.874 60.5664 251.013 cv
60.8579 251.152 61.2642 251.223 61.7842 251.223 cv
62.4561 251.223 63.02 251.179 63.4761 251.091 cv
63.5601 251.618 li
62.9683 251.794 62.3364 251.883 61.6641 251.883 cv
60.9922 251.883 60.458 251.784 60.062 251.589 cv
59.666 251.393 59.3799 251.074 59.2041 250.635 cv
59.0283 250.195 58.9404 249.595 58.9404 248.835 cv
58.9404 248.075 59.0283 247.475 59.2041 247.035 cv
59.3799 246.595 59.666 246.275 60.062 246.075 cv
60.458 245.875 60.9922 245.775 61.6641 245.775 cv
61.9521 245.775 62.2603 245.795 62.5884 245.835 cv
cp
f
66.0322 251.738 mo
65.2764 251.738 li
65.2764 245.931 li
66.0322 245.931 li
66.0322 251.738 li
cp
66.0801 243.735 mo
66.0801 244.431 li
66.0801 244.599 65.9961 244.683 65.8281 244.683 cv
65.48 244.683 li
65.312 244.683 65.228 244.599 65.228 244.431 cv
65.228 243.735 li
65.228 243.567 65.312 243.483 65.48 243.483 cv
65.8281 243.483 li
65.9961 243.483 66.0801 243.567 66.0801 243.735 cv
cp
f
68.894 250.251 mo
68.9941 250.595 69.1523 250.841 69.3682 250.989 cv
69.584 251.137 69.876 251.211 70.2441 251.211 cv
70.5723 251.211 70.8779 251.143 71.1621 251.007 cv
71.4463 250.871 71.8164 250.635 72.272 250.299 cv
72.272 246.867 li
71.832 246.723 71.4663 246.617 71.1743 246.549 cv
70.8823 246.481 70.584 246.447 70.2803 246.447 cv
69.896 246.447 69.5942 246.519 69.374 246.663 cv
69.1543 246.807 68.9941 247.049 68.894 247.389 cv
68.7939 247.729 68.7441 248.204 68.7441 248.811 cv
68.7441 249.427 68.7939 249.907 68.894 250.251 cv
cp
73.0283 243.339 mo
73.0283 251.738 li
72.4404 251.738 li
72.3682 250.851 li
71.5601 251.539 70.7803 251.883 70.0283 251.883 cv
69.292 251.883 68.7622 251.639 68.438 251.15 cv
68.1143 250.664 67.9521 249.887 67.9521 248.823 cv
67.9521 248.079 68.0283 247.485 68.1802 247.041 cv
68.332 246.597 68.5659 246.275 68.8823 246.075 cv
69.1982 245.875 69.6123 245.775 70.124 245.775 cv
70.8359 245.775 71.5684 245.963 72.3203 246.339 cv
72.2881 246.075 72.272 245.695 72.272 245.199 cv
72.272 243.339 li
73.0283 243.339 li
cp
f
76.0322 251.738 mo
75.2764 251.738 li
75.2764 245.931 li
76.0322 245.931 li
76.0322 251.738 li
cp
76.0801 243.735 mo
76.0801 244.431 li
76.0801 244.599 75.9961 244.683 75.8281 244.683 cv
75.48 244.683 li
75.312 244.683 75.228 244.599 75.228 244.431 cv
75.228 243.735 li
75.228 243.567 75.312 243.483 75.48 243.483 cv
75.8281 243.483 li
75.9961 243.483 76.0801 243.567 76.0801 243.735 cv
cp
f
78.894 250.251 mo
78.9941 250.595 79.1523 250.841 79.3682 250.989 cv
79.584 251.137 79.876 251.211 80.2441 251.211 cv
80.5723 251.211 80.8779 251.143 81.1621 251.007 cv
81.4463 250.871 81.8164 250.635 82.272 250.299 cv
82.272 246.867 li
81.832 246.723 81.4663 246.617 81.1743 246.549 cv
80.8823 246.481 80.584 246.447 80.2803 246.447 cv
79.896 246.447 79.5942 246.519 79.374 246.663 cv
79.1543 246.807 78.9941 247.049 78.894 247.389 cv
78.7939 247.729 78.7441 248.204 78.7441 248.811 cv
78.7441 249.427 78.7939 249.907 78.894 250.251 cv
cp
83.0283 243.339 mo
83.0283 251.738 li
82.4404 251.738 li
82.3682 250.851 li
81.5601 251.539 80.7803 251.883 80.0283 251.883 cv
79.292 251.883 78.7622 251.639 78.438 251.15 cv
78.1143 250.664 77.9521 249.887 77.9521 248.823 cv
77.9521 248.079 78.0283 247.485 78.1802 247.041 cv
78.332 246.597 78.5659 246.275 78.8823 246.075 cv
79.1982 245.875 79.6123 245.775 80.124 245.775 cv
80.8359 245.775 81.5684 245.963 82.3203 246.339 cv
82.2881 246.075 82.272 245.695 82.272 245.199 cv
82.272 243.339 li
83.0283 243.339 li
cp
f
90.0044 245.931 mo
90.0044 251.738 li
89.4043 251.738 li
89.3442 250.827 li
88.8882 251.187 88.4502 251.452 88.0303 251.625 cv
87.6104 251.797 87.188 251.883 86.7642 251.883 cv
86.2441 251.883 85.8521 251.748 85.5884 251.48 cv
85.3242 251.213 85.1924 250.819 85.1924 250.299 cv
85.1924 245.931 li
85.9482 245.931 li
85.9482 250.095 li
85.9482 250.496 86.0322 250.783 86.2002 250.959 cv
86.3682 251.135 86.6401 251.223 87.0161 251.223 cv
87.3442 251.223 87.6743 251.148 88.0063 251.001 cv
88.3379 250.853 88.752 250.611 89.248 250.275 cv
89.248 245.931 li
90.0044 245.931 li
cp
f
96.7764 246.183 mo
97.04 246.455 97.1724 246.851 97.1724 247.371 cv
97.1724 251.738 li
96.416 251.738 li
96.416 247.575 li
96.416 247.167 96.3384 246.875 96.1821 246.699 cv
96.0264 246.523 95.7681 246.435 95.4082 246.435 cv
95.0562 246.435 94.7021 246.513 94.3462 246.669 cv
93.9902 246.825 93.5361 247.083 92.9844 247.443 cv
92.9961 251.738 li
92.228 251.738 li
92.228 245.931 li
92.8643 245.931 li
92.9121 246.891 li
93.8799 246.147 94.7803 245.775 95.6123 245.775 cv
96.124 245.775 96.5122 245.912 96.7764 246.183 cv
cp
f
100.38 246.531 mo
100.38 250.299 li
100.38 250.587 100.45 250.799 100.59 250.935 cv
100.73 251.07 100.944 251.139 101.232 251.139 cv
102.18 251.139 li
102.276 251.715 li
102.108 251.746 101.898 251.774 101.646 251.799 cv
101.394 251.822 101.2 251.835 101.064 251.835 cv
100.584 251.835 100.224 251.711 99.9844 251.463 cv
99.7441 251.215 99.624 250.855 99.624 250.383 cv
99.624 246.531 li
98.5684 246.531 li
98.5684 245.991 li
99.624 245.931 li
99.624 244.167 li
100.38 244.167 li
100.38 245.931 li
102.348 245.931 li
102.348 246.531 li
100.38 246.531 li
cp
f
111.004 245.931 mo
111.004 251.738 li
110.404 251.738 li
110.344 250.827 li
109.888 251.187 109.45 251.452 109.03 251.625 cv
108.61 251.797 108.188 251.883 107.764 251.883 cv
107.244 251.883 106.852 251.748 106.588 251.48 cv
106.324 251.213 106.192 250.819 106.192 250.299 cv
106.192 245.931 li
106.948 245.931 li
106.948 250.095 li
106.948 250.496 107.032 250.783 107.2 250.959 cv
107.368 251.135 107.64 251.223 108.016 251.223 cv
108.344 251.223 108.674 251.148 109.006 251.001 cv
109.338 250.853 109.752 250.611 110.248 250.275 cv
110.248 245.931 li
111.004 245.931 li
cp
f
114.38 246.531 mo
114.38 250.299 li
114.38 250.587 114.45 250.799 114.59 250.935 cv
114.73 251.07 114.944 251.139 115.232 251.139 cv
116.18 251.139 li
116.276 251.715 li
116.108 251.746 115.898 251.774 115.646 251.799 cv
115.394 251.822 115.2 251.835 115.064 251.835 cv
114.584 251.835 114.224 251.711 113.984 251.463 cv
113.744 251.215 113.624 250.855 113.624 250.383 cv
113.624 246.531 li
112.568 246.531 li
112.568 245.991 li
113.624 245.931 li
113.624 244.167 li
114.38 244.167 li
114.38 245.931 li
116.348 245.931 li
116.348 246.531 li
114.38 246.531 li
cp
f
120.996 250.299 mo
120.996 250.571 121.068 250.779 121.212 250.923 cv
121.356 251.066 121.568 251.139 121.848 251.139 cv
122.46 251.139 li
122.544 251.715 li
122.456 251.746 122.31 251.774 122.106 251.799 cv
121.902 251.822 121.728 251.835 121.584 251.835 cv
121.168 251.835 120.84 251.713 120.6 251.469 cv
120.36 251.225 120.24 250.883 120.24 250.443 cv
120.24 243.339 li
120.996 243.339 li
120.996 250.299 li
cp
f
125.886 250.899 mo
126.314 250.723 126.696 250.487 127.032 250.191 cv
127.032 248.763 li
124.548 248.787 li
123.964 248.811 123.672 249.111 123.672 249.687 cv
123.672 250.191 li
123.672 250.527 123.758 250.773 123.93 250.929 cv
124.102 251.085 124.368 251.162 124.728 251.162 cv
125.072 251.162 125.458 251.074 125.886 250.899 cv
cp
127.338 246.189 mo
127.646 246.465 127.8 246.923 127.8 247.563 cv
127.8 251.738 li
127.2 251.738 li
127.104 250.719 li
126.816 251.007 126.444 251.265 125.988 251.492 cv
125.532 251.721 125.056 251.835 124.56 251.835 cv
124.048 251.835 123.644 251.698 123.348 251.427 cv
123.052 251.154 122.904 250.767 122.904 250.263 cv
122.904 249.591 li
122.904 249.143 123.036 248.795 123.3 248.547 cv
123.564 248.299 123.94 248.175 124.428 248.175 cv
127.032 248.175 li
127.032 247.563 li
127.032 247.179 126.942 246.895 126.762 246.711 cv
126.582 246.527 126.26 246.435 125.796 246.435 cv
125.108 246.435 124.248 246.491 123.216 246.603 cv
123.144 246.039 li
124.304 245.863 125.236 245.775 125.94 245.775 cv
126.564 245.775 127.03 245.913 127.338 246.189 cv
cp
f
133.78 250.989 mo
134.028 250.833 134.21 250.581 134.326 250.233 cv
134.442 249.885 134.5 249.416 134.5 248.823 cv
134.5 248.223 134.454 247.753 134.362 247.413 cv
134.27 247.073 134.112 246.827 133.888 246.675 cv
133.664 246.523 133.356 246.447 132.964 246.447 cv
132.652 246.447 132.354 246.523 132.07 246.675 cv
131.786 246.827 131.416 247.079 130.96 247.431 cv
130.96 250.995 li
131.552 251.162 132.16 251.238 132.784 251.223 cv
133.2 251.223 133.532 251.145 133.78 250.989 cv
cp
134.794 246.483 mo
135.126 246.956 135.292 247.735 135.292 248.823 cv
135.292 249.887 135.106 250.664 134.734 251.15 cv
134.362 251.639 133.716 251.883 132.796 251.883 cv
132.388 251.883 131.954 251.849 131.494 251.78 cv
131.034 251.713 130.604 251.614 130.204 251.486 cv
130.204 243.339 li
130.96 243.339 li
130.96 245.667 li
130.96 245.971 130.956 246.209 130.948 246.381 cv
130.94 246.553 130.916 246.731 130.876 246.915 cv
131.652 246.155 132.42 245.775 133.18 245.775 cv
133.924 245.775 134.462 246.011 134.794 246.483 cv
cp
f
138.494 246.657 mo
138.226 246.805 138.034 247.049 137.918 247.389 cv
137.802 247.729 137.744 248.211 137.744 248.835 cv
137.744 249.459 137.802 249.941 137.918 250.281 cv
138.034 250.622 138.226 250.865 138.494 251.013 cv
138.762 251.161 139.136 251.234 139.616 251.234 cv
140.096 251.234 140.47 251.161 140.738 251.013 cv
141.006 250.865 141.198 250.622 141.314 250.281 cv
141.43 249.941 141.488 249.459 141.488 248.835 cv
141.488 248.211 141.43 247.729 141.314 247.389 cv
141.198 247.049 141.006 246.805 140.738 246.657 cv
140.47 246.509 140.096 246.435 139.616 246.435 cv
139.136 246.435 138.762 246.509 138.494 246.657 cv
cp
141.182 246.075 mo
141.57 246.275 141.85 246.597 142.022 247.041 cv
142.194 247.485 142.28 248.083 142.28 248.835 cv
142.28 249.587 142.194 250.183 142.022 250.623 cv
141.85 251.063 141.57 251.383 141.182 251.583 cv
140.794 251.782 140.272 251.883 139.616 251.883 cv
138.952 251.883 138.428 251.782 138.044 251.583 cv
137.66 251.383 137.38 251.063 137.204 250.623 cv
137.028 250.183 136.94 249.587 136.94 248.835 cv
136.94 248.083 137.028 247.485 137.204 247.041 cv
137.38 246.597 137.662 246.275 138.05 246.075 cv
138.438 245.875 138.96 245.775 139.616 245.775 cv
140.272 245.775 140.794 245.875 141.182 246.075 cv
cp
f
147.72 245.775 mo
147.624 246.495 li
147.336 246.495 li
147 246.495 146.662 246.565 146.322 246.705 cv
145.982 246.845 145.54 247.071 144.996 247.383 cv
144.996 251.738 li
144.228 251.738 li
144.228 245.931 li
144.816 245.931 li
144.9 246.903 li
145.844 246.151 146.7 245.775 147.468 245.775 cv
147.72 245.775 li
cp
f
150.506 246.639 mo
150.246 246.775 150.056 246.999 149.936 247.311 cv
149.816 247.623 149.748 248.055 149.732 248.607 cv
152.456 248.607 li
152.952 248.607 153.2 248.292 153.2 247.659 cv
153.2 247.227 153.074 246.915 152.822 246.723 cv
152.57 246.531 152.156 246.435 151.58 246.435 cv
151.124 246.435 150.766 246.503 150.506 246.639 cv
cp
153.752 251.078 mo
153.836 251.595 li
153.604 251.683 153.272 251.752 152.84 251.805 cv
152.408 251.856 152.008 251.883 151.64 251.883 cv
150.984 251.883 150.46 251.78 150.068 251.576 cv
149.676 251.372 149.39 251.049 149.21 250.605 cv
149.03 250.161 148.94 249.563 148.94 248.811 cv
148.94 248.051 149.028 247.451 149.204 247.011 cv
149.38 246.571 149.656 246.255 150.032 246.063 cv
150.408 245.871 150.912 245.775 151.544 245.775 cv
152.376 245.775 152.988 245.929 153.38 246.237 cv
153.772 246.545 153.968 247.011 153.968 247.635 cv
153.968 248.683 153.524 249.207 152.636 249.207 cv
149.744 249.207 li
149.768 249.735 149.854 250.143 150.002 250.431 cv
150.15 250.719 150.362 250.923 150.638 251.043 cv
150.914 251.162 151.284 251.223 151.748 251.223 cv
152.348 251.223 153.016 251.175 153.752 251.078 cv
cp
f
159.506 246.639 mo
159.246 246.775 159.056 246.999 158.936 247.311 cv
158.816 247.623 158.748 248.055 158.732 248.607 cv
161.456 248.607 li
161.952 248.607 162.2 248.292 162.2 247.659 cv
162.2 247.227 162.074 246.915 161.822 246.723 cv
161.57 246.531 161.156 246.435 160.58 246.435 cv
160.124 246.435 159.766 246.503 159.506 246.639 cv
cp
162.752 251.078 mo
162.836 251.595 li
162.604 251.683 162.272 251.752 161.84 251.805 cv
161.408 251.856 161.008 251.883 160.64 251.883 cv
159.984 251.883 159.46 251.78 159.068 251.576 cv
158.676 251.372 158.39 251.049 158.21 250.605 cv
158.03 250.161 157.94 249.563 157.94 248.811 cv
157.94 248.051 158.028 247.451 158.204 247.011 cv
158.38 246.571 158.656 246.255 159.032 246.063 cv
159.408 245.871 159.912 245.775 160.544 245.775 cv
161.376 245.775 161.988 245.929 162.38 246.237 cv
162.772 246.545 162.968 247.011 162.968 247.635 cv
162.968 248.683 162.524 249.207 161.636 249.207 cv
158.744 249.207 li
158.768 249.735 158.854 250.143 159.002 250.431 cv
159.15 250.719 159.362 250.923 159.638 251.043 cv
159.914 251.162 160.284 251.223 160.748 251.223 cv
161.348 251.223 162.016 251.175 162.752 251.078 cv
cp
f
165.38 246.531 mo
165.38 250.299 li
165.38 250.587 165.45 250.799 165.59 250.935 cv
165.73 251.07 165.944 251.139 166.232 251.139 cv
167.18 251.139 li
167.276 251.715 li
167.108 251.746 166.898 251.774 166.646 251.799 cv
166.394 251.822 166.2 251.835 166.064 251.835 cv
165.584 251.835 165.224 251.711 164.984 251.463 cv
164.744 251.215 164.624 250.855 164.624 250.383 cv
164.624 246.531 li
163.568 246.531 li
163.568 245.991 li
164.624 245.931 li
164.624 244.167 li
165.38 244.167 li
165.38 245.931 li
167.348 245.931 li
167.348 246.531 li
165.38 246.531 li
cp
f
171.894 250.251 mo
171.994 250.595 172.152 250.841 172.368 250.989 cv
172.584 251.137 172.876 251.211 173.244 251.211 cv
173.572 251.211 173.878 251.143 174.162 251.007 cv
174.446 250.871 174.816 250.635 175.272 250.299 cv
175.272 246.867 li
174.832 246.723 174.466 246.617 174.174 246.549 cv
173.882 246.481 173.584 246.447 173.28 246.447 cv
172.896 246.447 172.594 246.519 172.374 246.663 cv
172.154 246.807 171.994 247.049 171.894 247.389 cv
171.794 247.729 171.744 248.204 171.744 248.811 cv
171.744 249.427 171.794 249.907 171.894 250.251 cv
cp
176.028 243.339 mo
176.028 251.738 li
175.44 251.738 li
175.368 250.851 li
174.56 251.539 173.78 251.883 173.028 251.883 cv
172.292 251.883 171.762 251.639 171.438 251.15 cv
171.114 250.664 170.952 249.887 170.952 248.823 cv
170.952 248.079 171.028 247.485 171.18 247.041 cv
171.332 246.597 171.566 246.275 171.882 246.075 cv
172.198 245.875 172.612 245.775 173.124 245.775 cv
173.836 245.775 174.568 245.963 175.32 246.339 cv
175.288 246.075 175.272 245.695 175.272 245.199 cv
175.272 243.339 li
176.028 243.339 li
cp
f
179.494 246.657 mo
179.226 246.805 179.034 247.049 178.918 247.389 cv
178.802 247.729 178.744 248.211 178.744 248.835 cv
178.744 249.459 178.802 249.941 178.918 250.281 cv
179.034 250.622 179.226 250.865 179.494 251.013 cv
179.762 251.161 180.136 251.234 180.616 251.234 cv
181.096 251.234 181.47 251.161 181.738 251.013 cv
182.006 250.865 182.198 250.622 182.314 250.281 cv
182.43 249.941 182.488 249.459 182.488 248.835 cv
182.488 248.211 182.43 247.729 182.314 247.389 cv
182.198 247.049 182.006 246.805 181.738 246.657 cv
181.47 246.509 181.096 246.435 180.616 246.435 cv
180.136 246.435 179.762 246.509 179.494 246.657 cv
cp
182.182 246.075 mo
182.57 246.275 182.85 246.597 183.022 247.041 cv
183.194 247.485 183.28 248.083 183.28 248.835 cv
183.28 249.587 183.194 250.183 183.022 250.623 cv
182.85 251.063 182.57 251.383 182.182 251.583 cv
181.794 251.782 181.272 251.883 180.616 251.883 cv
179.952 251.883 179.428 251.782 179.044 251.583 cv
178.66 251.383 178.38 251.063 178.204 250.623 cv
178.028 250.183 177.94 249.587 177.94 248.835 cv
177.94 248.083 178.028 247.485 178.204 247.041 cv
178.38 246.597 178.662 246.275 179.05 246.075 cv
179.438 245.875 179.96 245.775 180.616 245.775 cv
181.272 245.775 181.794 245.875 182.182 246.075 cv
cp
f
185.996 250.299 mo
185.996 250.571 186.068 250.779 186.212 250.923 cv
186.356 251.066 186.568 251.139 186.848 251.139 cv
187.46 251.139 li
187.544 251.715 li
187.456 251.746 187.31 251.774 187.106 251.799 cv
186.902 251.822 186.728 251.835 186.584 251.835 cv
186.168 251.835 185.84 251.713 185.6 251.469 cv
185.36 251.225 185.24 250.883 185.24 250.443 cv
185.24 243.339 li
185.996 243.339 li
185.996 250.299 li
cp
f
189.494 246.657 mo
189.226 246.805 189.034 247.049 188.918 247.389 cv
188.802 247.729 188.744 248.211 188.744 248.835 cv
188.744 249.459 188.802 249.941 188.918 250.281 cv
189.034 250.622 189.226 250.865 189.494 251.013 cv
189.762 251.161 190.136 251.234 190.616 251.234 cv
191.096 251.234 191.47 251.161 191.738 251.013 cv
192.006 250.865 192.198 250.622 192.314 250.281 cv
192.43 249.941 192.488 249.459 192.488 248.835 cv
192.488 248.211 192.43 247.729 192.314 247.389 cv
192.198 247.049 192.006 246.805 191.738 246.657 cv
191.47 246.509 191.096 246.435 190.616 246.435 cv
190.136 246.435 189.762 246.509 189.494 246.657 cv
cp
192.182 246.075 mo
192.57 246.275 192.85 246.597 193.022 247.041 cv
193.194 247.485 193.28 248.083 193.28 248.835 cv
193.28 249.587 193.194 250.183 193.022 250.623 cv
192.85 251.063 192.57 251.383 192.182 251.583 cv
191.794 251.782 191.272 251.883 190.616 251.883 cv
189.952 251.883 189.428 251.782 189.044 251.583 cv
188.66 251.383 188.38 251.063 188.204 250.623 cv
188.028 250.183 187.94 249.587 187.94 248.835 cv
187.94 248.083 188.028 247.485 188.204 247.041 cv
188.38 246.597 188.662 246.275 189.05 246.075 cv
189.438 245.875 189.96 245.775 190.616 245.775 cv
191.272 245.775 191.794 245.875 192.182 246.075 cv
cp
f
198.72 245.775 mo
198.624 246.495 li
198.336 246.495 li
198 246.495 197.662 246.565 197.322 246.705 cv
196.982 246.845 196.54 247.071 195.996 247.383 cv
195.996 251.738 li
195.228 251.738 li
195.228 245.931 li
195.816 245.931 li
195.9 246.903 li
196.844 246.151 197.7 245.775 198.468 245.775 cv
198.72 245.775 li
cp
f
201.506 246.639 mo
201.246 246.775 201.056 246.999 200.936 247.311 cv
200.816 247.623 200.748 248.055 200.732 248.607 cv
203.456 248.607 li
203.952 248.607 204.2 248.292 204.2 247.659 cv
204.2 247.227 204.074 246.915 203.822 246.723 cv
203.57 246.531 203.156 246.435 202.58 246.435 cv
202.124 246.435 201.766 246.503 201.506 246.639 cv
cp
204.752 251.078 mo
204.836 251.595 li
204.604 251.683 204.272 251.752 203.84 251.805 cv
203.408 251.856 203.008 251.883 202.64 251.883 cv
201.984 251.883 201.46 251.78 201.068 251.576 cv
200.676 251.372 200.39 251.049 200.21 250.605 cv
200.03 250.161 199.94 249.563 199.94 248.811 cv
199.94 248.051 200.028 247.451 200.204 247.011 cv
200.38 246.571 200.656 246.255 201.032 246.063 cv
201.408 245.871 201.912 245.775 202.544 245.775 cv
203.376 245.775 203.988 245.929 204.38 246.237 cv
204.772 246.545 204.968 247.011 204.968 247.635 cv
204.968 248.683 204.524 249.207 203.636 249.207 cv
200.744 249.207 li
200.768 249.735 200.854 250.143 201.002 250.431 cv
201.15 250.719 201.362 250.923 201.638 251.043 cv
201.914 251.162 202.284 251.223 202.748 251.223 cv
203.348 251.223 204.016 251.175 204.752 251.078 cv
cp
f
217.388 246.183 mo
217.652 246.455 217.784 246.851 217.784 247.371 cv
217.784 251.738 li
217.028 251.738 li
217.028 247.575 li
217.02 247.175 216.934 246.885 216.77 246.705 cv
216.606 246.525 216.348 246.435 215.996 246.435 cv
215.676 246.435 215.37 246.509 215.078 246.657 cv
214.786 246.805 214.384 247.071 213.872 247.455 cv
213.872 251.738 li
213.14 251.738 li
213.14 247.575 li
213.14 247.175 213.056 246.885 212.888 246.705 cv
212.72 246.525 212.46 246.435 212.108 246.435 cv
211.796 246.435 211.49 246.509 211.19 246.657 cv
210.89 246.805 210.488 247.067 209.984 247.443 cv
209.984 251.738 li
209.228 251.738 li
209.228 245.931 li
209.852 245.931 li
209.9 246.903 li
210.74 246.151 211.556 245.775 212.348 245.775 cv
213.172 245.775 213.664 246.143 213.824 246.879 cv
214.656 246.143 215.464 245.775 216.248 245.775 cv
216.744 245.775 217.124 245.912 217.388 246.183 cv
cp
f
222.886 250.899 mo
223.314 250.723 223.696 250.487 224.032 250.191 cv
224.032 248.763 li
221.548 248.787 li
220.964 248.811 220.672 249.111 220.672 249.687 cv
220.672 250.191 li
220.672 250.527 220.758 250.773 220.93 250.929 cv
221.102 251.085 221.368 251.162 221.728 251.162 cv
222.072 251.162 222.458 251.074 222.886 250.899 cv
cp
224.338 246.189 mo
224.646 246.465 224.8 246.923 224.8 247.563 cv
224.8 251.738 li
224.2 251.738 li
224.104 250.719 li
223.816 251.007 223.444 251.265 222.988 251.492 cv
222.532 251.721 222.056 251.835 221.56 251.835 cv
221.048 251.835 220.644 251.698 220.348 251.427 cv
220.052 251.154 219.904 250.767 219.904 250.263 cv
219.904 249.591 li
219.904 249.143 220.036 248.795 220.3 248.547 cv
220.564 248.299 220.94 248.175 221.428 248.175 cv
224.032 248.175 li
224.032 247.563 li
224.032 247.179 223.942 246.895 223.762 246.711 cv
223.582 246.527 223.26 246.435 222.796 246.435 cv
222.108 246.435 221.248 246.491 220.216 246.603 cv
220.144 246.039 li
221.304 245.863 222.236 245.775 222.94 245.775 cv
223.564 245.775 224.03 245.913 224.338 246.189 cv
cp
f
230.78 248.559 mo
231.036 248.367 231.164 248.055 231.164 247.623 cv
231.164 247.175 231.036 246.855 230.78 246.663 cv
230.524 246.471 230.084 246.375 229.46 246.375 cv
228.828 246.375 228.382 246.471 228.122 246.663 cv
227.862 246.855 227.732 247.175 227.732 247.623 cv
227.732 248.055 227.864 248.367 228.128 248.559 cv
228.392 248.751 228.836 248.847 229.46 248.847 cv
230.084 248.847 230.524 248.751 230.78 248.559 cv
cp
231.392 251.889 mo
231.336 251.765 231.238 251.669 231.098 251.601 cv
230.958 251.532 230.744 251.475 230.456 251.427 cv
228.284 251.091 li
228.236 251.127 li
227.972 251.311 227.788 251.494 227.684 251.679 cv
227.58 251.862 227.528 252.11 227.528 252.423 cv
227.528 252.727 227.588 252.958 227.708 253.118 cv
227.828 253.278 228.03 253.391 228.314 253.454 cv
228.598 253.519 229 253.551 229.52 253.551 cv
230.032 253.551 230.426 253.517 230.702 253.448 cv
230.978 253.381 231.176 253.267 231.296 253.106 cv
231.416 252.946 231.476 252.719 231.476 252.423 cv
231.476 252.19 231.448 252.013 231.392 251.889 cv
cp
232.52 246.363 mo
231.548 246.423 li
231.772 246.704 231.884 247.103 231.884 247.623 cv
231.884 248.255 231.7 248.715 231.332 249.003 cv
230.964 249.291 230.34 249.435 229.46 249.435 cv
228.9 249.435 228.46 249.383 228.14 249.279 cv
227.996 249.479 227.924 249.667 227.924 249.843 cv
227.924 250.003 227.978 250.139 228.086 250.251 cv
228.194 250.363 228.36 250.439 228.584 250.479 cv
230.816 250.851 li
231.344 250.931 231.71 251.095 231.914 251.343 cv
232.118 251.591 232.22 251.958 232.22 252.446 cv
232.22 252.895 232.134 253.244 231.962 253.496 cv
231.79 253.748 231.51 253.929 231.122 254.036 cv
230.734 254.145 230.2 254.198 229.52 254.198 cv
228.832 254.198 228.29 254.145 227.894 254.036 cv
227.498 253.929 227.214 253.75 227.042 253.503 cv
226.87 253.255 226.784 252.91 226.784 252.471 cv
226.784 252.087 226.856 251.78 227 251.553 cv
227.144 251.324 227.4 251.118 227.768 250.935 cv
227.6 250.847 227.476 250.725 227.396 250.569 cv
227.316 250.413 227.276 250.248 227.276 250.071 cv
227.276 249.887 227.316 249.709 227.396 249.537 cv
227.476 249.365 227.592 249.223 227.744 249.111 cv
227.488 248.967 227.304 248.773 227.192 248.529 cv
227.08 248.285 227.024 247.983 227.024 247.623 cv
227.024 246.975 227.208 246.505 227.576 246.213 cv
227.944 245.921 228.572 245.775 229.46 245.775 cv
230.012 245.775 230.448 245.827 230.768 245.931 cv
232.568 245.931 li
232.52 246.363 li
cp
f
238.776 246.183 mo
239.04 246.455 239.172 246.851 239.172 247.371 cv
239.172 251.738 li
238.416 251.738 li
238.416 247.575 li
238.416 247.167 238.338 246.875 238.182 246.699 cv
238.026 246.523 237.768 246.435 237.408 246.435 cv
237.056 246.435 236.702 246.513 236.346 246.669 cv
235.99 246.825 235.536 247.083 234.984 247.443 cv
234.996 251.738 li
234.228 251.738 li
234.228 245.931 li
234.864 245.931 li
234.912 246.891 li
235.88 246.147 236.78 245.775 237.612 245.775 cv
238.124 245.775 238.512 245.912 238.776 246.183 cv
cp
f
243.886 250.899 mo
244.314 250.723 244.696 250.487 245.032 250.191 cv
245.032 248.763 li
242.548 248.787 li
241.964 248.811 241.672 249.111 241.672 249.687 cv
241.672 250.191 li
241.672 250.527 241.758 250.773 241.93 250.929 cv
242.102 251.085 242.368 251.162 242.728 251.162 cv
243.072 251.162 243.458 251.074 243.886 250.899 cv
cp
245.338 246.189 mo
245.646 246.465 245.8 246.923 245.8 247.563 cv
245.8 251.738 li
245.2 251.738 li
245.104 250.719 li
244.816 251.007 244.444 251.265 243.988 251.492 cv
243.532 251.721 243.056 251.835 242.56 251.835 cv
242.048 251.835 241.644 251.698 241.348 251.427 cv
241.052 251.154 240.904 250.767 240.904 250.263 cv
240.904 249.591 li
240.904 249.143 241.036 248.795 241.3 248.547 cv
241.564 248.299 241.94 248.175 242.428 248.175 cv
245.032 248.175 li
245.032 247.563 li
245.032 247.179 244.942 246.895 244.762 246.711 cv
244.582 246.527 244.26 246.435 243.796 246.435 cv
243.108 246.435 242.248 246.491 241.216 246.603 cv
241.144 246.039 li
242.304 245.863 243.236 245.775 243.94 245.775 cv
244.564 245.775 245.03 245.913 245.338 246.189 cv
cp
f
51.8862 265.299 mo
52.314 265.122 52.6963 264.887 53.0322 264.591 cv
53.0322 263.162 li
50.5483 263.187 li
49.9644 263.21 49.6724 263.511 49.6724 264.087 cv
49.6724 264.591 li
49.6724 264.927 49.7583 265.173 49.9302 265.328 cv
50.1021 265.484 50.3682 265.563 50.728 265.563 cv
51.0723 265.563 51.458 265.475 51.8862 265.299 cv
cp
53.3384 260.589 mo
53.646 260.864 53.8003 261.322 53.8003 261.963 cv
53.8003 266.139 li
53.2002 266.139 li
53.104 265.118 li
52.8164 265.406 52.4443 265.664 51.9883 265.893 cv
51.5322 266.12 51.0562 266.234 50.5601 266.234 cv
50.0483 266.234 49.644 266.099 49.3481 265.826 cv
49.0522 265.555 48.9043 265.166 48.9043 264.662 cv
48.9043 263.99 li
48.9043 263.543 49.0361 263.194 49.3003 262.946 cv
49.5645 262.698 49.9399 262.574 50.4282 262.574 cv
53.0322 262.574 li
53.0322 261.963 li
53.0322 261.578 52.9424 261.295 52.7622 261.11 cv
52.582 260.927 52.2603 260.834 51.7964 260.834 cv
51.1079 260.834 50.248 260.891 49.2163 261.002 cv
49.144 260.438 li
50.3042 260.263 51.2363 260.175 51.9404 260.175 cv
52.5645 260.175 53.0303 260.313 53.3384 260.589 cv
cp
f
56.9961 264.698 mo
56.9961 264.971 57.0684 265.179 57.2124 265.322 cv
57.3564 265.467 57.5679 265.538 57.8481 265.538 cv
58.4604 265.538 li
58.5444 266.114 li
58.4561 266.146 58.3101 266.175 58.1064 266.198 cv
57.9023 266.223 57.728 266.234 57.584 266.234 cv
57.168 266.234 56.8403 266.112 56.6001 265.868 cv
56.3604 265.624 56.2402 265.282 56.2402 264.843 cv
56.2402 257.738 li
56.9961 257.738 li
56.9961 264.698 li
cp
f
60.0322 266.139 mo
59.2764 266.139 li
59.2764 260.33 li
60.0322 260.33 li
60.0322 266.139 li
cp
60.0801 258.135 mo
60.0801 258.83 li
60.0801 258.998 59.9961 259.082 59.8281 259.082 cv
59.48 259.082 li
59.312 259.082 59.228 258.998 59.228 258.83 cv
59.228 258.135 li
59.228 257.967 59.312 257.883 59.48 257.883 cv
59.8281 257.883 li
59.9961 257.883 60.0801 257.967 60.0801 258.135 cv
cp
f
63.0503 265.076 mo
63.2622 265.433 63.6362 265.61 64.1724 265.61 cv
64.5161 265.61 64.8403 265.54 65.144 265.4 cv
65.4482 265.261 65.8242 265.03 66.272 264.71 cv
66.272 261.074 li
65.7041 260.914 65.1479 260.834 64.604 260.834 cv
64.124 260.834 63.7524 260.906 63.4883 261.051 cv
63.2241 261.194 63.0322 261.442 62.9121 261.794 cv
62.792 262.146 62.7324 262.646 62.7324 263.294 cv
62.7324 264.127 62.8384 264.721 63.0503 265.076 cv
cp
65.75 260.282 mo
66.21 260.354 66.6362 260.454 67.0283 260.582 cv
67.0283 268.587 li
66.272 268.587 li
66.2603 266.45 li
66.2603 265.954 66.2881 265.559 66.3442 265.263 cv
65.936 265.599 65.5361 265.853 65.144 266.024 cv
64.752 266.196 64.3481 266.282 63.9321 266.282 cv
63.2441 266.282 62.7402 266.041 62.4204 265.557 cv
62.1001 265.072 61.9404 264.303 61.9404 263.246 cv
61.9404 262.526 62.02 261.942 62.1802 261.494 cv
62.3403 261.047 62.604 260.715 62.9722 260.498 cv
63.3403 260.282 63.8442 260.175 64.4844 260.175 cv
64.8682 260.175 65.29 260.21 65.75 260.282 cv
cp
f
74.0044 260.33 mo
74.0044 266.139 li
73.4043 266.139 li
73.3442 265.227 li
72.8882 265.587 72.4502 265.853 72.0303 266.024 cv
71.6104 266.196 71.188 266.282 70.7642 266.282 cv
70.2441 266.282 69.8521 266.148 69.5884 265.881 cv
69.3242 265.612 69.1924 265.219 69.1924 264.698 cv
69.1924 260.33 li
69.9482 260.33 li
69.9482 264.494 li
69.9482 264.895 70.0322 265.183 70.2002 265.358 cv
70.3682 265.534 70.6401 265.622 71.0161 265.622 cv
71.3442 265.622 71.6743 265.549 72.0063 265.4 cv
72.3379 265.253 72.752 265.011 73.248 264.675 cv
73.248 260.33 li
74.0044 260.33 li
cp
f
78.8862 265.299 mo
79.314 265.122 79.6963 264.887 80.0322 264.591 cv
80.0322 263.162 li
77.5483 263.187 li
76.9644 263.21 76.6724 263.511 76.6724 264.087 cv
76.6724 264.591 li
76.6724 264.927 76.7583 265.173 76.9302 265.328 cv
77.1021 265.484 77.3682 265.563 77.728 265.563 cv
78.0723 265.563 78.458 265.475 78.8862 265.299 cv
cp
80.3384 260.589 mo
80.646 260.864 80.8003 261.322 80.8003 261.963 cv
80.8003 266.139 li
80.2002 266.139 li
80.104 265.118 li
79.8164 265.406 79.4443 265.664 78.9883 265.893 cv
78.5322 266.12 78.0562 266.234 77.5601 266.234 cv
77.0483 266.234 76.644 266.099 76.3481 265.826 cv
76.0522 265.555 75.9043 265.166 75.9043 264.662 cv
75.9043 263.99 li
75.9043 263.543 76.0361 263.194 76.3003 262.946 cv
76.5645 262.698 76.9399 262.574 77.4282 262.574 cv
80.0322 262.574 li
80.0322 261.963 li
80.0322 261.578 79.9424 261.295 79.7622 261.11 cv
79.582 260.927 79.2603 260.834 78.7964 260.834 cv
78.1079 260.834 77.248 260.891 76.2163 261.002 cv
76.144 260.438 li
77.3042 260.263 78.2363 260.175 78.9404 260.175 cv
79.5645 260.175 80.0303 260.313 80.3384 260.589 cv
cp
f
83.9063 264.921 mo
83.9502 264.965 83.9722 265.043 83.9722 265.154 cv
83.9722 265.839 li
83.9722 265.942 83.9502 266.019 83.9063 266.066 cv
83.8623 266.114 83.7842 266.139 83.6724 266.139 cv
83.4082 266.139 li
83.3042 266.139 83.23 266.114 83.186 266.066 cv
83.1421 266.019 83.1201 265.942 83.1201 265.839 cv
83.1201 265.154 li
83.1201 265.051 83.1421 264.975 83.186 264.927 cv
83.23 264.879 83.3042 264.854 83.4082 264.854 cv
83.6724 264.854 li
83.7842 264.854 83.8623 264.877 83.9063 264.921 cv
cp
f
90.1162 266.139 mo
89.3364 266.139 li
89.3364 257.858 li
90.1162 257.858 li
90.1162 266.139 li
cp
f
96.7764 260.582 mo
97.04 260.854 97.1724 261.251 97.1724 261.771 cv
97.1724 266.139 li
96.416 266.139 li
96.416 261.975 li
96.416 261.566 96.3384 261.274 96.1821 261.099 cv
96.0264 260.923 95.7681 260.834 95.4082 260.834 cv
95.0562 260.834 94.7021 260.912 94.3462 261.068 cv
93.9902 261.225 93.5361 261.482 92.9844 261.843 cv
92.9961 266.139 li
92.228 266.139 li
92.228 260.33 li
92.8643 260.33 li
92.9121 261.29 li
93.8799 260.547 94.7803 260.175 95.6123 260.175 cv
96.124 260.175 96.5122 260.311 96.7764 260.582 cv
cp
f
104.886 265.299 mo
105.314 265.122 105.696 264.887 106.032 264.591 cv
106.032 263.162 li
103.548 263.187 li
102.964 263.21 102.672 263.511 102.672 264.087 cv
102.672 264.591 li
102.672 264.927 102.758 265.173 102.93 265.328 cv
103.102 265.484 103.368 265.563 103.728 265.563 cv
104.072 265.563 104.458 265.475 104.886 265.299 cv
cp
106.338 260.589 mo
106.646 260.864 106.8 261.322 106.8 261.963 cv
106.8 266.139 li
106.2 266.139 li
106.104 265.118 li
105.816 265.406 105.444 265.664 104.988 265.893 cv
104.532 266.12 104.056 266.234 103.56 266.234 cv
103.048 266.234 102.644 266.099 102.348 265.826 cv
102.052 265.555 101.904 265.166 101.904 264.662 cv
101.904 263.99 li
101.904 263.543 102.036 263.194 102.3 262.946 cv
102.564 262.698 102.94 262.574 103.428 262.574 cv
106.032 262.574 li
106.032 261.963 li
106.032 261.578 105.942 261.295 105.762 261.11 cv
105.582 260.927 105.26 260.834 104.796 260.834 cv
104.108 260.834 103.248 260.891 102.216 261.002 cv
102.144 260.438 li
103.304 260.263 104.236 260.175 104.94 260.175 cv
105.564 260.175 106.03 260.313 106.338 260.589 cv
cp
f
113.776 260.582 mo
114.04 260.854 114.172 261.251 114.172 261.771 cv
114.172 266.139 li
113.416 266.139 li
113.416 261.975 li
113.416 261.566 113.338 261.274 113.182 261.099 cv
113.026 260.923 112.768 260.834 112.408 260.834 cv
112.056 260.834 111.702 260.912 111.346 261.068 cv
110.99 261.225 110.536 261.482 109.984 261.843 cv
109.996 266.139 li
109.228 266.139 li
109.228 260.33 li
109.864 260.33 li
109.912 261.29 li
110.88 260.547 111.78 260.175 112.612 260.175 cv
113.124 260.175 113.512 260.311 113.776 260.582 cv
cp
f
117.38 260.931 mo
117.38 264.698 li
117.38 264.986 117.45 265.198 117.59 265.334 cv
117.73 265.471 117.944 265.538 118.232 265.538 cv
119.18 265.538 li
119.276 266.114 li
119.108 266.146 118.898 266.175 118.646 266.198 cv
118.394 266.223 118.2 266.234 118.064 266.234 cv
117.584 266.234 117.224 266.11 116.984 265.862 cv
116.744 265.614 116.624 265.255 116.624 264.782 cv
116.624 260.931 li
115.568 260.931 li
115.568 260.391 li
116.624 260.33 li
116.624 258.566 li
117.38 258.566 li
117.38 260.33 li
119.348 260.33 li
119.348 260.931 li
117.38 260.931 li
cp
f
121.506 261.038 mo
121.246 261.175 121.056 261.398 120.936 261.71 cv
120.816 262.022 120.748 262.454 120.732 263.007 cv
123.456 263.007 li
123.952 263.007 124.2 262.69 124.2 262.059 cv
124.2 261.626 124.074 261.314 123.822 261.122 cv
123.57 260.931 123.156 260.834 122.58 260.834 cv
122.124 260.834 121.766 260.902 121.506 261.038 cv
cp
124.752 265.479 mo
124.836 265.994 li
124.604 266.083 124.272 266.152 123.84 266.204 cv
123.408 266.257 123.008 266.282 122.64 266.282 cv
121.984 266.282 121.46 266.181 121.068 265.977 cv
120.676 265.772 120.39 265.448 120.21 265.005 cv
120.03 264.561 119.94 263.963 119.94 263.21 cv
119.94 262.45 120.028 261.851 120.204 261.41 cv
120.38 260.971 120.656 260.654 121.032 260.463 cv
121.408 260.271 121.912 260.175 122.544 260.175 cv
123.376 260.175 123.988 260.328 124.38 260.637 cv
124.772 260.944 124.968 261.41 124.968 262.034 cv
124.968 263.083 124.524 263.606 123.636 263.606 cv
120.744 263.606 li
120.768 264.135 120.854 264.542 121.002 264.83 cv
121.15 265.118 121.362 265.322 121.638 265.442 cv
121.914 265.563 122.284 265.622 122.748 265.622 cv
123.348 265.622 124.016 265.574 124.752 265.479 cv
cp
f
137.388 260.582 mo
137.652 260.854 137.784 261.251 137.784 261.771 cv
137.784 266.139 li
137.028 266.139 li
137.028 261.975 li
137.02 261.574 136.934 261.284 136.77 261.104 cv
136.606 260.925 136.348 260.834 135.996 260.834 cv
135.676 260.834 135.37 260.908 135.078 261.057 cv
134.786 261.204 134.384 261.471 133.872 261.854 cv
133.872 266.139 li
133.14 266.139 li
133.14 261.975 li
133.14 261.574 133.056 261.284 132.888 261.104 cv
132.72 260.925 132.46 260.834 132.108 260.834 cv
131.796 260.834 131.49 260.908 131.19 261.057 cv
130.89 261.204 130.488 261.467 129.984 261.843 cv
129.984 266.139 li
129.228 266.139 li
129.228 260.33 li
129.852 260.33 li
129.9 261.303 li
130.74 260.551 131.556 260.175 132.348 260.175 cv
133.172 260.175 133.664 260.543 133.824 261.278 cv
134.656 260.543 135.464 260.175 136.248 260.175 cv
136.744 260.175 137.124 260.311 137.388 260.582 cv
cp
f
141.506 261.038 mo
141.246 261.175 141.056 261.398 140.936 261.71 cv
140.816 262.022 140.748 262.454 140.732 263.007 cv
143.456 263.007 li
143.952 263.007 144.2 262.69 144.2 262.059 cv
144.2 261.626 144.074 261.314 143.822 261.122 cv
143.57 260.931 143.156 260.834 142.58 260.834 cv
142.124 260.834 141.766 260.902 141.506 261.038 cv
cp
144.752 265.479 mo
144.836 265.994 li
144.604 266.083 144.272 266.152 143.84 266.204 cv
143.408 266.257 143.008 266.282 142.64 266.282 cv
141.984 266.282 141.46 266.181 141.068 265.977 cv
140.676 265.772 140.39 265.448 140.21 265.005 cv
140.03 264.561 139.94 263.963 139.94 263.21 cv
139.94 262.45 140.028 261.851 140.204 261.41 cv
140.38 260.971 140.656 260.654 141.032 260.463 cv
141.408 260.271 141.912 260.175 142.544 260.175 cv
143.376 260.175 143.988 260.328 144.38 260.637 cv
144.772 260.944 144.968 261.41 144.968 262.034 cv
144.968 263.083 144.524 263.606 143.636 263.606 cv
140.744 263.606 li
140.768 264.135 140.854 264.542 141.002 264.83 cv
141.15 265.118 141.362 265.322 141.638 265.442 cv
141.914 265.563 142.284 265.622 142.748 265.622 cv
143.348 265.622 144.016 265.574 144.752 265.479 cv
cp
f
147.38 260.931 mo
147.38 264.698 li
147.38 264.986 147.45 265.198 147.59 265.334 cv
147.73 265.471 147.944 265.538 148.232 265.538 cv
149.18 265.538 li
149.276 266.114 li
149.108 266.146 148.898 266.175 148.646 266.198 cv
148.394 266.223 148.2 266.234 148.064 266.234 cv
147.584 266.234 147.224 266.11 146.984 265.862 cv
146.744 265.614 146.624 265.255 146.624 264.782 cv
146.624 260.931 li
145.568 260.931 li
145.568 260.391 li
146.624 260.33 li
146.624 258.566 li
147.38 258.566 li
147.38 260.33 li
149.348 260.33 li
149.348 260.931 li
147.38 260.931 li
cp
f
155.004 260.33 mo
155.004 266.139 li
154.404 266.139 li
154.344 265.227 li
153.888 265.587 153.45 265.853 153.03 266.024 cv
152.61 266.196 152.188 266.282 151.764 266.282 cv
151.244 266.282 150.852 266.148 150.588 265.881 cv
150.324 265.612 150.192 265.219 150.192 264.698 cv
150.192 260.33 li
150.948 260.33 li
150.948 264.494 li
150.948 264.895 151.032 265.183 151.2 265.358 cv
151.368 265.534 151.64 265.622 152.016 265.622 cv
152.344 265.622 152.674 265.549 153.006 265.4 cv
153.338 265.253 153.752 265.011 154.248 264.675 cv
154.248 260.33 li
155.004 260.33 li
cp
f
161.476 260.354 mo
161.404 260.906 li
160.316 260.858 159.488 260.834 158.92 260.834 cv
158.568 260.834 158.304 260.854 158.128 260.895 cv
157.952 260.935 157.822 261.019 157.738 261.146 cv
157.654 261.274 157.612 261.479 157.612 261.759 cv
157.612 262.087 157.68 262.314 157.816 262.442 cv
157.952 262.57 158.18 262.666 158.5 262.73 cv
160.288 263.066 li
160.752 263.162 161.092 263.328 161.308 263.564 cv
161.524 263.801 161.632 264.154 161.632 264.626 cv
161.632 265.091 161.546 265.44 161.374 265.677 cv
161.202 265.912 160.948 266.07 160.612 266.15 cv
160.276 266.23 159.812 266.271 159.22 266.271 cv
158.428 266.271 157.688 266.219 157 266.114 cv
157.06 265.551 li
157.588 265.599 158.14 265.622 158.716 265.622 cv
159.088 265.622 li
159.576 265.614 159.942 265.587 160.186 265.538 cv
160.43 265.49 160.608 265.396 160.72 265.257 cv
160.832 265.116 160.888 264.906 160.888 264.626 cv
160.888 264.314 160.812 264.095 160.66 263.967 cv
160.508 263.839 160.268 263.742 159.94 263.679 cv
158.164 263.343 li
157.708 263.255 157.378 263.089 157.174 262.845 cv
156.97 262.601 156.868 262.238 156.868 261.759 cv
156.868 261.318 156.942 260.984 157.09 260.757 cv
157.238 260.528 157.46 260.374 157.756 260.294 cv
158.052 260.215 158.46 260.175 158.98 260.175 cv
159.804 260.175 160.636 260.234 161.476 260.354 cv
cp
f
166.894 264.65 mo
166.994 264.994 167.152 265.24 167.368 265.389 cv
167.584 265.536 167.876 265.61 168.244 265.61 cv
168.572 265.61 168.878 265.543 169.162 265.406 cv
169.446 265.271 169.816 265.034 170.272 264.698 cv
170.272 261.267 li
169.832 261.122 169.466 261.017 169.174 260.948 cv
168.882 260.881 168.584 260.847 168.28 260.847 cv
167.896 260.847 167.594 260.918 167.374 261.063 cv
167.154 261.206 166.994 261.448 166.894 261.788 cv
166.794 262.129 166.744 262.603 166.744 263.21 cv
166.744 263.826 166.794 264.307 166.894 264.65 cv
cp
171.028 257.738 mo
171.028 266.139 li
170.44 266.139 li
170.368 265.25 li
169.56 265.938 168.78 266.282 168.028 266.282 cv
167.292 266.282 166.762 266.038 166.438 265.551 cv
166.114 265.063 165.952 264.286 165.952 263.223 cv
165.952 262.479 166.028 261.885 166.18 261.44 cv
166.332 260.996 166.566 260.675 166.882 260.475 cv
167.198 260.274 167.612 260.175 168.124 260.175 cv
168.836 260.175 169.568 260.362 170.32 260.738 cv
170.288 260.475 170.272 260.095 170.272 259.599 cv
170.272 257.738 li
171.028 257.738 li
cp
f
174.032 266.139 mo
173.276 266.139 li
173.276 260.33 li
174.032 260.33 li
174.032 266.139 li
cp
174.08 258.135 mo
174.08 258.83 li
174.08 258.998 173.996 259.082 173.828 259.082 cv
173.48 259.082 li
173.312 259.082 173.228 258.998 173.228 258.83 cv
173.228 258.135 li
173.228 257.967 173.312 257.883 173.48 257.883 cv
173.828 257.883 li
173.996 257.883 174.08 257.967 174.08 258.135 cv
cp
f
179.588 260.234 mo
179.916 260.274 180.204 260.343 180.452 260.438 cv
180.332 260.931 li
179.908 260.866 179.392 260.834 178.784 260.834 cv
178.264 260.834 177.858 260.906 177.566 261.051 cv
177.274 261.194 177.062 261.438 176.93 261.782 cv
176.798 262.127 176.732 262.61 176.732 263.234 cv
176.732 263.858 176.798 264.343 176.93 264.687 cv
177.062 265.03 177.274 265.272 177.566 265.412 cv
177.858 265.553 178.264 265.622 178.784 265.622 cv
179.456 265.622 180.02 265.578 180.476 265.49 cv
180.56 266.019 li
179.968 266.194 179.336 266.282 178.664 266.282 cv
177.992 266.282 177.458 266.185 177.062 265.988 cv
176.666 265.793 176.38 265.475 176.204 265.034 cv
176.028 264.595 175.94 263.994 175.94 263.234 cv
175.94 262.475 176.028 261.874 176.204 261.435 cv
176.38 260.994 176.666 260.675 177.062 260.475 cv
177.458 260.274 177.992 260.175 178.664 260.175 cv
178.952 260.175 179.26 260.194 179.588 260.234 cv
cp
f
183.38 260.931 mo
183.38 264.698 li
183.38 264.986 183.45 265.198 183.59 265.334 cv
183.73 265.471 183.944 265.538 184.232 265.538 cv
185.18 265.538 li
185.276 266.114 li
185.108 266.146 184.898 266.175 184.646 266.198 cv
184.394 266.223 184.2 266.234 184.064 266.234 cv
183.584 266.234 183.224 266.11 182.984 265.862 cv
182.744 265.614 182.624 265.255 182.624 264.782 cv
182.624 260.931 li
181.568 260.931 li
181.568 260.391 li
182.624 260.33 li
182.624 258.566 li
183.38 258.566 li
183.38 260.33 li
185.348 260.33 li
185.348 260.931 li
183.38 260.931 li
cp
f
191.004 260.33 mo
191.004 266.139 li
190.404 266.139 li
190.344 265.227 li
189.888 265.587 189.45 265.853 189.03 266.024 cv
188.61 266.196 188.188 266.282 187.764 266.282 cv
187.244 266.282 186.852 266.148 186.588 265.881 cv
186.324 265.612 186.192 265.219 186.192 264.698 cv
186.192 260.33 li
186.948 260.33 li
186.948 264.494 li
186.948 264.895 187.032 265.183 187.2 265.358 cv
187.368 265.534 187.64 265.622 188.016 265.622 cv
188.344 265.622 188.674 265.549 189.006 265.4 cv
189.338 265.253 189.752 265.011 190.248 264.675 cv
190.248 260.33 li
191.004 260.33 li
cp
f
201.388 260.582 mo
201.652 260.854 201.784 261.251 201.784 261.771 cv
201.784 266.139 li
201.028 266.139 li
201.028 261.975 li
201.02 261.574 200.934 261.284 200.77 261.104 cv
200.606 260.925 200.348 260.834 199.996 260.834 cv
199.676 260.834 199.37 260.908 199.078 261.057 cv
198.786 261.204 198.384 261.471 197.872 261.854 cv
197.872 266.139 li
197.14 266.139 li
197.14 261.975 li
197.14 261.574 197.056 261.284 196.888 261.104 cv
196.72 260.925 196.46 260.834 196.108 260.834 cv
195.796 260.834 195.49 260.908 195.19 261.057 cv
194.89 261.204 194.488 261.467 193.984 261.843 cv
193.984 266.139 li
193.228 266.139 li
193.228 260.33 li
193.852 260.33 li
193.9 261.303 li
194.74 260.551 195.556 260.175 196.348 260.175 cv
197.172 260.175 197.664 260.543 197.824 261.278 cv
198.656 260.543 199.464 260.175 200.248 260.175 cv
200.744 260.175 201.124 260.311 201.388 260.582 cv
cp
f
209.886 265.299 mo
210.314 265.122 210.696 264.887 211.032 264.591 cv
211.032 263.162 li
208.548 263.187 li
207.964 263.21 207.672 263.511 207.672 264.087 cv
207.672 264.591 li
207.672 264.927 207.758 265.173 207.93 265.328 cv
208.102 265.484 208.368 265.563 208.728 265.563 cv
209.072 265.563 209.458 265.475 209.886 265.299 cv
cp
211.338 260.589 mo
211.646 260.864 211.8 261.322 211.8 261.963 cv
211.8 266.139 li
211.2 266.139 li
211.104 265.118 li
210.816 265.406 210.444 265.664 209.988 265.893 cv
209.532 266.12 209.056 266.234 208.56 266.234 cv
208.048 266.234 207.644 266.099 207.348 265.826 cv
207.052 265.555 206.904 265.166 206.904 264.662 cv
206.904 263.99 li
206.904 263.543 207.036 263.194 207.3 262.946 cv
207.564 262.698 207.94 262.574 208.428 262.574 cv
211.032 262.574 li
211.032 261.963 li
211.032 261.578 210.942 261.295 210.762 261.11 cv
210.582 260.927 210.26 260.834 209.796 260.834 cv
209.108 260.834 208.248 260.891 207.216 261.002 cv
207.144 260.438 li
208.304 260.263 209.236 260.175 209.94 260.175 cv
210.564 260.175 211.03 260.313 211.338 260.589 cv
cp
f
215.38 260.931 mo
215.38 264.698 li
215.38 264.986 215.45 265.198 215.59 265.334 cv
215.73 265.471 215.944 265.538 216.232 265.538 cv
217.18 265.538 li
217.276 266.114 li
217.108 266.146 216.898 266.175 216.646 266.198 cv
216.394 266.223 216.2 266.234 216.064 266.234 cv
215.584 266.234 215.224 266.11 214.984 265.862 cv
214.744 265.614 214.624 265.255 214.624 264.782 cv
214.624 260.931 li
213.568 260.931 li
213.568 260.391 li
214.624 260.33 li
214.624 258.566 li
215.38 258.566 li
215.38 260.33 li
217.348 260.33 li
217.348 260.931 li
215.38 260.931 li
cp
f
222.38 260.931 mo
222.38 264.698 li
222.38 264.986 222.45 265.198 222.59 265.334 cv
222.73 265.471 222.944 265.538 223.232 265.538 cv
224.18 265.538 li
224.276 266.114 li
224.108 266.146 223.898 266.175 223.646 266.198 cv
223.394 266.223 223.2 266.234 223.064 266.234 cv
222.584 266.234 222.224 266.11 221.984 265.862 cv
221.744 265.614 221.624 265.255 221.624 264.782 cv
221.624 260.931 li
220.568 260.931 li
220.568 260.391 li
221.624 260.33 li
221.624 258.566 li
222.38 258.566 li
222.38 260.33 li
224.348 260.33 li
224.348 260.931 li
222.38 260.931 li
cp
f
226.506 261.038 mo
226.246 261.175 226.056 261.398 225.936 261.71 cv
225.816 262.022 225.748 262.454 225.732 263.007 cv
228.456 263.007 li
228.952 263.007 229.2 262.69 229.2 262.059 cv
229.2 261.626 229.074 261.314 228.822 261.122 cv
228.57 260.931 228.156 260.834 227.58 260.834 cv
227.124 260.834 226.766 260.902 226.506 261.038 cv
cp
229.752 265.479 mo
229.836 265.994 li
229.604 266.083 229.272 266.152 228.84 266.204 cv
228.408 266.257 228.008 266.282 227.64 266.282 cv
226.984 266.282 226.46 266.181 226.068 265.977 cv
225.676 265.772 225.39 265.448 225.21 265.005 cv
225.03 264.561 224.94 263.963 224.94 263.21 cv
224.94 262.45 225.028 261.851 225.204 261.41 cv
225.38 260.971 225.656 260.654 226.032 260.463 cv
226.408 260.271 226.912 260.175 227.544 260.175 cv
228.376 260.175 228.988 260.328 229.38 260.637 cv
229.772 260.944 229.968 261.41 229.968 262.034 cv
229.968 263.083 229.524 263.606 228.636 263.606 cv
225.744 263.606 li
225.768 264.135 225.854 264.542 226.002 264.83 cv
226.15 265.118 226.362 265.322 226.638 265.442 cv
226.914 265.563 227.284 265.622 227.748 265.622 cv
228.348 265.622 229.016 265.574 229.752 265.479 cv
cp
f
239.388 260.582 mo
239.652 260.854 239.784 261.251 239.784 261.771 cv
239.784 266.139 li
239.028 266.139 li
239.028 261.975 li
239.02 261.574 238.934 261.284 238.77 261.104 cv
238.606 260.925 238.348 260.834 237.996 260.834 cv
237.676 260.834 237.37 260.908 237.078 261.057 cv
236.786 261.204 236.384 261.471 235.872 261.854 cv
235.872 266.139 li
235.14 266.139 li
235.14 261.975 li
235.14 261.574 235.056 261.284 234.888 261.104 cv
234.72 260.925 234.46 260.834 234.108 260.834 cv
233.796 260.834 233.49 260.908 233.19 261.057 cv
232.89 261.204 232.488 261.467 231.984 261.843 cv
231.984 266.139 li
231.228 266.139 li
231.228 260.33 li
231.852 260.33 li
231.9 261.303 li
232.74 260.551 233.556 260.175 234.348 260.175 cv
235.172 260.175 235.664 260.543 235.824 261.278 cv
236.656 260.543 237.464 260.175 238.248 260.175 cv
238.744 260.175 239.124 260.311 239.388 260.582 cv
cp
f
245.942 265.395 mo
246.162 265.25 246.324 265.009 246.428 264.668 cv
246.532 264.328 246.584 263.854 246.584 263.246 cv
246.584 262.654 246.534 262.185 246.434 261.837 cv
246.334 261.488 246.178 261.236 245.966 261.08 cv
245.754 260.925 245.468 260.847 245.108 260.847 cv
244.78 260.847 244.454 260.925 244.13 261.08 cv
243.806 261.236 243.424 261.494 242.984 261.854 cv
242.984 265.179 li
243.448 265.33 243.828 265.44 244.124 265.509 cv
244.42 265.576 244.724 265.61 245.036 265.61 cv
245.42 265.61 245.722 265.538 245.942 265.395 cv
cp
246.884 260.918 mo
247.204 261.415 247.364 262.194 247.364 263.259 cv
247.364 263.994 247.288 264.584 247.136 265.028 cv
246.984 265.473 246.752 265.793 246.44 265.988 cv
246.128 266.185 245.716 266.282 245.204 266.282 cv
244.436 266.282 243.688 266.078 242.96 265.671 cv
242.984 265.935 242.996 266.175 242.996 266.391 cv
242.984 266.822 li
242.984 268.587 li
242.228 268.587 li
242.228 260.33 li
242.852 260.33 li
242.924 261.29 li
243.276 260.938 243.662 260.665 244.082 260.469 cv
244.502 260.272 244.916 260.175 245.324 260.175 cv
246.044 260.175 246.564 260.423 246.884 260.918 cv
cp
f
250.494 261.057 mo
250.226 261.204 250.034 261.448 249.918 261.788 cv
249.802 262.129 249.744 262.61 249.744 263.234 cv
249.744 263.858 249.802 264.341 249.918 264.681 cv
250.034 265.021 250.226 265.265 250.494 265.412 cv
250.762 265.561 251.136 265.635 251.616 265.635 cv
252.096 265.635 252.47 265.561 252.738 265.412 cv
253.006 265.265 253.198 265.021 253.314 264.681 cv
253.43 264.341 253.488 263.858 253.488 263.234 cv
253.488 262.61 253.43 262.129 253.314 261.788 cv
253.198 261.448 253.006 261.204 252.738 261.057 cv
252.47 260.908 252.096 260.834 251.616 260.834 cv
251.136 260.834 250.762 260.908 250.494 261.057 cv
cp
253.182 260.475 mo
253.57 260.675 253.85 260.996 254.022 261.44 cv
254.194 261.885 254.28 262.482 254.28 263.234 cv
254.28 263.986 254.194 264.583 254.022 265.022 cv
253.85 265.463 253.57 265.782 253.182 265.982 cv
252.794 266.183 252.272 266.282 251.616 266.282 cv
250.952 266.282 250.428 266.183 250.044 265.982 cv
249.66 265.782 249.38 265.463 249.204 265.022 cv
249.028 264.583 248.94 263.986 248.94 263.234 cv
248.94 262.482 249.028 261.885 249.204 261.44 cv
249.38 260.996 249.662 260.675 250.05 260.475 cv
250.438 260.274 250.96 260.175 251.616 260.175 cv
252.272 260.175 252.794 260.274 253.182 260.475 cv
cp
f
259.72 260.175 mo
259.624 260.895 li
259.336 260.895 li
259 260.895 258.662 260.965 258.322 261.104 cv
257.982 261.244 257.54 261.471 256.996 261.782 cv
256.996 266.139 li
256.228 266.139 li
256.228 260.33 li
256.816 260.33 li
256.9 261.303 li
257.844 260.551 258.7 260.175 259.468 260.175 cv
259.72 260.175 li
cp
f
261.906 264.921 mo
261.95 264.965 261.972 265.043 261.972 265.154 cv
261.972 265.839 li
261.972 265.942 261.95 266.019 261.906 266.066 cv
261.862 266.114 261.784 266.139 261.672 266.139 cv
261.408 266.139 li
261.304 266.139 261.23 266.114 261.186 266.066 cv
261.142 266.019 261.12 265.942 261.12 265.839 cv
261.12 265.154 li
261.12 265.051 261.142 264.975 261.186 264.927 cv
261.23 264.879 261.304 264.854 261.408 264.854 cv
261.672 264.854 li
261.784 264.854 261.862 264.877 261.906 264.921 cv
cp
f
65.7109 164.618 mo
65.3149 168.679 li
64.8081 168.679 64.4121 168.668 64.1265 168.646 cv
61.6167 168.603 59.4814 168.58 57.7207 168.58 cv
56.6641 168.58 55.9541 168.668 55.5908 168.844 cv
55.2275 169.021 55.0459 169.406 55.0459 170 cv
55.0459 170.507 55.1997 170.897 55.5083 171.172 cv
55.8164 171.448 56.3887 171.729 57.2251 172.014 cv
61.4185 173.632 li
63.2456 174.358 64.5332 175.25 65.2817 176.307 cv
66.0298 177.363 66.4048 178.75 66.4048 180.467 cv
66.4048 182.206 66.124 183.56 65.5625 184.528 cv
65.0015 185.497 64.0874 186.19 62.8218 186.608 cv
61.5562 187.026 59.7788 187.236 57.4893 187.236 cv
54.584 187.236 51.7988 186.906 49.1357 186.245 cv
49.499 181.854 li
50.6875 181.887 li
55.1782 181.975 57.4341 182.019 57.4565 182.019 cv
58.5566 182.019 59.2891 181.925 59.6523 181.738 cv
60.0156 181.551 60.1968 181.172 60.1968 180.599 cv
60.1968 180.071 60.0703 179.686 59.8174 179.443 cv
59.564 179.202 59.085 178.948 58.3809 178.684 cv
53.8242 176.868 li
52.0415 176.142 50.7754 175.256 50.0273 174.21 cv
49.2783 173.165 48.9043 171.794 48.9043 170.099 cv
48.9043 168.36 49.1958 167.023 49.7793 166.087 cv
50.3623 165.152 51.2817 164.502 52.5366 164.139 cv
53.7915 163.776 55.5415 163.594 57.7866 163.594 cv
60.978 163.594 63.6196 163.936 65.7109 164.618 cv
cp
.290196 .141176 .568627 rgb
f
75.7485 174.523 mo
75.396 174.766 75.1484 175.195 75.0054 175.812 cv
74.8623 176.428 74.791 177.363 74.791 178.618 cv
74.791 179.851 74.8623 180.775 75.0054 181.392 cv
75.1484 182.008 75.396 182.432 75.7485 182.663 cv
76.1006 182.894 76.6289 183.009 77.3335 183.009 cv
78.0376 183.009 78.5659 182.894 78.9185 182.663 cv
79.27 182.432 79.5181 182.008 79.6611 181.392 cv
79.8042 180.775 79.876 179.851 79.876 178.618 cv
79.876 177.385 79.8042 176.455 79.6611 175.828 cv
79.5181 175.201 79.27 174.766 78.9185 174.523 cv
78.5659 174.282 78.0376 174.16 77.3335 174.16 cv
76.6289 174.16 76.1006 174.282 75.7485 174.523 cv
cp
82.5176 170.792 mo
83.7939 171.365 84.7241 172.278 85.3076 173.533 cv
85.8906 174.788 86.1826 176.483 86.1826 178.618 cv
86.1826 180.753 85.896 182.438 85.3242 183.67 cv
84.7515 184.903 83.8218 185.8 82.5337 186.361 cv
81.2461 186.922 79.5127 187.203 77.3335 187.203 cv
75.1543 187.203 73.4258 186.922 72.1494 186.361 cv
70.8726 185.8 69.9424 184.897 69.3594 183.653 cv
68.7759 182.41 68.4844 180.731 68.4844 178.618 cv
68.4844 176.483 68.7759 174.788 69.3594 173.533 cv
69.9424 172.278 70.8726 171.365 72.1494 170.792 cv
73.4258 170.22 75.1543 169.934 77.3335 169.934 cv
79.5127 169.934 81.2407 170.22 82.5176 170.792 cv
cp
f
100.281 170.198 mo
101.47 170.375 102.494 170.66 103.352 171.057 cv
102.758 174.788 li
97.9038 174.755 li
97.0454 174.755 96.3794 174.865 95.9063 175.085 cv
95.4326 175.305 95.0972 175.685 94.8989 176.224 cv
94.7012 176.764 94.6021 177.55 94.6021 178.585 cv
94.6021 179.62 94.7012 180.407 94.8989 180.946 cv
95.0972 181.485 95.4326 181.865 95.9063 182.085 cv
96.3794 182.305 97.0454 182.415 97.9038 182.415 cv
99.8188 182.415 101.536 182.328 103.055 182.151 cv
103.616 185.948 li
101.921 186.785 99.6538 187.203 96.8145 187.203 cv
94.7012 187.203 93.0278 186.922 91.7954 186.361 cv
90.5625 185.8 89.6709 184.897 89.1211 183.653 cv
88.5703 182.41 88.2954 180.72 88.2954 178.585 cv
88.2954 176.45 88.5762 174.755 89.1372 173.5 cv
89.6987 172.245 90.5952 171.337 91.8286 170.776 cv
93.061 170.215 94.7451 169.934 96.8804 169.934 cv
97.9585 169.934 99.0928 170.022 100.281 170.198 cv
cp
f
112.135 186.807 mo
106.158 186.807 li
106.158 170.396 li
112.135 170.396 li
112.135 186.807 li
cp
112.168 164.783 mo
112.168 166.5 li
112.168 167.667 111.595 168.25 110.451 168.25 cv
107.842 168.25 li
106.675 168.25 106.092 167.667 106.092 166.5 cv
106.092 164.783 li
106.092 163.594 106.675 163 107.842 163 cv
110.451 163 li
111.595 163 112.168 163.594 112.168 164.783 cv
cp
f
122.37 183.009 mo
123.361 183.009 124.428 182.625 125.573 181.854 cv
125.573 179.84 li
122.139 179.84 li
121.214 179.862 120.752 180.291 120.752 181.127 cv
120.752 181.688 li
120.752 182.569 121.291 183.009 122.37 183.009 cv
cp
129.865 171.37 mo
130.988 172.328 131.549 173.984 131.549 176.34 cv
131.549 186.807 li
126.794 186.807 li
126.233 184.396 li
125.573 185.211 124.758 185.888 123.79 186.427 cv
122.821 186.966 121.688 187.236 120.389 187.236 cv
118.782 187.236 117.461 186.823 116.427 185.998 cv
115.392 185.172 114.875 184.022 114.875 182.547 cv
114.875 180.896 li
114.875 179.598 115.342 178.574 116.278 177.826 cv
117.213 177.078 118.496 176.703 120.125 176.703 cv
125.573 176.703 li
125.573 176.307 li
125.551 175.603 125.38 175.113 125.061 174.837 cv
124.742 174.563 124.153 174.424 123.294 174.424 cv
121.159 174.424 118.815 174.502 116.262 174.656 cv
115.733 170.759 li
116.943 170.54 118.435 170.347 120.208 170.182 cv
121.979 170.017 123.481 169.934 124.714 169.934 cv
127.026 169.934 128.743 170.413 129.865 171.37 cv
cp
f
140.794 181.094 mo
140.794 181.579 140.937 181.937 141.223 182.167 cv
141.509 182.398 141.95 182.514 142.544 182.514 cv
143.733 182.514 li
144.426 186.477 li
144.008 186.719 143.347 186.906 142.445 187.038 cv
141.542 187.17 140.728 187.236 140.001 187.236 cv
138.395 187.236 137.129 186.834 136.205 186.031 cv
135.28 185.228 134.817 184.11 134.817 182.679 cv
134.817 163.693 li
140.794 163.693 li
140.794 181.094 li
cp
f
177.198 171.106 mo
177.979 171.888 178.37 173.027 178.37 174.523 cv
178.37 186.807 li
172.394 186.807 li
172.394 176.406 li
172.394 175.899 172.294 175.542 172.096 175.333 cv
171.898 175.124 171.546 175.019 171.04 175.019 cv
170.665 175.019 170.285 175.08 169.9 175.201 cv
169.515 175.322 168.993 175.547 168.332 175.877 cv
168.332 186.807 li
162.554 186.807 li
162.554 176.406 li
162.554 175.899 162.443 175.542 162.224 175.333 cv
162.003 175.124 161.651 175.019 161.167 175.019 cv
160.771 175.019 160.391 175.074 160.028 175.184 cv
159.665 175.294 159.153 175.503 158.492 175.812 cv
158.492 186.807 li
152.516 186.807 li
152.516 170.396 li
157.238 170.396 li
157.733 172.807 li
158.745 171.816 159.719 171.09 160.655 170.627 cv
161.59 170.165 162.631 169.934 163.775 169.934 cv
165.999 169.934 167.408 170.782 168.002 172.477 cv
168.926 171.596 169.84 170.952 170.743 170.545 cv
171.645 170.138 172.635 169.934 173.714 169.934 cv
175.255 169.934 176.416 170.325 177.198 171.106 cv
cp
f
188.375 174.243 mo
188.022 174.408 187.769 174.705 187.615 175.134 cv
187.461 175.563 187.362 176.208 187.318 177.066 cv
190.653 177.066 li
191.335 177.066 191.781 176.962 191.99 176.752 cv
192.199 176.543 192.304 176.164 192.304 175.613 cv
192.304 174.975 192.127 174.546 191.775 174.326 cv
191.423 174.105 190.785 173.995 189.86 173.995 cv
189.222 173.995 188.726 174.078 188.375 174.243 cv
cp
197.091 182.151 mo
197.62 185.816 li
195.792 186.741 193.25 187.203 189.992 187.203 cv
186.756 187.203 184.45 186.521 183.075 185.156 cv
181.699 183.791 181.011 181.634 181.011 178.684 cv
181.011 176.505 181.309 174.783 181.903 173.517 cv
182.497 172.251 183.433 171.337 184.709 170.776 cv
185.986 170.215 187.714 169.934 189.893 169.934 cv
192.799 169.934 194.89 170.418 196.167 171.387 cv
197.443 172.355 198.082 173.841 198.082 175.844 cv
198.082 177.341 197.642 178.437 196.761 179.13 cv
195.88 179.823 194.406 180.17 192.337 180.17 cv
187.417 180.17 li
187.549 181.073 187.851 181.694 188.325 182.035 cv
188.798 182.377 189.574 182.547 190.653 182.547 cv
192.656 182.547 194.802 182.415 197.091 182.151 cv
cp
f
209.968 182.151 mo
210.365 182.019 210.827 181.81 211.355 181.523 cv
211.355 174.59 li
210.783 174.414 210.31 174.282 209.936 174.193 cv
209.561 174.105 209.121 174.062 208.615 174.062 cv
207.998 174.062 207.53 174.16 207.211 174.358 cv
206.892 174.557 206.655 174.964 206.501 175.58 cv
206.347 176.197 206.271 177.132 206.271 178.387 cv
206.271 179.509 206.347 180.352 206.501 180.913 cv
206.655 181.474 206.886 181.854 207.195 182.052 cv
207.503 182.25 207.932 182.349 208.482 182.349 cv
209.077 182.349 209.572 182.283 209.968 182.151 cv
cp
217.365 163.693 mo
217.365 186.807 li
212.61 186.807 li
212.115 184.264 li
211.498 185.167 210.684 185.882 209.671 186.411 cv
208.659 186.938 207.426 187.203 205.973 187.203 cv
203.926 187.203 202.435 186.46 201.499 184.974 cv
200.563 183.488 200.096 181.304 200.096 178.42 cv
200.096 176.263 200.327 174.563 200.789 173.318 cv
201.251 172.075 201.939 171.2 202.853 170.693 cv
203.766 170.188 204.938 169.934 206.37 169.934 cv
208.504 169.934 210.21 170.418 211.487 171.387 cv
211.399 169.89 211.355 168.712 211.355 167.854 cv
211.355 163.693 li
217.365 163.693 li
cp
f
226.84 186.807 mo
220.864 186.807 li
220.864 170.396 li
226.84 170.396 li
226.84 186.807 li
cp
226.874 164.783 mo
226.874 166.5 li
226.874 167.667 226.301 168.25 225.156 168.25 cv
222.548 168.25 li
221.381 168.25 220.798 167.667 220.798 166.5 cv
220.798 164.783 li
220.798 163.594 221.381 163 222.548 163 cv
225.156 163 li
226.301 163 226.874 163.594 226.874 164.783 cv
cp
f
237.076 183.009 mo
238.067 183.009 239.134 182.625 240.279 181.854 cv
240.279 179.84 li
236.845 179.84 li
235.92 179.862 235.458 180.291 235.458 181.127 cv
235.458 181.688 li
235.458 182.569 235.997 183.009 237.076 183.009 cv
cp
244.571 171.37 mo
245.694 172.328 246.255 173.984 246.255 176.34 cv
246.255 186.807 li
241.5 186.807 li
240.939 184.396 li
240.279 185.211 239.464 185.888 238.496 186.427 cv
237.527 186.966 236.394 187.236 235.095 187.236 cv
233.488 187.236 232.167 186.823 231.133 185.998 cv
230.098 185.172 229.581 184.022 229.581 182.547 cv
229.581 180.896 li
229.581 179.598 230.048 178.574 230.984 177.826 cv
231.919 177.078 233.202 176.703 234.831 176.703 cv
240.279 176.703 li
240.279 176.307 li
240.257 175.603 240.086 175.113 239.767 174.837 cv
239.448 174.563 238.859 174.424 238 174.424 cv
235.865 174.424 233.521 174.502 230.968 174.656 cv
230.439 170.759 li
231.649 170.54 233.141 170.347 234.914 170.182 cv
236.685 170.017 238.188 169.934 239.42 169.934 cv
241.732 169.934 243.449 170.413 244.571 171.37 cv
cp
f
143.661 337 mo
58.5972 337 li
53.0742 337 48.5972 332.522 48.5972 327 cv
48.5972 312.883 li
48.5972 307.359 53.0742 302.883 58.5972 302.883 cv
143.661 302.883 li
149.184 302.883 153.661 307.359 153.661 312.883 cv
153.661 327 li
153.661 332.522 149.184 337 143.661 337 cv
cp
f
71.9575 321.953 mo
71.9575 322.233 72.0132 322.431 72.1255 322.547 cv
72.2373 322.663 72.4331 322.722 72.7134 322.722 cv
75.6533 322.722 li
75.7134 323.646 li
74.9375 323.717 73.8735 323.753 72.5215 323.753 cv
71.3452 323.753 70.7573 323.209 70.7573 322.121 cv
70.7573 315.449 li
71.9575 315.449 li
71.9575 321.953 li
cp
.984314 .980392 .988235 rgb
f
78.4253 318.856 mo
78.2095 318.961 78.0493 319.138 77.9453 319.385 cv
77.8413 319.634 77.7813 319.993 77.7656 320.465 cv
80.1055 320.465 li
80.4893 320.465 80.6816 320.205 80.6816 319.685 cv
80.6733 319.325 80.5713 319.071 80.3755 318.923 cv
80.1792 318.774 79.8335 318.701 79.3374 318.701 cv
78.9453 318.701 78.6416 318.753 78.4253 318.856 cv
cp
81.5933 322.757 mo
81.7012 323.524 li
81.4375 323.638 81.0854 323.724 80.6455 323.783 cv
80.2056 323.843 79.7852 323.873 79.3853 323.873 cv
78.6973 323.873 78.1494 323.772 77.7412 323.573 cv
77.3335 323.373 77.0352 323.05 76.8472 322.601 cv
76.6592 322.153 76.5654 321.55 76.5654 320.789 cv
76.5654 320.021 76.6592 319.413 76.8472 318.965 cv
77.0352 318.517 77.3252 318.196 77.7173 318.005 cv
78.1094 317.813 78.6294 317.717 79.2773 317.717 cv
80.1733 317.717 80.8252 317.881 81.2334 318.209 cv
81.6416 318.537 81.8452 319.029 81.8452 319.685 cv
81.8452 320.229 81.7271 320.646 81.4912 320.933 cv
81.2554 321.222 80.8975 321.365 80.4175 321.365 cv
77.7896 321.365 li
77.8291 321.781 77.9136 322.099 78.0415 322.319 cv
78.1694 322.539 78.3516 322.69 78.5874 322.774 cv
78.8232 322.858 79.1411 322.901 79.5415 322.901 cv
80.0615 322.901 80.7451 322.853 81.5933 322.757 cv
cp
f
84.377 322.661 mo
84.5132 322.789 84.729 322.853 85.0254 322.853 cv
85.3213 322.853 85.647 322.785 86.0034 322.649 cv
86.3589 322.513 86.6934 322.306 87.0054 322.024 cv
87.0054 320.981 li
84.8691 320.981 li
84.6133 320.989 84.4331 321.056 84.3291 321.179 cv
84.2251 321.304 84.1733 321.485 84.1733 321.726 cv
84.1733 322.037 li
84.1733 322.325 84.2412 322.533 84.377 322.661 cv
cp
87.665 318.149 mo
88.001 318.437 88.1689 318.937 88.1689 319.649 cv
88.1689 323.729 li
87.2573 323.729 li
87.125 322.806 li
86.8613 323.077 86.5254 323.317 86.1172 323.524 cv
85.709 323.733 85.2651 323.837 84.7852 323.837 cv
84.2412 323.837 83.8071 323.692 83.4834 323.405 cv
83.1592 323.117 82.9971 322.709 82.9971 322.181 cv
82.9971 321.569 li
82.9971 321.104 83.1411 320.745 83.4292 320.489 cv
83.7173 320.233 84.125 320.104 84.6533 320.104 cv
87.0054 320.104 li
87.0054 319.649 li
86.9971 319.289 86.9131 319.041 86.7534 318.905 cv
86.5933 318.769 86.2891 318.701 85.8413 318.701 cv
85.4009 318.701 84.5732 318.749 83.3574 318.845 cv
83.249 317.993 li
83.689 317.913 84.1753 317.847 84.707 317.795 cv
85.2393 317.743 85.7012 317.717 86.0933 317.717 cv
86.8052 317.717 87.3291 317.86 87.665 318.149 cv
cp
f
93.6772 317.717 mo
93.5454 318.81 li
93.1855 318.81 li
92.8975 318.81 92.6055 318.858 92.3096 318.959 cv
92.0132 319.06 91.6055 319.233 91.0854 319.481 cv
91.0854 323.729 li
89.9214 323.729 li
89.9214 317.873 li
90.8213 317.873 li
90.9414 318.772 li
91.8213 318.069 92.6416 317.717 93.4014 317.717 cv
93.6772 317.717 li
cp
f
99.5991 318.131 mo
99.8672 318.407 100.001 318.81 100.001 319.337 cv
100.001 323.729 li
98.8369 323.729 li
98.8369 319.673 li
98.8369 319.306 98.7832 319.052 98.6753 318.911 cv
98.5674 318.771 98.373 318.701 98.0933 318.701 cv
97.7891 318.701 97.481 318.769 97.1689 318.905 cv
96.8569 319.041 96.4409 319.265 95.9209 319.577 cv
95.9331 323.729 li
94.769 323.729 li
94.769 317.873 li
95.7529 317.873 li
95.8252 318.761 li
96.7529 318.065 97.6172 317.717 98.417 317.717 cv
98.937 317.717 99.3311 317.854 99.5991 318.131 cv
cp
f
112.763 318.131 mo
113.031 318.407 113.165 318.81 113.165 319.337 cv
113.165 323.729 li
112.025 323.729 li
112.025 319.673 li
112.017 319.329 111.949 319.081 111.821 318.929 cv
111.693 318.777 111.477 318.701 111.173 318.701 cv
110.909 318.701 110.657 318.761 110.417 318.881 cv
110.177 319.001 109.825 319.229 109.361 319.565 cv
109.361 323.729 li
108.245 323.729 li
108.245 319.673 li
108.245 319.321 108.177 319.071 108.041 318.923 cv
107.905 318.774 107.688 318.701 107.393 318.701 cv
107.137 318.701 106.887 318.761 106.643 318.881 cv
106.399 319.001 106.045 319.226 105.581 319.554 cv
105.581 323.729 li
104.429 323.729 li
104.429 317.873 li
105.389 317.873 li
105.449 318.761 li
105.849 318.417 106.241 318.157 106.625 317.981 cv
107.009 317.806 107.401 317.717 107.801 317.717 cv
108.601 317.717 109.097 318.058 109.289 318.737 cv
110.064 318.058 110.833 317.717 111.593 317.717 cv
112.104 317.717 112.495 317.854 112.763 318.131 cv
cp
f
116.489 318.888 mo
116.265 319.011 116.105 319.224 116.009 319.522 cv
115.913 319.823 115.865 320.253 115.865 320.813 cv
115.865 321.365 115.913 321.791 116.009 322.091 cv
116.105 322.392 116.265 322.603 116.489 322.728 cv
116.713 322.851 117.033 322.913 117.449 322.913 cv
117.865 322.913 118.185 322.851 118.409 322.728 cv
118.633 322.603 118.793 322.392 118.889 322.091 cv
118.985 321.791 119.033 321.365 119.033 320.813 cv
119.033 320.253 118.985 319.823 118.889 319.522 cv
118.793 319.224 118.633 319.011 118.409 318.888 cv
118.185 318.763 117.865 318.701 117.449 318.701 cv
117.033 318.701 116.713 318.763 116.489 318.888 cv
cp
119.087 318.022 mo
119.491 318.228 119.785 318.554 119.969 319.001 cv
120.153 319.449 120.245 320.054 120.245 320.813 cv
120.245 321.565 120.153 322.163 119.969 322.606 cv
119.785 323.051 119.491 323.375 119.087 323.579 cv
118.683 323.783 118.137 323.885 117.449 323.885 cv
116.761 323.885 116.215 323.783 115.811 323.579 cv
115.407 323.375 115.113 323.051 114.929 322.606 cv
114.745 322.163 114.653 321.565 114.653 320.813 cv
114.653 320.054 114.745 319.449 114.929 319.001 cv
115.113 318.554 115.407 318.228 115.811 318.022 cv
116.215 317.819 116.761 317.717 117.449 317.717 cv
118.137 317.717 118.683 317.819 119.087 318.022 cv
cp
f
125.524 317.717 mo
125.393 318.81 li
125.033 318.81 li
124.745 318.81 124.453 318.858 124.157 318.959 cv
123.86 319.06 123.453 319.233 122.933 319.481 cv
122.933 323.729 li
121.769 323.729 li
121.769 317.873 li
122.668 317.873 li
122.789 318.772 li
123.668 318.069 124.489 317.717 125.249 317.717 cv
125.524 317.717 li
cp
f
128.081 318.856 mo
127.865 318.961 127.705 319.138 127.601 319.385 cv
127.497 319.634 127.437 319.993 127.421 320.465 cv
129.761 320.465 li
130.145 320.465 130.337 320.205 130.337 319.685 cv
130.329 319.325 130.227 319.071 130.031 318.923 cv
129.834 318.774 129.489 318.701 128.993 318.701 cv
128.601 318.701 128.297 318.753 128.081 318.856 cv
cp
131.249 322.757 mo
131.356 323.524 li
131.093 323.638 130.741 323.724 130.301 323.783 cv
129.861 323.843 129.44 323.873 129.041 323.873 cv
128.353 323.873 127.805 323.772 127.396 323.573 cv
126.989 323.373 126.69 323.05 126.502 322.601 cv
126.314 322.153 126.221 321.55 126.221 320.789 cv
126.221 320.021 126.314 319.413 126.502 318.965 cv
126.69 318.517 126.98 318.196 127.373 318.005 cv
127.765 317.813 128.285 317.717 128.933 317.717 cv
129.829 317.717 130.48 317.881 130.889 318.209 cv
131.297 318.537 131.5 319.029 131.5 319.685 cv
131.5 320.229 131.382 320.646 131.146 320.933 cv
130.911 321.222 130.553 321.365 130.073 321.365 cv
127.445 321.365 li
127.484 321.781 127.569 322.099 127.697 322.319 cv
127.825 322.539 128.007 322.69 128.243 322.774 cv
128.479 322.858 128.796 322.901 129.197 322.901 cv
129.717 322.901 130.4 322.853 131.249 322.757 cv
cp
f
252.97 0 mo
252.97 0 li
252.97 51.4233 211.283 93.1099 159.86 93.1099 cv
0 93.1099 li
0 0 li
252.97 0 li
cp
.917647 .909804 .929412 rgb
f
151.47 468.465 mo
151.47 468.465 li
151.47 485.881 137.351 500 119.935 500 cv
0 500 li
0 469.414 24.7944 444.62 55.3799 444.62 cv
127.625 444.62 li
140.794 444.62 151.47 455.296 151.47 468.465 cv
cp
f
548.53 31.5356 mo
548.53 31.5356 li
548.53 14.1191 562.649 0 580.065 0 cv
700 0 li
700 30.5854 675.205 55.3799 644.62 55.3799 cv
572.374 55.3799 li
559.205 55.3799 548.53 44.7046 548.53 31.5356 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.1%%For: (Albina Kondratyeva) ()%%Title: (2011.w003.n001.56B.p12.56.eps)%%CreationDate: 14.11.2020 17:51%%Canvassize: 16383%AI9_DataStream%Gb",Kq*NP(p[EA/]n`8TX<mb\->Cr7#dPp0.[2iF8iOBGj7C=[g:q^S9TnW]HkfhVMU6N%bLs@mUpID,>.[rd<GtdCIo`CW7@'c]%"9+\W.jnqAG=j63F$q+RQ>]k&C?qfqbPTOr\lPskR]B?_=0="njDNmJ:AX1@bI*s?Wgq8i-"bt=j"aggqq5/JP&!X$;T:W^P(p\d%_AF,Mn$1QWgoWibWS_Fk$nsE=H*WtRQ\.d(RCbHKDbA8T,M+EqWaFn^Vn6`MGu+BbNjZc(X-*NKF)Y"Ir*lg7DQsAAW#**`btBb.%U3'MXL*d?b@2XcJAH'J1.<a>Tr%'An5O-hs%c==M-L%n]d?02WW9h)E9=b.*<Sh(#0`N*oM:=WY/+mqcjV++_6V\QJ14'Ttn@h/9%c;$_/G,c$o0K!"M2loZj<rY\3s1'WHppl"6@,,fBXjb_5^a9GB!/,p2T!Z[ij'B(B!`GH=j=o"(e-^XB:^b<Ub;nRXJ/J5r*R8\b%)nuQ.="CbBn>h]mXRNZ(g!BWf;8*aQ^gZ'&T%2[2KZf+F-QO-sBZitM="R!=3f7M6P%*+KKWH!kT1hi."RbgEEAF%6=Mk3S*.dT"%2G,p)l7*>QA`&T;>])JmKh*aH<O1:"67$=R^J=:A?j?7-/\fGJ:t3\\JKWfio&,`aE-C!=>ZYtmUn)6n%SR?4V*Mu"?ETQG<l:/=%@*Ci5l;u/I->$iaVePqX2"@d0i88W;B[nqeeMOq=Bm<Y,f[XdR8$c'iM7lRr5FEkl1/7+HRb;L2VrM/,a2'qLr56pBK=r60Hf7'a%MnRPQm$1?+aE/?(UsmsDS&MG]XD-\XC_j3eZYU&&R)-u(@4SXa3&8"HBo-!jMnKZLr/86"VZ9Y=%5G`7fEX.J^PI)!#rWQ=_S>jP%0uC[b';H51))9"CLc<%W/)l4t12=,fYnuDRJ$Dd-MerKE&9:6M7R]cmr6%PbbSg$]Fp8mi*?br<'_Gf5YSZ;SIrQgT6&%8/`]/^V%fF.3W36\><`Zfm,(I''dN;r[>6&mPl(OI<Spm5u_8I;.B>9?oTA,mb`j<rk'K9&kMHSN)8FCCOmkRhh>(L*6N*:SmZ#l\6S`%I-F%`"#9nXP$Ul&-$)l-JsV$UBqltJ$BMnQ^A4-44#!;3OT!QmQcL/=UCl5+_QtTA0K<XJ>\@o$p$k#[P"<o66:(k^l?0j]n4eflteer%cMfQ>R:\3gAis_5@5DHY+-YSQgY%t4CnRnmAd*:6A=lG;+SV#riTNge!_n`c*)JZT"%!\u&k>IA#[e,"%G#+^ZB:"gdm&4k<`.iU%<0^aG?J.PKB:kr#p+J-.p7D7PYO%lmZ-UfJqe+[MZY]q_g\d]0Z7F<Qqj0p[cd=9?Q^IG.ee5[%J!g`B*5/Y-Eqk^KF6"A@AUJ']%K2:hKn5K"eDQlp>ID8kQ;_`Tq;cuofmPc'A%KAkr(u;7]YGXCq4.?*O>tTg\h><Jr4eRS.=i4kh]QP8'rWfIndD$nRlnqm,mYKbU%r-'H0cn!!qBH_Z0IU>b9:\/qT[e7E)q]:n]o!Ltc61<a^\`[X%f'b8m%.a0q&**D4?fT8^]cm,\o1uLEp$-67bt!aYfam$9he52m%F9kS\BpZ`bJ(u5p.VP!!o'3420IXr_VRheQ[@F`_r8-0-PH9JAOfY6MW=3sjeOEF52eC64*TX($CLk,sXIAs;G)]qg_Ku_G(a1QI%V^9#Uqjl>&*)eG$Ol:`B:$_=/(A"rO@f;%g!$sK)@<<V-G4_$^W^,;U<cBJDj<:'nb&\!ddID-Y7h1t*>SAt#=%9BWel.tN85!-1%;Xf<g&IQI8Gqr08n#N/VHi779?tE0c'=1^T1)8<=XIB6,4N%J3#oeVI$DgjpJP3q0f(O40b>K*j!,@pVC[9ag0e21_m$DC"Ub&1N%bItMTR\M#p%FcDOggSnDZY2DEaQF`eJmXt+iM!/T%M)cJ1CT^*9p!a01gB_o_$7ZB#en5.V[pSbWQAQkNfT::LPQt^?S,mC1kms,%%t@!)V-V]5-l5\h1b+t!Y3@VA8)KBf`,3dCJ6YG[8!IR8UMcpa8-2?Ri**oH=$ter4OdkcE"(+bCAkBP3C9lo31#7DCR&%2"7<\C%-&Q(tW$:)V4=A3lZKJft(XV:nYrV=JoGd/%Mt"4V$u,m>%!kHI7gbBcFD+&b_\$I!m%F/E8ued>81i7iSU=_YDiuutq&nB6)Ksc#%i0S-B12gQ?+.np#d+[1f:KkiOaQc].3q.Rm$$?aJYlQ@Eo8"Gg+=56@Vi^f>aZAgB8.FPqfQf@b0OT29q!"BD)&e.KZE4Oj8>WaO%HO">!X:2T;#(qiM*_KRCY<4hqC&Q,6M3^coG"E)6Q=cEZEC9JBTGkTTmo0PiFp=WD-nQsE3r!H'4?hA>cgn:TY%J.PY2[2)5]5PJ%R'K;NF"RHWBH7r'FG)Cg`XF;V%/\hRR1.D`aKb_&I6d-a&muh7TI#C#;?/.A=PJL1#-gIOi+Hk=*5kq>(%t#-EFe"0!F?3[btr:V%.(<_eG]&-cBsIdqm15l>#J]?S1dPjbnsI?9Ub79&hclU\Wl)!LC-%(<o3Y]Jh?>-+DcJ)t-U%S7/kB`M*DWM3K2-_8c0VIR-'l1D%]Jhmb!U:W?WM9#-]UXKD))[JaX%`Pl%;XKCe<42Bl=KIVTMubmJ\D@c6nqX(l^=B=X#+>%Fb`oGl(B_U,-p![95!(BEj?NG<"5eE%r-0L9kWeQli:b#)89`LE<MUIn957i:fOlf;?'9"a"8k)X4[GN!AfHkF"Ha;K.`#S@Ga5?tMYa0\Bb^@rmb>f\7W`^n,-tTH3F.[k%LA>)k;kOBC,+t-N&U)gE#X("0)Hg6:'<"3]@.?"11aDIKntBi]m0f\%,PYjA"I_i*)k9(r`n9p@*f$l9I#dF.;isQ/g(ZUQ*"$C&%%uANMhsPkCOEfo7qR?2</Zp8n*#;&!nM^3@5X%3b@3coeEeSb'aVn'Cg!W.b!h1Z3-!KO#GWr@.&N30EKUfM2!`"c+]-DR^%N;!_%TQpWfcS5169FC,k&E.tpcR`[<1="SSmhA3BR=NU7g9WVuK7)cuqnW"Znl]DK+1LE=r-"gdLgqH,Cc3a_)0uLoV$+OEBnCG=(e<OB%i+_E<W>El$!(0M<J>:%;9orr2%5`rH`mD/)3G4m*!bR`IM@LI^O@'$b)0_GOB=!Fm*([);n(AGUTeTacl6jH?%R6/"+H#A[`YDCf%_u.0:O$(J2=L:[^GWa;?Rh\J2PWoGd#]"aW(:g(2okJ79/!nbWSfJH<7emUA.OLYO1UDra+Zf37*L`E0XX3SM4A$eH_Y?7!_I:`b%76ZD$3h=n+F@aWu6(H%A4%52i`O.-0=BG,4TuQ=`e\Xjg(l&0A@MZpBKbiKRn[9KACXd"F:mYBi-fA)@nIV4`ruoUZ.86o6LZLqr%is<CXO!goQ_H%=5%bDAc';`=KMT[!+2P%ro5kQOoA!)NXKp%-!E'tZOM_q=_YN*]<7TlHhi.FVlK?OKE8+4e:KI.`3`-=D#'r-_d%VrC$hJeV&R^2_=eq<m`O*P8+,\gsAY]54!1:k[=.i^[33n4Z9.p`]3[s1554gUcK4S=<qJbVZ$B.LK1CE6"j!%s@]C^kT+?C6p%-%Mm[6WJi4rk`*]"]S9%pGE_FS3<*=AmWonLhc8Fa@>fYDe5(O?*VGYVSpbc[JW*0E#WH+r2fac?GU\.B@_fcjX2j,QX#+fQs7#USb%-D\Ak!S9f^&1T2_YOG9nl8Juo'OLtYMeA?SN>Mb0W"OnHTV^At/#^ZQKQ1%MEL9V>k%b1Lc<t+QSQ6ma&m,C)8"gYB45Z[b4g0@J%65I^'cj@!.OAlJL-2ad5K,H#8fRm]q6Sq5jm7<fl02`?cZ8C?d;tU7YMVQ'QK<o5ebA^SYqTO:@:IHc8<upFK3+l6MSZ'6>f!%=P%,H!L3FB/Q2Lj2nEF"?1YMXlcin"]tb/ase?*-.JrKCD9,7?BLA6:d8j*%*=HIZaGODG0Y=BNLTcZLp#<=ZS+K,eR,SMBi&pY8ZM4%.Eb^Pn]0$N_MJoAqC-<k4!T,Z9u_RLr;ti!oL\t'm?)R,W20..RE__S?Yu@]SDhZ_0U@b<Q9lL&;[ge//!;jZft,HKA-^9s>#Wt&%+&2K/%:3&747IG7Y7@ULJjo$f9R>#l&M=8J[P2FRnHQdBfr4?`LX8?jFqnd*31;rLBgJsUeu\@(rs_/5\-NJ>aZSjn1+K?gA3).Z%rc6\s%?t->&Z"*_K8pMsJOXj019uH\Rj$k-Vi]G0EAYH5X'4/6EaP&BdZFNMP'A%70poeg,-38p$o4i'm0Yt6+R)G#E"<"k)c"R1%nfXFF@]-Hm'Z=<`o'4p0Dm;X+HWVj-W/L='K4p</qIQYRCRgq:[&nkVWe*/a*)Z9hhgskX<ig.,<Bc[>HXp+V5D;OZ]Q+">'",W'%bL#Ih%HJNiVQ/ugO0!+f#Op7nn]9[NCJe&g)B*UNd6$&&!_.Om[YVo+6.L[`4blIu3lcg28b2%H!?D#p<\]OXkSKsInBqRgg@#LX%,'t2-=!6c2%ugBuOlo%?i&#Rq#Ht22bkSst7SaOi/5R<qlTc8^NFOr1m.+MLWIW@egrO*Y!UQ4I's3]>k+Q6BVh`e.MFM#R'_=K-%rg46A$ai%F=d3SeNN>eb@tf&n'XQs'hWQIW$*r5:X0?6U.lL?A8%[aMGZD]:dp-cR/C"EOCDY-kb.,co&p%!Y@-Q$nndLH?SrKIm%i\mtj"I1356TA0oQm>b0eHMCP#JPD=/gqV$6T[DR8.Qc`fGraEYCtUXhc7#h:0t,$EF0+3nlV\%<*>#$#,_`bg,1a?k>RL-dJ>C\%$)0<nYm5;FeBfD"@(ca0m_B.;'56tX$Pca0;o>Ho:J5GA>,7d$G0XKhs0bK[*L*5tF!8\FQsOo3hI]g?eQAV=E@T.j5[Q5R;L>OH%VqFpa_'P_3Vdi%dR2)[FFZn/uZ/1YpdQ6.WVnH1KGN*R*'g+KS>N)K['TM_:b@X1[Uj:$2im%UFhe(HD2`HRINa>#G5XQQUH$NYa%nJO,)fjO?AP3+H/,<:Zi6N-%En$!4oUO"*];LHf-.Q]G=HSn3$bd8oY6aMi802VrQf<\H@<:?>d5!;M9"&<uP>H`Ec5e\58_jnFY%PSP6qS-h,5OtKh?E=V#GQ^h]%9omJ!<ie'?Dq3KQZ5FP>VhGcFZM^1r$n\P/#Zdb)N^:lWn=lElNZ^V;ZPlkT8LUU^g*&\UF,thf%gI:89'3K:1<?%>):hCI#+[?,)\;Kep_kV]5B_^o^StotjmrPA)97DE"Ci.)KYomb<=QAF&?jAgZP__M=H^`)fK?aH$I`Gm0@2qXL%!m`Fi#$K8M3L-Qs7Wnc+L070.1b:f^VeY^:W#4n*n_&>(rOXoTI/VMAk6%0'P^0$9kXT\UhAKPD9F#SZ>*IpKT%Pj9rD)a@2pLg%%2W*Q.f4[pmh`+IQdN'jr_7NgQT%S+trc_*ns+`U(p)ia2]g(&Yp`3/FaAW#/NY03)pM3=kSh"ee"3>t1L-N"f@WjY./`85.ls72'%_)p8<_9LCuNEWl9_le^^l,p!_C=h.Pht6a8D%1fXWd$1?i[nH@09=7m\?t(j[HkHT@P'=t(2DI8o\Rp'C5pZVIR-$-rWXJ,V)`j$%JTTJaj^A5c*;2td9(i"Rdq-_5L+ffi0TnU(YG4U7I^.J&7)N/CVY\1`fBU5[XP`7;NlnnIXs$Yh38K&J#@,@OH(kVMUYknZ@n+5\%X91Ir%dMJ"qiD<)V9o\<Q`<1^:g:*MqH7UhKa[=7bADQ+7'2TqeORi0HKVd.\)$ZHf)KUL?^9q\\^[^6_o7odR(JS9qkq2t/O'I"%:@n6sJVKD([%"PQ=fk_bVX:l-Ef`4Y/+t'G23)?8orndADYpQS4*7[e2Hjq@R'%0al*h.-S<PnZ\T56&e&^'X9DO%[oXQ$G-XOD,%RfK4h?S++PA_>%:C,AehD<QAl<kIIcArkecUN"e*H*G&[1.%V9!GhqSELLg1Y(p2M;ni_f8NQ@AD(,qZ?E52cEPCBJY^J?Ik=5rj%o25Un5&KC2p#+;4coS!];^d2?)IRZBp,W)>"7rs.\fOI<j@caW"enSdm8D,gA=uu&j0OB6e(\-`-Y!qa4:NYp0#9&rIWp&tTh)/_%i0Cbj\O$TBqPlCHY$0(M^uO;@-:p#U'7F(2=jj*F+`WWH:Df1%lZde:Xf$8B[rkV.FA5hZ7E]E`c-t+0X4`r<R@:9mR\FC;g%<dY%lDfs.W[;8;\uMcf.P"XJXeZS%8oYPLYnWR.Jc:NXBB>*=aXPo.*SH`1fouqKQSfZ#a@#qQ2??"/6A(,:R*JN%R+?g1(Of9OPGTEt%ahU\Qaf7,3Jc@QW$1h=6IOpe(e##Z>ob%7PL46H'UB)49!fWemV3pa^nK/^!*<*inPXs8aa+#iQ5*p^<65k>Ipb<&"SHtl#&b$&*%+Yf&u_2lWdde)SBD?=M$rF=<;`@3b07h:)+p&jg+!+AJoBdl2VUs,'gZ;XN@9r1a%g&T@6U.SV.nmpHFRqXBiVl;qR:8bdI-B49]%`DZeAh(q1BZTQ9L'6ln^+10s;!<WKrWFb^\OYJXm`m-O](N4H;GaV5P$b.ZWjK+q1Z=_\1g0#fhAmsLH%#3s[.@AD(rFCZ^GXHu=%?QqZ"?Y\ec/,g*-EmhC,_mU5i1jbX*!5'F$3YrJEO;&!i#3`5<;_^tI_1O@cTN,,^+V[5-!_$R5,_PH/+HR?EWCEoJJN,Hfd:c&m%I8GKo"pfb^EoI,]'p'u22UD]SC1*e@lr8P8E[o8XC]IWf?o`*Wg)pAB#Qd8XdQ$n)846g1i'W%82Z2LQO9n,UquElB"WAg*C*Q>/%Yh3GQ39`%.q!]Z8/?39u)d1R!7qL#U8m77T)#-oW7Vt_^%"'OiN$D+3Z^8E]1=ZNiBg>Qb__JqY(#LFFB$(THLWX^T=i6"jfns7,%7b8WkOu*VH$R,9YEtM*'"+=09a9J6AB72'Xdl-Hq>Sc7-dNc"2%HN.9&/!n\LVq9EO3X:gi&6>QGDaTsS\F!9&-/5/@O6CPXX7(4%*:1GB'mtDpQ1F]4Z<ZGAYR>6pgcq'E'eV(jEs5VShAcT_V8S8GB]QaNjDR]Q6Gp"dF]DVu"lC&$_`t81kW"nAF7S\1ZuQN&<GspF%r5b/XXNRdJ4jZ,s#?^[9_(g+ps"bSaIi\W2:pA?Ohtj1=gX^$@Jpua:`D6mn7jGj^4ZEr>m\O-jhrZPVOdM@?UX?k@%us#:MF>>!%1e49<,U5\f<#glr8*?]c3/ic,CUG,5D+N@Nr^_XF0r$-/bl#h2/h%_a0t>LdrG9COh?J@;f^#^.%usSrG1nE3$9/[%-?[5HMT-4X%Nm8/q'?]'#Hl@I??&i@DK74>kKfTj#C:eMRDrlGdiJ?,FNpRY`YqcIAOiG[2)eB:!J;96`JbagrV\,<Hl9:Jb8$aB(q;Cgc>&-(f%r\c:LNHVU[YSNdGF^13D<#qbt*T3uZW!cQcCJlm(Ual9O!%=3O\b:pD(T"NR_DFuSV?t_=-;=7m@<uYp;mDI;=KVM0<bbBWatu/O%T4UdGN9QC21"m781T"m+1sMDb):O'l@p2n\2eS!Oqm^64qNK!hia=M?=]<KCiKm>YF+r>o5J#N)3U$_=CQptWY#i4f[g*f2-P`pF%>6W@Q;5/!1Mj$Vd]cYL!Ds,j!AgpeU%;+$J#-P4AC2>c%<\-0-ee"!/.D7.JnF_LUE:u"ONtGh9IQaG%*g.dCOQ%b\BKKDloBgS$%Onkn]X8:?`_V[H7iBsd#BVfLpAh/'I[%\-CN`I#B=?Hk\Vseg-Grn!b'-6&8Ef<=4ml$d-aOp>!'T0g%+R,::a"dF@::&b)k48Lc%4r6k^3dOS"PeTn9,tr-dDo;[*9_83o2&>HV*=_t^Nu/$?eOnBCI]T9^h^Q)2Vqb;>F+5o1&]mtNJ]DmA;pR@.<LY@9bo[auc8A4r%gPXmGYo>M3auqf!\;MM#GNtr;_o2#gPtN]Tgqr-AVtc8r^1hoW_^_G3@8Lr6<!Rh62-Gh<\i--Z+,$0j\h`NaCiV;SHPDq/)r=(o%h1=InnW@u.'SaPL)Gc7eIh.(oH'7'eF2U'N0X_.^d@cP7H0L/*-W-JREKYFG<_bN"s523c(t3R$'6Xl#:b(X;lqC,CY+H\^6Rb2o%UE+u\6,,.XJW4Bh58s1!:\J9prst]jq`BpIX\ljP-\[S@:W=dQT,OL[1Ir0qL7Z0i5;@%kR$s_hU&3J7rTHl<pl#(R59jlfH9CcW%p%9ci:HU[OR,1WOp=T*Qa0AHNlQK_jV.8s;7cQ22*b+aJcKSWi&&F$bdH0ojD6@(8bNu4kERN+g&J&6S*PGm$DmXg\9J,[\?lsJI%@?N20BH5%Cil:L(j*PNR1uXoYO8?m]j8W2nKNDp>bIP9Hhe[CrX&"hXW8q?dd@3U8SQWm.i3>/4UQb!52kUi^*&C_)I\`RE9#o\K%37>DUEGa(k&^S+TCQ3sTMEd,e.ZTaQXd5$nN5f5J8)l;3=ru^9gqWcgL2kV8d7eB,@Q=5<,;:hVM]s^hFl*h]UCc_UrWkFr<;kV9%1V"(Zjpu2]c<L]>++@_-r%n(_O<<gCGcb3qT#G1[*upJR]Ye/HqKBFe8#aXlJ:fSF'879!H=<Aacu9d?[7Uke;m1t;/k6TTg:rIX%[d\/FN^:R\`-/N$/JLhP'sKDdD:nFlp1pZ_0ZiM4Q1g<W3[-1Cha\%:F4F/7%]k0E'`Oml/o#EJM>S#H"q^rmZ-=S\mHH?]kqS"o%i>BN*S#@[m*(1b[27>-s$(QX(J]$-OL`"IFRi[6M*e]n%KQog1pB_gmLk3IrRbTmj@XJ\QN(th!#9frL+o[9!O0&G2!XBlXi%VSD%FN!F!ks:-1YuG_=Ci$NW#onVSJ]$,Tq;WQM)!bI`aZ7BR7gNTDJOe_R,X0!oc7,\@h>]Uns5`#4'0u9+#J_Q955@uJF*B9#HA9K%%T.H1"NlQE;%kri;X;goSQi*t`-pO#;][+JPV?UeFJMO,-C;LG0BF[cHeC6`XSq5$@T]&*R5l$65dkFSHph=K7T!!A8Dh_%`a?31l%Vl=rfMWRLck.(>QHd.aaV5E.]51Pb))IiXm2.SPp;[rQ+C5=$+`p!"U%+17u7sK]i%t=q4p[Y9TO'b(#kC-]3n-rsXYOLaOQVh3O%Yn)1pf(!_j,I*\$m,<NaFKa0uhS25t%sq,^4E+\eTCu*](AqX@3r%GH7=hK9\X"$:(SU041IP-l<*<*-pa]#,]*@`_FU]roJ)MO;%o_B9sf)"Y&/V`1=8^Fj_Qal-KI+-VgS?I_hqkMlMYSc-5@%,2uP?JJreHstMM5M$IC7"M-pN=OP_YUOH:\W],M15Wn,O+nDq)\2(%:15*<enrBE`SeO"./<"(fNenG\pKD5T^S`5'4IZ-^r*bO(XJ-/4nbZ:hKOT1(IbaYa&A`<S]DF0f>a$>K<Q"T=!lb$9hsC?Ib&<4%:S(8K\si%hNoQ/]"@(d[\msEc/l-Z2Er(%Wl&OkIa0H6N:N+::*%pY^Wq'=Uk<%LrSF0;3#FXg/jZ(1.dp:,$.BlNj.AseB%p(53%P`!G'dneSq&@Y\MkXEgJ0ia<T2,]rnPAdAYmU_p.HWFuRkHX-kf\5.gI^r_\3>2=3l/oDXf9c+(YfkG(FSC:["D"l(BfCn\%EB0h%cJFaa:5[$%Bh`;F;ju:%3rRQ=J*5e>X!oc)[<C$grTY:(F8d*9=LtK6r@$4=IVZ(E(Y3>\>]nsgfsKE(TI+&MCml-/rp0_I7TY`N%144mZ+V;4K]Pk&FUQYM`<,&fGI2eV'90pTgX)`G2b3AXTdX8+u&g#67p3F#,6"6t7aAqMS*iqdTo1pAX;4MZ"mtaKdP`(N&r%_1=%LhRmo?I/o[HkIga+lmurV2I>,?s:10eh3i-MeVQf>.^/\g'+ZZYhB76A5ESB>.^0Q/uH%7DP3o8MuR,Ni\<dC5IbY/+"k6sns".r%CG/KFG5V5Jp!_@-pmmA6hNImtEmc=Y97Di3@)qr+r4hnInco[D>"?-O^cM,kRA\[Bf;?%:57Zo;H7OH'V[32JDT/7EZG.t\j6Ffs%4+XY\@o)$f1A=FhVS;Co1jN>Sg%;O)PP/+Hpm,^l8=<Q[4OW5Qs%"#Op[[r7=/c(fIVH_cS0mqA/CW@Ba!SS@rIC[-NPT*O;e)j?%[:6E*[ufY[^CX2Qa'Lu"J!F;JOB!+Cq><%?TTB)H8*]\ZC4&Pbp"tS=Im\RS<"M5GI!BC5l8m1B-92T?<fG^o65[V!s*=eQ'FXUO%hX`IlVkV;.@DDJFSI5f%4ZjL+$nQjn$?=@SnSSkt6W=AZ5)aVf#oL^qk@mlsb\8A2N2"[5-",O#_k,XU5Rc#;Q%8CEMUP25Gjo-F%$2=l.9Ig/D6QXb"`AsVMc%78n$S"&Tq,XZr[T89*A=/>p7>kRALHb9m*;su5lWhob2Z3#\^RC2qG'%kVKH!$L>GYAL:k_;2O0IAA%W>t*piJu1oN`5pQ*q4GgfLM9Z`]f`FJ]$+YnJKRmWjXF5@*jA@;$=/m,hZuo3Vo0/X]c-#?$c\q`\G<YkIq')9qV;<II7ID2qa7?%M%c?n)mr9Hnl)^s8)WVp[q>I^PbGT\dZ[N,9#]kmh7.?h_+@F#g$G\#oH?tk5-@K*J,&O>e*:@Kk<D&-VheeI5-AOSj<nr%-k7$Q%Itf@lV3ci&Q^iTcbHulXT.[6CJ^VKdcfJjAI0'c>-uY;VL)taqjDS(>V]!r^bEuaQ`AD4rk"O6ol-UZHk"Lhq`C/f]USH7Oc88ri%do/;M2#:PAC!nh4RNC\$qJ"A79q%qN;a2P)8^il!R[05\9q,V.5-Ba+nK\aF3*;,hicJM-'lFr#(bTQl2,.3(oL'b.s"s.HO*?r_%\>n3F9O`=grOBtt\E`Za]]6^am%3YnU#0AW`.7*Y"!=3X>DB)=I22A=FZGf'>E`/fXe*_&>/++uPW>58?a7>ORWWuP1UXL%BR9"s%;`lnVrn@mg-sdR_+]"rq(K5^YZ,X]?e>,UYV>mc+O$@-G=A<sD/Cit]lhNKXV/'*-L=mE[<;1ntc*k[CC;p-D^9KUsEPGQ>1nT[>%$?gM4>HWpec2Do,kC1o9s6f%2@BNs&V7Zb[UG_n\:UAk*k43sp.I6=`8HiJml$TnO2O^\1o%!;\nc:5$'\A;]GKY?Wr(c0ObK"i9%:%77uR=FM0WZNV.l5_U6hE:ioId#EG@N%>b$i9aJ%Hc<`O4/nr)R2s\Q3WIQV?+l4JDl_siX(QGSkA\PIbtGpp#sjl\Gq,3DlurP%h,aG5O(Y$i-'.TPh(e!SmP2HBrJ@&k$bhOGo$(,")Xfg_e+fo[TX,N13p>T1qOe)QLnJOE&cRgqI8C^lFCja\rmSS4L)>oN08o3#%VJ^4O;MM/$HR)$$='$/ilMh/l2E=del*kVk#9Wqs$_.4^s#g?/M"OR,#pn'@3_mU,8tNuQ&W_=.`rsB:O8NQVJ&MajjO7-Z3LFRR%4lBgeK^YTOA#nD>0XNk$!5g)H[NtI:Idb.>ObhGt(s3rmHc-&e>\b;f;l"E_r$UG:T@V7Zdg$,:PCi_/'#=Z[EVKZTl<Bk<47JS,%-]HMYnGb>mT?7bJpeg&'g*<[WUGY)Z&e>HM%I6&<W:fq+2%eR4"MPCNM=K,ldu\b<5OPKo+,YLl>AF(q>05jlA%$F01&*`ZKf`9Q%>m;W4ho@8OF``)Fa7$C9q3),j$;WpMP*R@d:K<^hVm>rfZD9TgZ]od;,79Z5i2tUDNEikoN:AUonWE(6;E_NkkVUik+PXO'9-N5\%hpsQb*rH0gcj;22>lIN3'_g+Yl++GkFY<-$/:Od@*1:qn(&9U`/VN"DJkZHX>e[=?O'i<@#/i94:AHiFWd#]W[Z4F*G3,[XL;/N9%70AB,[ns^1V,X5G]TitIe_H/AO:E35!,hQhM-Wg<b2q%\Z];]]=fk_2J\UUMD4f!%o2:_P"427BnqU'\!#^;N#dek>*20>'?^BqX%q"^\(47%jZBV"--JX`_M-L#1]54)4Mm'g/I!hh]e:<6#EQ8K%*Xe]hoVQ&Mn7<T(QhDi(kb;r.)mc"Ah2d6_@ds[X^"!A]b9m!il%Nq/%jKF%R)a<fuokrC)4/bY&]/qqVPrf(nF)mZg[^Sq[17N\HndKC8o&#o:(_&d=rNVDQ[W$P_1rDgD2Q#W8m-YR:.j+,63HsSD^%Y!<!Tj]]45m,^k/)6>K?'&CatV4m1Sc-6dC+QXNDlWUGgOQ\,IOt&>:H=Fk[V.gd80t=,*?#u2DU[(XlB9k2?h[fdlOss3hm%u2Z%&NF+3n\^^=r-qmJVGMm"X&L^ZIdt^\Ao$A4!=@2blAo3A[.H!V<9?=d-nCMh8>B.deZ)WFZeKZb>2$(or.!Y.[!fmhG>f%=Gt;e^%Z@\..C/>Q,2Of/rq8WHb$bIr)bMXE>.bMOa\Prf-/+kYKe,\peW_GCgMMT\8U605CeR&4Up&`<VSL`me3#iEr]/]9fV059gnXHq,%S#^)`(l3"%0V&!AG$W7Fo+F2jdTc,o!+Z21F5lB*N%YE"R(X/:]_!kV[BL&YTue<"%bn+3]/='A+MuV1p==]fNB2qWVi)*9p#S^D%p]J)3&]ik%iXa6t+AeH=*#@.W"MCfo07W%$c*^D7*V@>E;)O=EP%Mb4$)PpiWJ]Se2"F$YF9Nk?L+mH]9d-e9*tm#Z`N`UINf<1q%>Ig'7o1(sILnG$"rZV"8O4XsNQ"Ma[n[4&D3KE$YjQ%O9HG82<?hLm-I?L\alAsT=@Ft:Kr:f8k[@'CcO$O\ONk"*DfCe-FjDhAY%"Q_(GBs[SUN4na+X$O'sb"oT#?8eOfG7^@@%XQR_^E2/!/h<\O)0O`#/cOCi`*c0<Y>QYHU+]Gn9U)X+.)l!g<E_WbB%=pi-qsRD%TlWr=pqC*O*B$MK,HK/o8FMp#E;!i(=M^QBO7go64nthn#,1%cEWl_tr`;(Lrt1:S"^Vdt,@*WK?9Vg*R4A)_!JTri1p\eK[<S)C%-U2M3YY$5/q`k"!-RmkW7D1gcf37N)ZW\Nn-G*PhfB5.SWS+;KlDe;tL3TL;XIWc9doK.J2H?u@6C4Wc#CR"L<FnhS'X_EhTj.gj%E)0a%:fe1`UU56JTBPR&jW0mOVWU";@k-I#81,G8Z18'*eJuiU>Iac:FXZ7K?f&o4]NTd!QHtgNZYn4aIS(RQ"Y0A.>u0f9?9Z9*%&m+0Y_@HBcj>ZSe5crHFJ%JQ->b7V)chu6!3PDNd<!prdog*0+5t.nZ]2^I`IAtn7eF!A?1^"5O-kQf3`4R]%+5V'6d?ATKjPcZA%Rr+M862g78/-WtIX1_H$_UQ,2X!E87k*k,3g0L`GRE(HT\N3F3/61Ec>ZC9X46j>,7S.gS>5f!cO_u)FG+I)o<-:6bhN;(I+]a;G%/Nfn.cSb28%+(nO!-j4gYb9mT1b<<b[fhJB2*m!ZN;rt+9ctQnZ`C'gCYl<Cbm]o@k6bILXT7]S]p+J_EE@28X]eh=onO0je>r[$%I%Zs)V(g3EaB%u"M"bu@Rs+5>Q]>hRJ1mIH!DO-(dWpg/8[rL<=1?A\lWj8(YID^":c-bmC;/7Ipk<#]9.OprXnu?5Wr"</cX6KK%]1rD`O9kGF4#Of;2k#2T2CZ7c8U'&Wej,I;r(]E>mRj>B*3@JA1l"HG]IVO9bIQnD]NI`*>/uWS#fsDm0*R)'HaW1qC9]*S(@jEK%HX1AdE`g-GW:Yjc+a1'H<:5q$-n)K41!,#+f%h=u]om0d27pKpUJ0k3mA:DW9g[Nl]gO*&r;3TmXL=:GE[CA-0lUsZ\oh\*?X`UE%Ya3+0`1FQ8F+;>piOmGnL578NCC".X,J'WIPsE?DJ=1<iP-r;(njd@HHD\P3FRWtRC]uWN%L*9P2"UB\rn!5qjT^g@$J(l(G'sWR%fRbD'SKhg!;hk0QoM*/S7>uebY;V0?$i:X]V>>&2na@k>&B1u.AnmURTk>39=9-++Ws?QX$4"8[kK87hcB8'Wq<Yg>>]1l\'p,+[%MelN6hGZ6DL1Lh_/1=bQ33fNG4O8;%&H].fFT"l')A'?6#B@>Akb.j(\]%I!i>@3?'gUu`CX@cP%LePUAuj.&ea%p6A<3f]?[E1Z%$@X_McboGEKWFZ=iNe(U$0as^==X&UF58WM:VSVh\B+l-?^r.[VM`s9s*TnNJl++Y'UfrTQ$NT5`GXrpZ<Zuf_E^i8kpX%^:?-r`%/DX98(p"3#2^A`E1A=#ClTb&QXe)^*`Xt6ggN<oIRe0TM_fu00\T*XmT=u'AU9eGeaD76h@0/l'F4G#BL_rYJZ=K!MKAe13\gA7H%Xj@*40?Uu&8::Id@/NM+]K&S=nr81FIGI^G)'$c>=+8tb,bJb!#0]#2TGYGtebif8JN6Qm9@Y2gO[WsV7^5u7lFJ54C9:^T0mpiM%q`8]:>!I$c_,*VO*Ff(FDRq(R!NlNm"7"Dd[E:k"$dl+4A&o[dXq%c%U9fuGC4C/SX2DSP?P'lq&5-7]+CiTWE">6m8P*IN#7;it%XauLX$r-!A^Ku1m.epE:KA&3,0hBhKht&:ZM,%aRUR`de.I$Goi]-Ypq*CcQ1hn7CCaQu5UNME0Mq'J&"h&Upg$0Zl0LHRL2,HLu%S.?XTlF15t:FarQ8/0c4_nI50P'mqXY@I;GIWMa/6Ds,^VNsTk>4lfS=:ZA)#qU(SNkGkc;c`CT?#EcmK+h8+m0Ek%0gg,:c9dQH%ED0,)-$NFb)BfkmEn(4U2`L*!*#l8G"['91#18jYStg<H.k+BYkk*_)Yu*7,$Hbl:eQi(N(52^\p&e:S&k!PAN2'Qu+Kr7)IcI$`%Z+;Q7NSMi'Qh`t`WnZt<R(I^6qr&WIm[*3MhsDtgE/d'PZMZ6u)U2I!`K!oTV]\tjF\%;SP&TE#7(K(2\;2tq,qmsC6*cJR"i0t;%CYYHahGdMP)1l69Q282JcRM!dZAW/"HX6M'`6u[T.ebl5LcYW1-Sr#2?>U];g\,f(/2FNf49/,CE>usZ>!<\EX1;,RLf"F#jA>5E%oAqlFj&)p`$Bk#^7cus*:'\\jaSe_$7Y#F.E(1c.-q<3+Dkke#pCipYOJiYU)$FuaaP:^aPMl\J%dXB3-AITl53EnU;U`$gJZ:lF%\FWTJQ@e%,(ruriC+XoCR/.DshNY#D_3i6mb&.O6@kB3m93?DZd,7I,$_d?<Y-jo!jUWlU"Z1PWoZ97e$$D_GP1h5B&T#?5_KR][%K\_eN>(LI3.`K*r4W:IJ(@*#,_L<i'/;U8f&b>l%q+)JZE[Ze=(CYh.f[e_Hld;%JqG9IHBcH%pL5tYs7(8*c8dL$rB8odmWIF8r%Zlm:icYp6aXNhq,oD;[krM]_F2qSQDSjJ#5"!K3X_%l!$ScE-THQ]n*9oSrmmSOGW;DYi.@[OVLZD[bLI_4,`!VH0LD5;;P"VJ_B%8%2!KA(5\Fi5o2F7m,Y0".5m*F`tr'BipfX,%_G'kaQS2^O;u/r\ViigaBC87motc:>XdZ/^Qof9.I>eI>MV)'!N?Ie!,=<qGjM_%_b_0YM1jBJa'kKk'&kS+RWpEAH\61lU]`j^kCpZF)V-Y1Y?G/1"6's7XNu,W5d37eEi#d8WmWRmi7a=sbD,&XJ;r'YiB2Bm.^`Z;%P`s6M)YOQJnT4@aY_Hj]'5s';BQpKuPoHL/fXblV:pW&F>Ur:jPaYL^H<19--O4E^TYL:lW?0B$O=[;aDJb(G#m,29?b\8i5=`=p%E0'\'5?sUuJsPjnNg?0P@%V*hW.@O#YSq=]UWrVES]1AGW(.%6ZlAH'%6$Yuhgobh4Y9dGHf9-+XI:$rla-g50VjeM-]S&MgkDC>%'!Fj^VZ=+Oc,$d2b,</C4:t;QJgAi/:%.N(L'NQK_8hK1lbf&*MsKOFYL[_9QM.\PLWc[!`cgHeoqjdVQ^q9JH^-5FP0Fg*]:FoV%I!+c2p?$r*H?K8ZX+RND4)\[dl@D+!kk]@'DL13QRjImLf%Sa:_UeQ]]t)[@UTPkS\(:7c)F::7<pF;[G^jL7pJ987NQo,&9YS+&%=_b_@&_=;$m-LbFBtNJTqi]Al/MFZ"g3s\jpX\`kVYRlqp%0'`WGgm"kD<?F..:I9Sa;'l'Wq,M(SBNiFRoCg7E'_V?aePSZ<t%@%S&rgI[kujbc>=ATM-2$'p'Np<=8[)VV93$(&$*\!D(C$MI8W,IEV7c'/,S55emH0QBCc,Ec1KVWY;LS!o"2A8fUYScgYZ>IVp!De%%#,;'69?pfI%+?aBCa(4>l%L9>[)Db[?lfN[nBe\>No5XZ>%(eYk`b:q<_?LT=`!bV8Z,Js-Bdga=B9O;0m5i>5Gg38<mgp^KPM+%IVudpV_>e0r:=-.Had0fem*S%A]q4<?W@k#%b=[^b3+bIAZ[eIRbPpP.Z8MO8iU>;gM=M.Z<=AYlWfV]X/5G\%f!(ECs4Iaq5LZB%<+-Vkgn3Cpn#el>cR_(G'DSk[@6WSUd^?9:lgG2tX6TBL0/W'.FVYPB1`)`.9.nG0o=0["g.^>IS',%nh\Yutjid5tD^Dml1-;i;%WI_+;Gi:0t6<t51o(B=pS_c#;B%Qjjp%-BHeig^2\RLc%+4XX.h%0)9k%83soj6Nln9N;<f%18dhL6bGL&f,=LFIkZ!hE59+TPjn%!0k$R'C=fGe7Qq#]LsG+G`p[iq8rQ#GL*p?MdCDbc1amapZb2i]RG(;^>iL:\nAMJQ@&6JJ)Hot)K=TA^3k;<@g\h`+0JqZ6P;,Q%m1@aMGL9rE3SE$k)"t5s'i-UhU*iX(RpXru^37d]KJOuf1RH8Dqiq(g0>#bJgqM6=&'eMqLMWa80S+KW98fd<o<k'PSVW2G&*UqK%Mc1p6f+p=!F'5]JUuX[K(&i$m,rX)HH!T0.4)7!#ch:Q0?;brd;P8BPp^`?%Cc__\p,uQ!]BRg/EW#1YbPHV_ei`bm\X(h`4MT9G%P5V/8[1Em=NfY+Tg[=0p6IN<VI$I,pI?X;H^KERoqi%6Bl1`=>p[Dt`+Ib"Ofs:22\r]W&.NccWp>Ni2WbcRC7rt0%rJaUPS[7Ju%>qdO9!=JkRgV00M@B&:0ZnRqR>Wo:`6JL<L&+>ffg\#42NjH6m^[7c:g2=5t9UD1o'<UBe`K<4]I!6sTC<^+6=TM5\R7Hd.=PVR+%Zkk9>o,6n^#$5I3(UdP7Ko15'[HFZVoOf%"61NKcl(/pFDRSDomH1\lqtNNfG4f6?'rF5;(kHH_a_!3hB5[NYq+Aq?V3_VPqU3F9%gTL3lVWl6mD(Fn<\R)gki>sSa^0hMH@8>%0Bbmm*QOhZ6SsMXNB4ila"Ri,,fBpe_lHr&AQc`e"rJ-rZTe*kKMQZ(LQ9W"hgum9F%\)(G$iMq+odMML;q8Vu_B+<>ES,[H=4hJD*bLt3G)IBOsn%*4Gh>B\R'YNoU\f?/%nTc]k"^G*aP@rC,STE$NbjnY/pJM5Lk<^E$%\@U,0bZH73DiQln40tbqZrBNf.WS.pRTXguS[()=G#WCXZDh/2?>U!c<sr1]0cQ,24UVX6TUM9'dqms-k+pODC?:8knBo&ReAhJu%ep"E7p2'+abq,rCe:fs$.T`$37K<r\M=](Dl`\").0SSH&PE&>oGBCn,QnTi_,V$RL*k0$+1#>0;efg+&QW]_*8O&X&EN7JYAZ&E%M)MRFc0-0,?ONXl?[Q-\o#m<M8q-)[/!,p:^3Hp%WVFImN_$tLR9VD[jg1JiEW]Q-))[ehpL-H+)\A?l&a.3h$sEdu[9\6]DfRm]%OG!4a519"T0!3n8"3O`eb>)=%Y_4]<mt)GQY`=d$fn"`067e9-=8N&"Of7o7=]f5XZ&%7q&cjuqS?[-BU69<u_uQmK,kjZi`piZ<%.6=.7`\OsBoqFlh5$Se5/0kI)V3@s=FuU__Lm7,$.\,od$l)#=;N;-)OKRJre?S(g8.O">,Qi(79Z[!B%'>9eImXX49TrKa$ddU1%BE""-,P!&t$rbMe(5fc=D75kiC[LR3DDbV(-gk\qp0"<2W'M]dS23B01)5WA+:Qt.\ZO,Fnm:I*)GU0^QVXM0&9Oi<_"!^!+h^\l%82&hqbZ>@Sbo[<Zak:!I;07(m^NU7^j`3ij/4g8:2EhF20$JdcqbRWMWSeCKm8*$g#g(E%hS5K]$f_uEqd6Y#nO`+O`EN/GT66-q%Q$;*1>kPZ)k2U0`j(e"gff7hKh-+0oSp>[@c]*sD&!BQoYW="28..l'UonVuIj)/UJZ02s/4)[Dp>%mcScA%^6PA*c!g`g``133+%OC:=a1ohuQ(0e64alC@lmrRB==Otdr0<m(JQ9:VTa\F#U3)$e:T*hn`j<7Y;JJ%SOeU#gDc/9RC$,c@264#Ljcmh,L]j,^W*2D6"%CdrtLnC2PZ=fK*!XkW#&d)7aW_YC&kZ_491Z[B',1R27lHqoEY96,9''fW\?WN=%>p$Rb<`[`)h:KL.Y(FcLDLpa*D],7+m`l](C%^Hmn(A`DP4*A9a$V?i+Q[B&Y!nP.Gsf?ZWX5S+'G,+ZB9jn[M%5`W8@2>>AkLDQUIM^1J(^d[1tn>&AN"JYptlhR5tT5\ZZ4jQ'Q%,6`&Sr&8>s0F*<Nm+(3pj/)H6hXpm`e!->[m/0_+NO1XenlPS8jghO.UO49.-<QS@_O#E,MbLt4J!KcrE]`R:g;4G.Pue?YZ4%V<%Z:BXbQsQ=d>AJ.@5(fBfFsc;L.V)-4g"2#Il#u#)aOisLh0M$?0EkU*Z#[*(f2d;jY?i!tKi$DN7j`T>RJ(dd^h`N,[4>LYqE?JI%Sb+Nf*je/W\qft.:.fH&A7b"21Xt)28[+[#?X7=3c#S'f/4`GnY:T!U_3an>Sui%$PDa5.X1&kHS=&]Qp7GYO0cR4=7C'PHU40\#%T"b.cZb!ZWI<jL#GOeJnmU5S(ioX)md_JlD^t7),\hOk(8BcgR&(U8aNo-_VIS*1uAhID@8PL4Pnr$^2PJ@"oP.9IuCH1#6f4*lB%eihjn"2B9.nf1dih3ZnXJ(RC[(3JrF*1VD"EFqqHp%:q9WrtT#Bmh=dWP(C:YY*gU8*I-TcIRkmZr[B`kO,QHR,ojQkr7_l)38s`%mmTZL8X7`5(MV6;oAHWmg=B,s]o/@%^FX?<aQhp^$5e;_RB>q]o7"Kp=)HR'Y2:LiSbGc*#A9F%J+SW?)2$=XA$=:EG;$DV6O/lZ%h90(OR0DD'ho`1Qg#C;sB3jo'oVt!F?b'h6_c&46;HVdZI=#%Q4B<_OXIf9/kMu^l`>=r=g-OJ9<ltft<4iKm\bk/joaE>rT9c[r%:L1_f\asRs]6V_%%0Y`k]COgkWNE##mSZ*!'BZ!tRpS:4[PNWX!dsg?oZ_5r)8`_jBD1RnrDVj)7D=?:id0]bC%^l<=t+N@p@<QC%+Ch]Lg"FObVqK8V02Jm?7rA]Me^sbN^R;b;r]/</qRH_"AW0UA3aMrY*/->q*LZ57>E*3lm2dp*`ROIY?gh0?<O$2nB'2B"[30cn%$K6^;`Jlfp$XTOd/4D&kIWKQQ@p/Qf3@OF/hJqf1mE2R2odZ?G(Tmi>[V%iU$X^BWVj'%m8)!RYnk@Ku7P3s3gkVJjX$ud-Rt7-7%bHCYhAPMRV;EgYr?J^5c*aS,\cK&?I1qYcZ1T/OGm'l=^F)V'tYJG5edjmlOd^'`:=2WPs^lYQLFit!HUfb1`H=)&d65J1lk`ARD%I+eL.c*+XscBmA4(mQo6/u<TVY?COhHb=Mc.g3\YM9_X#f0$nZ8i+"@]D_QRX_tnsA_4DV\S*H.O'Q^u9,=t+gWsaTPh8'::X6D_%MifrRC^#FBr<:gL]U%DX4o\ioc8EjjceM]baJm28pQRCN6CdCCG8@o*f<b:M+=s!$VT,OQmQl@p+$Xs?am7d^!b+?C"u,g2>A!9A%#LLWRfp]HV>riA2W=@*8HiNq[CONPgepY$uAj(56ar&dm4ZJ&h-Mg%f1e1*ZS`e\5qrJ%]/70`9Zej)\g,h`EBre[i[KB..G2',7%"#16D"iOOr][*h)HH(1;Uu&bDGRcY-busnoBH;@K=7q9s[oT=Nc@*F#K82F#Ael3,U)9E<TB5o\lKd$u(Tg^@(N=labuNLYgACM2%5T#Kb2Ogn;&ZNZoqE>d%pU#'?nqo)Eb-o]"4/_J52?3!iD'+$()++Y;$RTNFAN$*"(,/^7$ZV`laQ0KVk!Xsd\(]]`o?SL%q3]?<%o&fk].rXiU\n$<8J#DGB]n:MN^m=C>K1oWg"3!;8BU&q0/B#\\GZt<\[p'DJI^ntB2Dd;_p$hg9=$3N1UM4]uj>A6Mi!<BXpuWBg%$B^&'q$Tl>jg^)RI,0'`>j_VcW[A?mB$OZ)3P"D(`G[:9Jp4\4J;"Y!^N6g6K'/_)&%p,/nT(D^.aUbZEt6$QaN'_Hq3Kj=@rcYT%PPOHR+U<SBWt5.kK_[0Gn.IaCp@`*Unpj`!:[Q'9;f'1s1Tp8Z\=]==ZgA$ddh#78@NV[,9^osZq^4U6g3@J`Neb,S[6/LHG$]\1%U:KXXmUH+#Ot(hXqU]@f@?-@4]nNC5FW`_.a/qUGE;kHe&puM+PC%U]0=!/QFi-u]QjP,FA)ic`\U%pW$%04@$#U^E?Fk.&c=YB+%-BkWD(Z'SXXE1(pfcl6pf!kVEAa=UrMNl&M`5o^?.NkU\Y@-ut*Q7o'W[HFY41t_WkqBjEI(mdQXhAj4f?<U?#f,5s(Vj2U?G"O=%`Y>=4cVHH9M"M*.L\<es2,pef:u-k61)[4<\K@s@*1gpf:m/.n%,Nkp7AP.`R%cr>^We`>DXI.:@<&XLaU.;NRSO3oP4KW6a7CBO%a%'?P=%^e?f;"k+\n!J;.jfpcApMSrE0G;/m:Hb#^R)9JHctm,b.C8%g4Br=L<u3kf?W<>a"Ud2lokqiO)mCug7#ZTD#4[Uoc9L]%g4HdXN!T*-iF885($?8DjjS$hlXm1+13Q^VKJ="p8#!B%>[228[[&[^U''/@g,.,Ui:HerHb-Qf+iMVl<Eo]O_d6pFm:Vcg]psK4%mENnF?$of4/m&"9ITIqbn)&P=Dd0Eo4"(]e\..6Nf`=\DZCH&5AfA%?hm"Q3buZb&9$b&fa'.n;ULe9C^hFm_HiSo7>@L&mfSkG8%UaSRk.^N;,jNgq(XegGL?i#$?5#koicF,rDeuq-:=(&O)Rh^6IAuBk[L@J^l1VQpPEpDCbo`_Mh`nUB0]%'Xr4SiTZ?"N0LQeJ')%k2uDl[7pREI\WZ#8R6L?Z<l;)rQ&ot&CnKup/:dWn&$^@kiLfYHhcl!B%aQ,aiY";a?\B*mIUFlHi4"tXXXiX3bJR93re3Qg&(?2%N+-<,q4sjjC!;<5+gu3803n6VD\S3nB_Nk8g.T$shMmiXM,Ir[0d,]q15g(3?UC4G(;f&^&aKPoH5FoFg_f0013QmQZc`+/_4l+(%)ko,5-m(2l31k3g/<g+t?``A7CYudibdZ8A`]dfRn`hObp3HE%bta;I8'mTH.YK,6[T@-\]m"70d1e:-c:?4*pOPuiR^LIJ<6_SV%K?flO@MUcmDqW<.pB!uXg\pEhgsg\q"b<;l/%?etO!2A%aM-B"bsDu!g9dG%(4E9N3uthao2t^+mBk&RGKdDkBl!ZiWh#]!lu!1R%LD,3TD1E3J^J'5q/:[$CXc<fTC";*c?4$./(";C,cd+mu;RVr.m1jQF):,Nbk*!:kXh7[cDr3gKQ2V'?o$-us<SlFnq?B,;IF7/l%A@:6>m_)2'?=^e,.CWN@G4q2fX^6JG^>+*u6f;:u/F.$5@g+XO\N,BPfJ^r(=$E.VYfY6u+@EnhITDs(gbef9QHd**Ls@ef?Z,>a%(Z"71\#Qp<*N7hQMcJH&3SH0!dL-Bbi]GEO_YfQ,QM(FA@U&.kKkdLXEd%WAq\QrFf03`Yeu'>P8IZ<T]=BRr0=:c6%.CFd]Htar%kJDAs*nL:'/A,8ikO($(NZMMK<;OWg_l0<%Dfs=TIB-N"^VM)0I@HNC4B&BfYimtLiL+QLT";hBkL>F9n#%-&fNIa0p[$s\8j%CS%q6237NSe/e-Ji/Gp7_<1GY:c"hbnM>hGPSBG9&`6,?8O,;tf`$Da+#(Vs`eCK$M=s)r-Gmdm\?r$8M'.&\pRDNrCd96>b?k(j%L*%RmTdYeH_;FL\_$C:W9s6H=uU!/^F)Ii8A%Rh=lb3!AX;!/&@4/],nRrR'K8_8;5\NHU6qP*DE#lR<`pi[%>MhB0L3NC>R+lNWVa]%[]trU/KR%3?[#:YB%F@+s$GMQeM>jZWPa5!]k1mE?hcQ91OnN2bUgDQ2D[.u#O)OhoPa@4AtN5]C)l[lnE,!05Ft3mGuKGV02CHO%1M]([j_kePZR*8%Cq]l>I3.7XS>2.5X3L,.mc?KY>Y1p(f+%Yf:ER'k9V[1]5L[Zs<IT-&5F-#"9!d,U,DM-K&IdIJVu/#&]V^F"%](fjs?ZKZ7bN3Biouq/T9A/#?Kt<2AL#XKCZ`Yjj06TNHJl8u?'VN';5*H9`_GGsIZ\mL$Da'Dp9QTqpePa]9]mmZo-"c*Hd1n,)%Y/i'$E;,2H_S<58r/FF75+DB=Wq]oq$oI6aU!LQ&0Achoc\m!d6%0S+55Ss0Ptu+-4KO<tYFi_qj!u6>mT#$"mua<bV#SG%`Ce[m%EjM%Tf@n%qpu&mQh<LPa?]-/cO=_lS0u>%!##>9dd\(oh)Eb`BXV\p`n6:B'^M7Bs^SqIY$fCSD2t81.riJ]Wqi>:0E[4)]-.O^-%K7U0%f82NQ.k1)<IPjF;\8:h``q?rL&'2ce?:&!g$2G3[^C(_o!5)"HOpf#HI_q_pKUe9<>?C@lO^s0['aYdhh6mokUgr_ZU=1&a%F&[HqX."UsRNusY@B*](@1V4BK;P9(,"i0h`>;Z,i%cYdPJ6+X6Eg#Pm/7&M:Ki.,DbU.69XNbKOk_uaB.B@Q+B4)j=9P4-=L-&a%;_1kfms&k`!0H,<*?Cpa^f**:kno^</SheT\>]I[@N%h]0HFk1=4JR<dA/NSC.V>^9l/=B\cq_-9KB)N0LTS0XJB>eim<(I:F"(r%(eIqOBKd]/K7h&g`D/H05TgJ8XJDZna7BU;eWYk:,LDa?1a!Wfq,Gm<C+@:]1tkOO;B8>/SYRiiCDE9^I"S-g7%Zr9:P2)H)s=P=%+GU!g-8_\nbHrk#&,l(7)V*E%ZK#WFD!4IHegqrEWnU*6d0W-&BnD#r1:dJlC:#n3;rO:IX$BA:U=^^nEgA[!_!Z&-Y[J+D%3'jG%\r:#e9hH$?o-o\&(>:*4'c,74'tC7-%PS$IK'=g:WLKoENHWau9heN&r,+1oo#)kA<udYFBctW4)bF%"(2JYf":!iCW(DVc!'q^t%+][DG*,0:sqJ`$&@Ba0U1e(3.0F5W5-3D1hd-/PB>;o*s?n,/TE@OIQau5>I!@@p$*A(=?^i)Ao7Y9.`2SsQ$,TYbD^E(Z+%0oBt%3'qf,q.u-bh')X[>1.FbK@(.p=3,jH,\!36gP0o;MkmLiWn>8:'o1p?)R)\o=s0N8BauB!AiaTO_^63d"R8?<Up$Y`8X3>=@>H(j%crt*U88*,WF\<l1RMGlm646>`M?[<Boq^`3cpga&m(+JQ"fQbeEB[LC0p-N"R2.>,#u)PV()f&=W!6.6)%OlgWA[Qp+Aj.,W>[fm%VeIoJ+,C&Z2CKleU4MT]"ZJN334@eeI%n(ZB=!/(`*ZYBJtV,MW(B]%1.ZjIm>.L0QnSut?3P-[+K-X)q?G@SXeu@-$^Ql?$=jU.%21\13kSm8*-;Wr@P*7@m,T$gfpTsrY*OIWPB\:*J:bApYABKLJd7CLQVFDc5R3lUZL#@Qje^7CuE2K0_'cZ730u8s%quA]a#YB`E%V@_3aBKjhA&a$E-&_WiQ?tKMj6tcX/@%+MIoh^[m.`sRc,6ukX?X*j<$:Z)\&Kh-2J45#lcl%A?!4RoHL_AX&:'8^E7gi^5.cO"k%/No(Q*Vt2<VUN>FBfJ(e691@&Nqkqt_8h_iK;t()J\<aZ`?D&_=)*qEZU'[,ScH;*3Z;$h;h/[<18!cI/!D"#/Q6/&b-Em1&t;iW%3i^\&3[CZ,JF,+[^nZS8BLar#7'h^)OC=4Z:]]/f5[6+$Q(VF@lm5n38)#@I!UqR["MmorK&/ta%h,4b!RrkRKW4"iW!OS#+A<?%%lJTi+<)R#1OsYi=#W*)*(^os"0X\$OA-c.2:>go1BY\U^l"GtDj[8Wr5)h6<#V6*Y1`rf8C,e1fi_%^UIO(h!$nXh8b(.u%&2\r^%Je!O/+9s$P;JZ_`!J2='I"eq48(VQL$GbpT,kt4MnC?%-U#;Mg)q!E6Y3OeW3'-8hct%[(BGdO66bu$TNl'S.$'6&0dm;fQ8ap/E%U):ra"Uq,_&J%uP;l25lC5UC"6h?-uNG.Na&R"4!D(,f%Ngdb(JjYcKa[`cRNMK,H*bZNQ"I)n/%sfu4&9s/fLI$ZT*g?d@K2t_.%5n!LKYR+c*:^qCm#!kD3(^-6u+;`;#Y_Z@o!l7fGFAL:\&5\1^87>@H/6u[>@p7rhdI[KP,etNei2%al)R^jE*DHRKiQutH:Lfet%MF+aBFWapi*#oqU&_AV6&,ePA.a07oYgja0UDfeb1:\qint6n74&MhJ"^)-L%pW0b1=oAI?j/4dVL_-lRK*gb2T;Bc7%Zq:![8qL%ZCqlsW8canW!U,+%($b(_E/mG`ncS"#N;b`lRI*7[QsqN#ltbA"%!"8M;?PniQI#='7CeH@-RGeB2Q#F;bLR5Yg3>Mm6a+DZ^QV4%Q3'#JNJKlD(>YTV&7XXodPAU=aS9]U#dRtC>Rd-.YRso+PDhCk*"$*J2O;J[>%@c`S3Th_8R`?$0*_2uE@=3oMFhtgKirNP@%eM&%.dDTqT%.g/qUZ]DJuSsq0?!)8]q_G1?Tp<=kgKh/Bom,ajB!Jk!>C0>UF%!K+/oeH3^jj0M'Bh>;@C>l+>6FK-j6N/*h#4%"uAOp%6lm&[<3Rqk/ZL^?#[nALPs?I3.#Tpo)IYh&O^jSTa"1(ThF((O&QDSA@4:8:Q:"OXIRQVF9Oq'24((;63sl@BAIR6K<+(pFCsXH#%)[st=qD=pNKJ3aM01FI'j5Ajo8]@ka0r84IOjJ\s[4Fc,0$on]BJEWp.7-T,;CVYV3D0XpM>oUdQm/7'3uWrle>0D.,T;KAQQ!97%fg+e()^q.(j4L".1O:(9@UUD+es$UN%"R1E5-P\#`p\#s8\fjZMFN^m`(](p6(Cbi<<riJV?g6e1nX!\M"AG,W^<,,!n3gL$V`%J%Nmri+85TKERH5hHo0P2L!2M%<@)s6DQCk-'qJgK08[9iNVABf*kjZSHJrG[JJ^2E,0Ff5nC6LA;K_-[,;R0b>bR0LI[D3_!M`S^?%83/?O^tB,%GT[W!=c?rh=i:<<Y8Fje]GtH2L1ER)C[+GcTd`BoO3AttgL)oSS3I-Rb`.5&j3Y":S1Op7IE4kY!@S/*WMI%3CEXrk%XTp^o2Tm9,_(lK+WAU4R".5INL4dYLgST*M!?.a9_+=2Lh/,+j"hQT1/?<GD1ho?3Q7[)7&7RJ3W:=V#[TK@+"IeGdBEhG$C'>A"%rZDIPP""S(/J5"1A3SD=YtS1`<`k60Gn\?/cicWs8kL2ROaMc<E#aNL'gi/T!K%d<&>i(I)!8SHL4O>PR3CKi=YO7cl@t=!4:2gU%(,/fJZeE5\OFl=YQjo3k8GX#9XXNBt`?n-8^mbZ%@>s7IQ#Jq6*`^%N%n:tTPgSb6-@T;87K.hB!TBGW5`ff7BC9GjYiS7DM*?nY%+4tL!VYT_eL4c6JY![W9(Z\]FLI+U(CE.;0+Jt6\aYm_a#3MbH&cn\7C=7)(r%_m#@#fA^6m6;C0L$7@JgBuqTr17HQ$HLA`"%M/%9a]rd=At#FlBjh6;#q=]5g<mjB_(N41fOgSJ[>[fL2N(])')E`VDp3#k\agSPn#jk!c/ej?#0SE7*Er4Ajf6JMc=5]N)%r$5'>,e%R%3/>TU*KCLk^`gko[DsnB2.L;oeun:#Jc'9bW:kf[J<j_B-edBKd0$.lnuM#pKY4;o54FpH&k]^M%F874--/]Ki@*+5'js-F&8T%c\0YG8(Qpq/Kq^AaF'^XA!q_#8HoGh:Y*q<7njJ+Fs$;JAcN3Uh"nf\"a"-;Gl1`$'>nfd="l"0qIL*56.7QWL=?YcaH28:mYGb\%Q;/A@=FuYU.UYR%Tf\!'`>[*(Q%F%4m2_*WoG5W-Ymc/h@7abR9V(t^)=-\S"E#2=L.nS#K3m/qp*i7,aNN!I!lS0]'>pP<"nG;;%Fb9DlRCCi""%;=j@1A-dBFAKWbT&>!<)&qNA1/-=JQOq<c'q[$-K=?YC7>uWeB!i*JQ19$$4$mIC>1WM8CM*%AWoGa9R";W"8HD/%WAFa4_iR08$nD2o4>M]a*K6S@R1H>0JG2O""k,c4b,g0sU7tR>LdWfF,""u[d0).,\e>K_NEBGi**)>1TW*a*d"I*:P>J/HMnB=+%2Dui0!%td.MbH<Z=PEk&#`+(.6I[6#BXf.X'B9M&nkg?>U2$ui7&:G*3FRNaK-khQ@GD7T0^s`n.ELA]0G)EY58I^^8uGlKDh>2'%ArEH2=>ZQ[j9dM,J?Anu.[Gs'X<(gq<o$=kAVr^V7,_PL*Mh96FP[/78B9sobV(ED!'Xn+VP6&5Ma=+L@>HKnku`M5J^C:!Z5IH4%(Y^W`#OKDFgt74C7r70#Qd<ZP#TDB<W_=R"7eW3B@?Y2)]TOUOOfOOtU,c>#Qb[9$<H7mIOtB,!/PTW)XPakhC!3/kBEWqS7$(3b%U_YXD0FG0/]F<Ae<#-(f=?NNYULaUU0pVk&f`5*KZD%X`!BAS>aYIdTO;/nJ6l+V@&Ji/-@2!V8?qhcHAk*MP8*D9A)Di@('S-.B%2A>fj'j;CD(t:^Ke:FA+Ohcpu+aI\=1Q,6U^bV'<4'6nYMh82cpjPa7*+#&--GrZZ8[6\C@MA61`VD2,7r(n[1)AoSM0:&/aV3_.%SCdrE@lh\c#*#RE$:5rDJVN49,XJ.Z85q.O_/o_k&0/iI6A4X_)/_7r(2e+A%P,bjMMfN`DW+VEQ+n&u%J29=M7*KK<"rBMVC!d)%@'fpmZU%_4G]_W47LXNT-qnI0glSR=XTCf*k^]."795P9fP%M6?lNOK?>S4">B#32>?&Qq=:;Yg(hYlH$7fp/fg0[O9peCIP7%4r%9pTBG^q_^@HqB`@V&5DHNO.:N2K)GDj:7K4A@?K[@rN<EN#GjaND5:?#YjceTB4-PCP4Z6Vg],1SjYLB;`3V;Yf'sE-LS:>M)?2h%^euB[9Et/G<R*-cj!222QNjm-W=BU\eQ1;4Z>6gU8;@F(Ye_h.(7qaNJ4CP4('mn[9d^(&4N&uuWC@+'Y#V71>S&5Q'>\ElmDe'a%;;&ae4Ua\P[\8@<797JjK8,eAHU3:u&s](UhC=c3TZq&Z!_nDd0lP?44##Uo/fRbCEi>d$JH:(:Ep'I)#YjPO+!87ikSFTuM&6#A%'tqFRT)b]8Np6%,6,^+%kSG-07SeF`G[F,$f,o,1%IQn(LZ`*3X`4k@JM_5#6L[?:R`pChe(".XLW,\d=u-A`AZC,V7@!Dm6&6jW%Um=>*%,J'PqMGnN>I=:SLq]-3@XT=(#HeqVTbbRG_&ZSbj*?VA;8*+\@3aNgd4dTc:"Z@9+KSuYNEC'RE2sIQ*"6G`fOUA&42_ss%L1=?WZZtn2nu8*Xh6Rs2=AT)]-m8q`AQ'6D8_$B@$>^Ss4mr#P73;5<(_lLM%"mdGArbe_E(Sie_$sC,2M'Ci!Y(4LR'bOs-R<@R%QmgG'',QaZ!jmcr"dhP[6<c&L<hZc-"#CKeY\PAuBHV7t"iUdDTn%3j=Y:'_-#M5sGiAu&feE4%iR-m($=p^P95l&PFQhA59'9P8%b5ba;6T(ssfIH&6WX5]<6^A7.YMn.:Z3sXSa+B\p8rP/C2K#BiNj"kXLMC73eRDM](!iiNYqpYdrP[#G=[4MIP7lVLA]dVqGn(]M%O9XM=`b0;7ACuEj=Js((Qgb+l\0HnR>Q@V(o1Z&'cp%c3C5>2*8-AE<Ku?>C(.funO?"kQ#7PH31pu4Z8p$kWc_ShM=R+:M7l\>R%9"FbF]5gd_^BcPRPX['R;TjlW"XGf3(7eU>::V;<<XR!$6YUZ=98S`XS0RY_</CN%Qht4>fnegOBR?P!b47f^_5r7SFL69@KDku'%D8HasJIl/(XZ;bcW]&oh#3DPK_;0%@(sKgu$p^n\R@T<uYhd\2Ol2:n)^XNL]`6SS*&;QiCXJPO1/%etn'bC97L0/+ed1sO6Qur]%D1ao(4CcmoA>#^>-i,Zc],D7fE<Q]M,S:Se;^uGQBuJ[Y)[h&)NkmV3)61fJC^PZF-3]HqZ2&\ab?^+)Ju8^(,o!HZfhrnYjo5aa%gBduB+A:b*11n@f5&FkG1G,*JK,qU^`E(ZcZ5kd$B^3P`/3'%s*>KJ9+i<HDgsN'Oq#ok+/tntKYp9>_gtX_tS#Wq\NFaU(RO/2d%Qk^I>;QJ4H;I4"F3h!j8bB0IKCkR&Nil0i[&bg(G"=:,L9nm)V;D4aC&75hQ-;8m0PE*gdqDGRY[7l9;Cm;2$LeSF=.]iIV12;"i%JWOV_0-k;>kfB%6k6i3u4IF+Mj%DY$M92.c$MLcA<`SU&/5mc=?PZj6AP<9jCHHoL#D4t?a[1t0\VV4Z*5PUYgsHCRN$T!C$"u(G%c'J3flAooh5g`+nD&kRW2<%;*,=2_flYOU/a-%#%-XaoE2Q<\TO.0*8'1V(5'?RK+_A%W\Ut@)J7?W<M/;u$#PgU*Wm,aUN^7N>"%2/;JK-Fupk<j]&0kHcQHmV8G:"uoo@aNb_d1nE94=L;-BY$f`@R3D6se=U1YDJrGW%ZbR;7ASA0X\<RCVHBoo_rSj7Bci"H7%lS`%1rq#uj:N:Rk`M8mFu1[nY$"j,/Yrg@&`LOJJ4=.P[h7f0=Ab5t$o(`#aoLfGJ/5(3kFG>58Z2-t7MASW)LT,pdBmaK+(#&p4J>aJ%;!F%G"BeEfG$&+goXN>Q&`H+mV@&iQ7qm,$DZpNN:i9rN8IIHh3h$g/HTiT26G0*LDpZn1RPL?c=98o-%`+hE$J&JtNUIF&2<'"N%4p?`09u^+kBdW("A6N_LPE!t*4s;i<R(]JH^8TGVNB:PTO=;NC4f%paS09Ns*%NsMA[JoY+[mDp=<%#t'Gi'o$"*ghFeR)-N=Hk_%D0QPCbG3\qG)&d.g'@l.!=<`')*4<[GB[8Zg,)Od(<7VZ.Lt9K_A&>3Y]Via%MP;0d@jiLS"D0d)BBPOJ>4D5Y>glop/'ua0dV^g%H%tuVf#IRQpJ_d=)ajLZIeuVuHVD+Q.UK^OXCpL.$Jt?IMfgZnP872`U4`h3<\VR+"\0,JNN<WZ'uW3_X[.+=lf'7rcDm-FbR5E@%l#m(W,qF48c)/&g*[%@DA1V+T]#+/YC_AW5enLTX%%OHK;-k`_S$]0tb"-(aWqGCI2`N.cWgePp)H;I#2*)n<LD@m\@l[\cP:7>]%6-;d9TsCGn(rmI1m81?Th>a6YV97c2`7.qS"ia)#]*uDYB=AO_3>j@I=9E(]o5)&c8`d4aV<WHCc9g,u!36)RI^kF'\HZFoZb7Or%D&nPO/W<N2)]m)@dLYdE=]>XE*IHKH!T'elG6`'8ctM/I)eI`4`oB1+X9<_Ql'r5!@goHNBN3=b.T-Ukd&%J$:/5F:3K6cOC:)M%%YsE";XJ]7A95'l=[JbbJ;mZ;(R&1uSGRp%]qq63h#Zk$j<Z%nF!G/2B#2%Z[/$._./ANbuLdZeH/diQ),2oLJh.4=k118/*.7tt^%NOu&1D'h?_!.(Xp%dcX3Guc+&]YSCiCK@fLKJsVpm-G#kc_9?]JQ</KKXaZiZ;W7up.[XB=1e37HZs6%m-+/rp?f+#BrZ,(YZq%<%"HnPKn>X@)i-c4($jd\7(uoHAPt2Z1]Xri-!GdVCUf(ofM2*.0#NHgG'-K$(qPP"JJu(3l0J"di&!Lmn62moc7mB%3UB]7J0KZA)%b"Ag[GWQ2N57/;aWhtAtA`Zl/P<DrAFYmE"[EP;6C=0S)]%qt`hICiQU*Gr'@0?W6jHK($["`SOZ>*eGe"hBqS'II:6&jEfg,^Q<%(=b[L`bO_=`i91W<m0J;<nnR)'iqmN%1fMgq$DsW+a-i@;,@[?!`10^RddfrSO0\SUtFpX/D\cp-9Tb2gN%OG(<?t+j8_<iaA?`>%G!T5IehY+r/1]B4I&>#$Zg7Z:QJH)*f4G<kWm.j(7Be\.]$G,tGl%lLc*DCj=IVaj;(=q`:i2MW3igN*C/CDMG\rc&W^sO#gL7Km%Kq(!MAh!(UHU'@$O2IV0"E>)GVdm3C$\\8Id:";Up<Vu6!L<,Q:rG1.qVbo\FPtHm/KQ1<3pla,H/Ui9["ZS;]bP>mfiG=7UtXeY%&0@C=XW^sZ[UcTl7BTT'>4Tn$C4QIsh9_@S\eB<dguCh!C'M:1BV,>r8p`b_8?K[i>250J3K*g6_H`sp\mo\DC=l;F7mZ.UO.net%IakU4+/Sipd#[17d+j\FH8%R@5r/:6_[cSm7Mb&U<L*[F`Y=hREhtm*Vju.FY*9ra@'3IAY1*duW=^CeVT/%/78Kgpgl[aCA"HXC%:C>d*_-O%_!e#*cFF'$RW=cX<EepU<%_.ZP<@R5\=%X&,Zh5Z[GD1iK^=8m9"3e?/G=SCbZuq;!FL+p^H"(&`kP%8/A8"k"S]H^`%3c=PP)eOgGpJtignA:V3hR!W;UDo*\*WWK'TF4X>'A[rD$I;_&.IR?W4(Hrr66AVm&u6&sHHFp.%=QmZLT15Sh^]gt`2KlLonm<&%iU&;ZI?^Fdb4Jc;*Y%J2VL>jT5mq;pP-@:9#k@+=YEB!\q>f9fD?C0QY78AncN%:?hq+[a!S4tcYckJ$@oN9XhEEj/O!X71nMNFW%5QLj+s"MhB@:3a6r!kd!-b[9Q!h-/8?0KF]7sGCchF,H_&T2'N^Vc;d,_q7i<+qa8SaugDm`fo499SYS-\ut+QP+j?D4fY]:)tTJ%!<IuX7>\Sg9$p)5TK4[!8P7pqCOaNTg-\n`As^T=7UBWDMLSDcR[Ym5QD<i>Kp.a<WMe;"$qfR`YjH`k#'?hgMB8@!2JNb!EYi@X%/oXgFLnO?3"s[1#jiYRT5[i9N[?;Ak9#*KPPD*/*#k`)^q3DjalcOk]'@^p([EXM&&;$-a97A].9ankf02sKUOK=I)h&[3PQ!lq@%2>a"e9(0X@JZA;tk0T%>oJE^WNNdK5bK@6c,0n>!,WRo040QI.qAH>rUP-<$ECCL(78P$aX*m^UX`*+2r:U)8R^)n;^\Z^"rQXMD%s5rA!rnVMlk'*bXK_4/FEK"2Zj7rE8J,=qQ@40$Ro=qIS0d[QU38Z^MO[JU:Y<Td$8$4Q1nb[7>T$(hWDRJl`J,SDc$fiq4kT@A*%?^m_(EAmLOV^+h/&CU6Ln*e&tmW6+V^qVn=J\V3M$gX)qkE3(FZOmt:W4'r=43lkRn`G'=\1T4mhgEh)<+<,p92Y=P<"#ND!?UVJ%m7d#N4MZZD='u/`Ic\-$OEQqSY]:5'%nXk%fNu*0r2IO.pb%tjBSj/d3SikW/P<0A*J2=^c"o\9H0P,9fVGK+"4&oY@.s.7haL<b%Y-6c$p>/s4"S'LmBK=Kege#sC`dIoDKmgGV,\*^-T#>LZm9t5L/V`/ML>EeM88]**B,bhKgFm-sP@a7?CsN:iI.kHNB0Fu.k?<ib%`&tWNZ.U'5[=NU#FQ$C<!hPQA32+9T'dVeQc90(eYud#c_&l$>_rGoK,]Ukr)3*m4/d\O.gY9Tgbgpt'@s\H/^Pq+"rp[`.YTH(k%n,p@GmC/"Qjo-N#4=n*J?/Oo]bki(p+;l8Y(^:Zo?6X=gh'"o'g,d6MlugEL>*N32g+`GB6#<(3ohnsFfsu/eio"np55#e\d!FYn%BnAILp7%,qT^a5PDuFt5l7\m5^kE9hhP!Oa<s'>ZK[H%PS@VXkXfj-[GCuOraI=n:Aa>9;8P\\&r',o-Ws+Vde&(3EWU;UpSI#0+%(t[rcIr$dDT_ZIZV,"#(D1BKUk)2@:ohX(p?:cD*'CiFI[$X9!ANdjsiXrgoo-moe_GkBedd4@MTi.OJn-^f2[*,3X1bVj\UYMd%%,7#**UgEMpOR]d6Kt%/C?T0(2T_TLen,-)n_pau7NKmsR=s8S>/XApYX-c'5e>ii*?bRZYVmp#%rq^p$Z`QLGB;F98UgTIjX-Cl-%,cu4Po:OZ9pW$'C^#jJa8`cE+oBlu(Dt*P9T5D.=mbX,Aq;#EVeN`s0msk*#s2/ca`WZ8>]Dq''s75(Gk2644YQ!gZs5n8"k4cXh%]-X1r^Q&(7N[!E94oafN7Ygp9J,=/6hlj0g@aq%GrO:6:r9`D?moQ3nb:ik8^\uu<r7u:?s$-O]hu(aVrFX.)d4"8XNrRl&roQHE%]3Cisb7FTkmsb-es5S%smQYTmG]$MtXDblQkJ(<1h^]bZ>0]n<q+ph<J)o#Wlu2o9HghaE]\_oIs7_TSli6q>IomH4Da!_GIe.cu%q>:cls4X;*J)Qp6M6>kQb%u`'Qnq>7FuD[>Z:U1.0p_0Xc?!&&f6:KB,)W#ak[5MsZpP[6K%?b1:T=megEVO3T'"E!+qn-5]IkM8%"%r.XL^b7Uo).''dE8d7qW';&)p<W>frXnAdq(EZ5X)qN%)^Ot3D.Vf7'm#NoXPop*?eF0#k7&pm\7FI^R+0sS_OY;jPXb++V\B>%ES%$8Qim`!W+"b/,&t'2BSn&(`KFX7Te5-#g*q84lXTgW5JFd\VBqCO^94QNo!(PA+ZO7$)c(2+8jG*Y2]GWFhH3XdZ^fH;15]2'%VkJ2HCVdl[Z9/?Ar$i)k_6RGDj3&,5]adB3B;K[FG98nuHBgm,k(P3/<];pgBF^H:_$OG:r(5FaS(qVgLWTe!8(s[(;u;hE^:]!'%kdbohUSgm8-)kfZ`MMKV?CFV@.efMhY5+e98ou9ZH1WAlF([6g^N26Re<cYVoO5%'Z_`s@-mQF5?i&eU#NP3#pt3Qc,1DSMJIR3/%IidCS.nL1jU'T-O_*h2H]hqph^R+>UZ`17ho$(e9R9%Et[]f("rqQ$c,50uMK[[Kd3og9a.$?f\5@.O>*5Q<.qQd/QT)\\W06t)/%UbqoY4LJDs7j5&q0j>?s3Xn$e%FHg!d0;om=UTq$S(uVt.8(0&N]Wui&L\nZC_p:Cq$#!R)_?@Wpi(p-M=C+g1ahSMI`\la&DuGS%c3l^S.)V/'8XA"J>+auZ%e:.bZ$%8U9DaE-^:]!O%I(5Df>Mr\KFPR]\D;c:G\K04%CdubiNl.DguH'qFH!uS#(cO.)3M.QaB-G:%3%%I!LnGMT4Y-jSEiRljkA*:JmO'L!NBNCY2M@lt&2/6K['l8>k\NU/+m6aBJI$eKM8Lg%1n+2m3J@jJ5.4hpj3%gDC2QJF'ef.(%\VKNJ-@#R\dWQtt!N@=<C_=^%iDW@%Xt)'_2ASTE!(YY$?u%!fJNuco\m?%jk0ID$U227)?ge6-5F.FU`G&h;TIn+UZ!Vfp&SS24%erjrlHba)O9QHikd+;d3M9IJ*.;R#t!j1qYQi?dN!:/!`RL)n_FU31B#Tl6Jl=^"m='KUi67gt1)fY&*,[$5+1r1?P;73krf"Y'u%O?9,q?slP"F<S^jq#/>W?QPl/4s<_c]CltKbo]"]IO^l;pIdYpQ.D5IMe$N*</6)W&p2m.-5YsX3#<0L'WGJqk3%atIscMB&^ZUD%LBN`C:G#Z[nO<#r?^f;Q8Au$S_80ANh25anB]O'!3h]2hVIhkf`!Y.VORtY'6X<MT74`AD1-ls(pC#4#cAZ59>ep15:^,)O&IL[Y%.G[B[:4'(MP1]e]NU`qqSE*3(,&-KK[j-:#h_4o4J,d/!^#>GXUK@Sn@^R=L%aqnu\"$ts%\*s4CTn!tr0;dTrs'^lUPN#(G.,Me%@4*P%K"JG/G(IqM8_f>OWG0f:5jjC>W)ZQp>f&QAPf37KYDbGZ'hoqhV/-m&&a>+KoqVFp2.'tRU^n*X6^Mtdd/;U;l&RJ.Y]\nV%.<-iulsWKP:c"*+BC#N0QQ*TC>&t>I]N$CS+p[D-o/..XZ]VER*m9Ji+ikk:(`+Q]:Lh/o3D]`3aSAcFc<C^uk^c/p3k1OeA0$UO%I'+%INA6ni"laI,n<e<VOh"Rj@"+BW<?<8ln061RLr_9DfaVt28@Ro]EnZW"64@&o3j'oS31UUqmS*+k*BIP0b(Q[t+pRI:1p!a1%**V#/Yu;Xn9W1D5oKM417*,<hP,lKA259sSOr3&sD'I!X4-YY7:N>ub5?4E*LuKPNW>!2mDn<PZ%_ECPM2:pe_L5g\T\t9j;u+RL%%".K'!4=1+]:t<T>SN!=EJ.]EM<.,Zl6X4J76oRH8BrS\:m5qQao?A%!jFQ/`CX6&m[U(*p3\(6lY$Z2h,SbHLY4t+_a^G&2h]bc%B'sT1K8>mI^H6f6^cAkk>n?1?.8kBB/>Od2&PC#\FAN[D,?L!me-dB6Yf@g-f@3L84cAhmOqF&"`6C7DTGBbIeE</_4S2qakj(K?%"9)k84JpF`d6P"^1@u$Vf?^a$6lW'aRs6A"0;_BbI?UsAeR"=.pbYA^OMF0.c6,"=S,oLIC]Z;##1/Bq8CEq-cl+Y?aYa0bX,](Y%68[lRBH[j`YmICZ^OW,-U?aWZ#BSiDfK7%I+NP&G^t_Tn4$jEW3*[aD3:8;p:jcY_Q1n0`k_Y&!:Gnr@JW/A.L_R>qCui1jN."Ie%fBN=@9K^mhf-TTsBmNpthA3[S8K3R=.@<oi$o0]$<@5W:;U=plRXBLa!9XOrBmp/tKptq]4O;g5*q's!/2lZ/LMfM>4%OZZMEV[?%G(gqr&f-bTOHY)//kBTPcktM&g)fLEEA,pq`?*VUSO0qL*3E:`9`q&9X:O6W!<UKgL]3Y6eK5R<qKr,)=gWu!rs>7hSOWOTEn41<%+oXWpoh&&Xhu6U#HM@H+ZX2MKLjl::/o^YT.d?O+6<lf.KsP,eCm+rR\Ih\a1NLUsiJj^(=623\G/";+J5+[d+)%b9K\R,'7$]c*%auo3(^D.'"p$tMm#cGsB*H1):c+1UgC%Fs*kP:NqmSb<ehrjtn9F3+EFPC0BP^lgR]gA8"L0eh)>ASg]i]@I37nG.VLnIT4dc#u*%$1;7Ko4)X'+MS^.#SaGjiaMRk?osmsklMmMdV'KN$S6H\g?s,T+"lmj7EEN-bIYA,1Doi*rWP83S,[a/dQdJ/_-t!B5A=*k^XfKJ%'R"j'je(G3=CK2WZd?q"?[U#3"H$1a1P]I.lCAm8OiV(e(*nB?]g,,<Q#9I$T./"j"Zc-CFYC"-@j,fY2rr#G[pQ7ATipb9d!/^(%Gr?LGNfp8_O<?7To*pisGC70coloDkXk0=/=nMS]%-31Sg8ZW-Xe00^71c*HTQ:R)Y1A9?ICXo*<50A#k9OGmdSV/\=]W+d9F)5Z%K1KDW3Wra(!h&ciWQ`j,MV&^lU6d-Z1-q+iZgXO5r;M`CS[a-VRaRV9H\^OjLYK=YGTP?,GGjtM]<_2&k^Mc@3\Q7lm(M:2`'oSi%g^u[78(\C`GU<%WR(pe>rTTfI-L@P;VEr*Mik*^r9`pIZMRqK6mt.S7I=f*a,b(k[iJ<hEkjSLF?UX,nV]QP647&.jpZWMU5T\lq%WsLhE%EkPq$&B+rQWmQlNmiT3g`#\a3W'.@UA*OK,ujB5MO\WEKpSRoCNor3+qeAB^0Et;mrnkT\UMI'M&LYjDVoA)L4=\sile.m%r:2mo?Dc@b.R)uBPP4m?\&nTS"MClOch6@1dJ:\<domOei@F8"XRBs$\'#G!27sMN+_Y@?RcEUK,eo?5QUu1d3]:A!'C>U_f4k#M%X+,(X=1"qnDm!=SC@2B%=[R#c5&IgE:$TcXH^U3Rj7d3+q:f_qc5MoHD"pp%h\!L-nH,\uMgIY\3]6:T*`MiVUAr%5!A1*\%1icm%9%LVFK<-WB6rKM%M!J-<29CW^+X1]=QVkL&:AXf!m&7Mq.[!FF$)S.7GIE`,ir1H&M7+YAVD";%i*AfHoC4=<;^Ta8,c"kaD\,O6%<hO@9dDpC]hr3L2=3*Zm#hM^X^>KtYhsK3<X/uS];[OLZP%2c+`C/^l<q!aKVUD!!baL<R=l_&(C:Fqj;VC2ABMB2bM,'U!e9boa%:uJ;S'jP$JiY5G+=9rU0qL6243nMX5OPKl*?1P%$i@gi&q;o#@?5iAF2`Nj<7=l<`ir)fg6,*5^GKc2[F+_gt]0Xs+\m1,jQ1V=%%,,O+&59ZKpl#hO7=j]K<?[oMT[^+FUk>AR^m&pNP+Btr6j+G6#3^qfu3._="D1'9p7H-Gq*qa8q;U`PZMc%#l\j/BZq(`d`dj>at%B8k/bBUK;9jKok2TXReo(qhS4r,jX)baIY<HCKK;Z3o$q:_h]cMS>fR.%M*`!g5fF*g^oEo(B:\nQL2JE?Dr1i@7T*GXSJ9aW`O7%,%d!+J=8u;#J#%hoI8>N/)pZF4P-806\#?!$A77/?9r:^kER+UCIBIhKL-qB7PRe<j.ejX[3WM8feDE<Nl8/pPR!]n"&lY8Oup(!%6K(n3+j?U4m[<tjH6U4`Hr!2V<-<m^[')*<f5(`""1rA9"Wr0CNrmJ0f#Y'%Y0C9)M=KF;hg_=/q08=R05ke,po:fAIqbUc<kPm6%2sGlAR<ABA&PiTSUQI07#X^N74LJT'mo6nOWNIW0.^-*5^.#lk_tQXL7eN&5+Ol#e&Y^Y"+p#5j'7Y#%Jjg6hR=91@pfnPW+T2g;%4T6ki@1#"GJ@_YI3t%dchiW$HKKo_n?;MLRLG?\-3I<tU+?-!^UT)A]GG>QQLoK>1i=YT"2fE3l2?86WQ3@Z%E^EcI6N[6$K@23l%)@UPZZrg9/)L2qGM"cV]\Qh7`Pl#-DbQ'(^]slM)2;d-cfe\]7qZ@kO%>+I:GoKK(1%uZSDkiY_%:P)CkoJXbNMn]+'nJp<>HefX%&<F,q;jD!dQ7+3E/ao-QIO##A^3RNDK*ndp.#6]BF#S%FZ>UT18"iG9OY+HeeeJ*u?6Ca$6FOLAf"B@JWc\]C;QJd^m=?1TSCX8V%lJ$1IJb5NgQ7Z%D&P-Q%&pmW]Ys12E/7E*_ULfr>-Kg?[a:iF2g-BK8qJeq2&a:<&?G]94WZoMo$s=@;A=F*B.]_NpYW-M;65\3`%]0IFfnK$UKWjD:$Wa9CLl\akV7lhCSU*/O7=ZZ;fr[,1u5p_\a/%q0GBQ]QLp0F.m[Bh#s(&8!F=IkUjLL&Ypf'<ef8F4-"/tLm\%jQ8J"TY=H>M0[s<WB\l\U'F;E_*N]VN@-?./0?McnS=J_m7ofcnak2c&@G4bT-B3(PPPki=3!R/0OFah4T'$q]ls&>akCf#A>+<L%O?-44pSIr[dh)%%VJA>$hPq'4AaK3^nkMXOc<7@#YQ"5fh.D'tRVFlsq)l6s3=RoR^L)u%OReJ*rZY`*epR#Jorl\"PMoS<X2eiq%KOS,K_2DHs+k0JB)eu<L2<Nh\ickl$1)tq2Ks5jE'?m.$agepCGg6].%aL\A#sel%2/'"#GW::a6P0aUTNYdHA<MK!ngG0)\frOU%.!@"5W:W_3Lsji*>Yn/q%Z/PdgFCo707E]aB7&R'$m61&WoUf`;"9]7Qa!WGf3i6H;8BY//)eLVltu1eA'EcYhrleg^OLO"ps8'\%FW#I-DI+*Tf>[&eOaC4<s2^B![^<b"^c'NR]e0QEZGGf!^6VSAMs7N7.+9l[09At8BPrAH\2Q2u%k#%;BKdiM8>`AtT$62p\25NR%VYn/LASp^6`98MSBuNT\>UE`Zkm721b/>D=cWQ*_9R`':+#bY=#q.!goJ2fPdsd<_>GU[sr&G@\o>Q#'RSm](&1<oLh6oLe:4P^M%.]4c_<l)%Dc3Gh"<m2S2Li\AG$(3U)j;b#Tj(54fp:dL)_?84r&cMWqeM\';2DCg>e+UUI3D?>-U&,o(m<qX\5W16Bj``DZHF=sR%Tus?a?X`FcLG5fqgLfq*XoA26>^#!&6f4?mg2,['GI+D)&$(gTB&<SUmT*ql<SW;^0JE>%[o^K*Alen_eX,(A&EVumY*X/j8rFG1%PH^@;H:]e%O%r+9M_[W^]%EF6k76+e?JWHG[8.]@?%oh1:k"KEQ=VQKi=tI;6"F@oXA2MIP$YI%\[pE.2%X,OWfH5;d>50L"sMWK%=M:7/7]TK9oaYee>q2+Dks5N-)S"OqrPQE-*cYj`6fl4bHmgh/;@oQGq+0&7J38an([E+Ub9>4DWni^M&e5aR*Ci$QH+,8?I]%k6%k4BCr=T]nBP"*<mO4I"W!0OHR,u*fM4/lB!Tkb2<kVeMMDaW&uc@]M\<u]5C0;P<gZ(NqOH7[I(7HaOi7O\5JJ>e4oZAS@/d?O1*%dEmbUK<e$i.\rQ)b/^*#%fT2#pCE$VF-0H5QTg*F>MNo",2k%#]M\o&4eYHEptULAN-Z49C6B$W;!Y4J&VZKbljVa(o8W,-U/aXp%Fj?XA6r_*o+Njn5<^?mAOo.9HoFBnSnh(^48Z9H/;ij!fX59qCC=['K]@As<PbFEEpZ'H_^jI$6Iq4qml0pHB?KTg[#/3g\qeYC]%C>=f\3U3Y^,D6ZS!W?RTrV2(YiCa]0IX1>&Qi;FQ(=1D"1</1k+ptd\ZRV&?H)X+g?Ej;I*#?5Hpst;]k<q%aQZT/HcpLF^'PEJh%>/?P&PMDXbnX(a212TicIcA_!).5AY394LC>GTTkN.XYq&er>3H)o$UOH<&A&P=qsePd.S4C^n&:8O4R<DnZ[;JC$s>KM0GNi4aq%g#>7/?.bL_cU7mXMr`&ZqH.dY3dd>GI3$&JWTVKPSY9sXq.7:TX:'6Mc*,1sJX/!C_HJRX))=MKJ8mDo^\j6ggn#HoftYUQi=2(+%^?H:Ak_Bd0]Lt>RXD4Tfb;58HNl1Eql1.1fOJudDV!KtSmlNL8q$Q-?7%kW@L+J<-9EaFkpXe_m-+!6IQp4fI3c=Y-VdE%@fj:pp%X5nRb2%#p]l;*DFai,N%4Yl4^@lTL;cp82/H9QLkFc]FBHrokr8ZNt?LMCA3%aKVee@X/3m,75&Otnlc=!&GOrjllHWbP5<FQI95%EO/<Il(RjcN%.OF.!7PU5bRjaL;@r<4GVGPd!HY(0>mQ>gj`Sk^h?@jB-'Ep`1o\a<5[/?3l[6=McE%g'oEX0QMKpoY0r(h7`2Eg%BYQCWkEjetrL"/jq2SW!qX!pbdIB,N?A@/U)3TuDl0G1r[/+u[c9d)J"LbE;gFo<6W0?j4gh!4`O''TAp9!@fDi;eK&c12BlHqbU%;pd6*,\$%ZF;L2S45b/b8]-`'m=N3#l45p*/r2j6o'.e8U"1H.g4OHUHQKSmEBd;F8K)_,DS0M43THZ2gdjto'K&=if(JsIP41;)%fdG?gn=]CH9erhNU,&lDKF+bRQ121s.1#+\'*QXsXsPnl#,u@.CBK8L`pObpM6a+Z@hpX[-QQp?f;3VX9Tr3,mjsN'J9O'@:f*/L%[VsSgX(8m;*)Y"Fe?r;a;BV%i!=lT;3qHT[ccIST8qbc+[/cr]@HtsP5e(&%8T`jh+J^?u>Y_R=paYRc2L05HR<sM+qZ`VS.V6En%pp,Gf4u,2X87Aa46[4'S);5Io86_`Z08_qc:1,&!#[gm&;LuiUIL?Oh^$dre,D68kHI5D@fX\r&[S_\,h'!(Hgss4ke*p29Xq-CW%A7`)/Ef#m7Pun+%P7qCZ.NfP7#fMa'NE"Fdc3AP"@"OVX0BbMaatEc)a"BeoW*Z>+*$\B=Ia"m#))[Q&c]-H7"Q'?)WO#$W=mFM*%rEruhk0#_[7OgF&6\HOM]@fGSH5+"t#j5sbp'(]BguRdde-r+D[n9kLEVSIjZHfcU*1a;X\"Mt[ofn?"F0Oh"pdmYDqPbdZ?FWK@%91D#IGp*'afM&.)+MB!,VpN7S5#X,jBh2'-)cBN+5a9BSOc+2-'%%3Y1i[.!^]RTBkJ4=],*29c(hBg[nR]qYN9n"kn1mpKkL1NE%G;&RZAJW&+p9cA4<fY5s@M`414"[7QGgMC0Uk6Lt1>\FcEBD+eDG0TacRe(W\k\fPV0;K"r3=HapfNIs$hio'r`oJqS&FoX0s:M4%'uj,<gHuR_=O=ac$%:)W(^k?k`8n)H=>rQ%Cn2kq,uE]nbI__r+m14gG=p/N?t.`A$\\$mD=\d,<2FWA9sW%/N'$@;FPiOfh7\(n%I4o+lC:cH*J09$A6,eWr-5j;.<h'J]Nk;QbStE8N'S_B9\$o</)!fo[((Ac="/4*S^"QYd=ill0oe8/d@9.n?calW]<'#'WGE=&U%C[D<1_HW2"b=/auA$d>POKufU`5=G%aO=CpG.VfFQlr("N.RSnJdkVg/%*1pNA%$_E-RM`PS>iiK#udK6s:9tj")DAC3:+g5ij?%%L-dB<RC4f,J$.\3^e$8CIVV)WWep=`cs]@h^O=eNJD`]@UfsEmbqN@Kq]k%#.hFSq"=e`G,i;of8>Z>rq^O?al.G\!87j[dG<@7-%79TYi23nq"plroq5C6bgcl9#&$W&dECEl_#N\HYq!JiX_f7aVLFBF[-*Fom@hSB@X\&\'E5D!GGY&-.)"UQJnUN4(*l5NQ8^;#*<%G=`hg7aqck2Mb9Dp`5!)8+ZqiE03LDTNtXjkQ5BnFNNf(KQE>mrHAK!CS54`X8oeui6DM+S;P%/fg*93d,"F(W,h"a@s`kY^nf/S%6u'-ZYq_iR>\mdh3W[In;Q4h+5SqM"?1qqDg?G7-X7tu0d^(t6jo>0Ar#a'Tr*THpcX\F&3^1u(rh/%3V7k1a,]fLrL(0!f61Gbi%OJ+)+?UL_q(jrDq^=GQo64S3-@hJK+-7)3W$Q!;8:I-)DKLdI%U,0D9j/JL"4n?Lg"\ZGsEC_+8h&%1<l+8r(+O*4%Mf):YY;_0J%gkj_,h*8!45f&Is(C5^-X$a<\M\h`YGHofk]gEM(OE%^[%,mosAreEIl6^"+O3^eaa'uHpAm;K:+M,<kb[EgQ]_&OA*<P)pPX70*%<>S_BN(UJ81^oTp+t-QUJD0ZeW[PqDH565DGABWfTPGYQ;u1_V)o"?@E.@TEQe+0DI`LdK^9l'VlTLa4V&s#il]:]'9CKWSOk6ip%a5"kZI#d-+*o0*4#`jd8;_a]ae0*+k?'6I:85piGoKiCM`WeKBVk'hDc9\nL>^RF"Za4Ra5\XK_J61rT+UFSu`=<YQ"J$t&L8_34%"pB5#b2kD,ajBF;*^u=#$qCN%&]kfF4Y&`NE3.2[l-_=bL]*<X;K.%d7Kk<=_lfqsl>?8L*2a[NCbTUp$4S=uP%Kg+!Mh?1kSn,q%B<-6p#tMnGWo0mY!3B`Lg;ZKO2N*al2hl?d<i"b6]YEnN1^/q??faE7SL/njd*:\WS$*^Ve]Q2dAld/0--`5PWS5Z=F9lA)gr'Dt%;8bGN**Lt^&%OH<A@2LKqbkeFG?'jt_b-kA,`lM'5(X+^8OV43;Q`H;c=p::9)SHl=cZ*k-)L-W/!<:</'^J]a5fZ5:beDh:LSc/%`IJG^[0D3mAJMEXBZFQ-N)j0E/![Nf;]!cU!050>29U$oTKnJ%W;Y-F;DpsJ%#7feMc?f-)Pk#75oFaoC4]#p6j#DGD+A0SXN&Q]%Q3!#c%S<_N<pg:"h_WKU3n?.b,,IQg/F+0jM8[c0Q(DML'qm4"KIT^t_pGg9Qp&Fbfh7];od3E&Qo-R$l-Nt<Mq$>n0@RDgF&4G>%qbZRI,cj7>ik>M@6tulO(&nDo\R-d3/4!lj!Tn'\CC.$rI>Q!UN>bdC;Qs%HVaVK*;gj]/!h+qF7r,20gbLf-K7p6>ngenA2CS3Z%BBdt(4?c],I$kCu[,_s#TMI!GVI!;KoV;%dZ+'NpDJW,QQYMXS6(YrZ2R.)RF$;WS3ROL6KOK\;V>nc$BQ;X]+2i:M(/\]E9qmqW%dVPl:C_#fqn`+24s6'[g<BJF%XN"kNl@nkQ$**=rB<YH;1=a,LML,JjXg0XeQ-s'sc?t$A#7f);'RuG`XWF2DW^'^oI^[8]iuN.m%q+e(0TJVM2=XdATc"X)V)R3"01VX:B(.e\<O8_5[1,Q;Cee2%9&VF2tWlK`[.\ta_6(TW.26rf>8r\7G`rX1aGcBUuf^/*;U_i97%PO6WjK][F&olhgkj@bEks%psmA>@FQl[N5+ejs^;g5s0=-WS*=o0,J3Prn,?UNcq:2%3ZnNtBuBQ:bcbhN=&IV7C)r5lZ9`8*4^%%4HeD%@@0XHeXQqi?G@u.4/23AU!NHiVttu@@LBp!2bh_b1oSG`TK52*m-UC+dK]8bF9O^#lAK/jq=pLSPU+:gn"/H8?i1BmH84P=%fFg+'!3s0Jju3&bEGMT6!?J<7.h<j:"'5'7m3C7@E*B3c1e>"U5*%?ss)Yc3Z#?'3+3CG2fVt<\Y*cuN/0Y[0)4NA8]=?;/I[e8)%<*:I'qT,E;KPkDB(eH]YNO(d4mU>qdp@]ijY:k\e$ln>(D((/SO$blK3HuSb/_6u&T%0:?1i6@X]*,"W2g)9IVM,.[0j8'%>6P`E%br.Y)F^mu8jlCg@U:<=$a3fi#F2Z^jM=Uc8!X5s'D29g+Xo#%t($VsA.A#Q^g-eL]qsg^la)^1H;4c]kP3k,mifL"$aWj@L5Cl_R%[heX9)n3t'ch>"/1Ys0T.%alC?(5\&fpQ8$3koi8F9&>LAGdgT,HVDW]*<+*S[UlPfpj'An@M/K-5OT+Sp0L*/V>G#OH82S/mIK2%jmrQ9[XB0aZW@*s$?:=.2?&VRZ:E'^mLW8';Mj-o]!l$-mNs[SI!HB<lhn6$`j7QdpLpl8=n\8lT0&ut(&$2j"2`=%eQZbUP5Q4e%"G^IDZ#$mMGaY2S1rc?1DBeLcfgk3*Dcr:unKKmcZ-UJi=C$)r5:jrT%?/Z#FS7HHKU4h9">sQ`EsmZ[Dn8nY5$a$;2osB_;G%Us%aSmem.tf=-Bjo(2Q_&do'qp7m?<a$D7g?i$=N=B[0"6;/Mf.0)@XO?&k>I'tm":X#eabB"gg1jnPr:i8qVLf,n+*je%_nEXU`)XN%Jae6!;($dCR1]t`h&%&6_q.8.c6BR4JlGPT;j`qMT34\*TWnG:EY_m65VMAAHU+ZBhYSO'T%Q>MI"&@Q9S@ql`F#l+oiY+*'0Elu%K[_.2nbj[\?X.CHrmM?*p4<a9-dE75`3,Dq2$,[l6EpCk[Y(/t^cI%#DFujU?pSe6DDrBAleceqkm+G6@q0*039R%SSt&HR60Fid%O)kna>:u0Sf,5Drm0"?9-.H<B-&aN.SEXI#>'-@n"lGpjdl7a.1L?n+LRfp8[sN<-s-JT=83Rli?8$_V)k9lk/p91Gl>/<q#\95R%g#ufW,,D!+(UN^V,R[?005b.oafS9QQ<]MdQd1elb<#,NCkk%V\QgQqUSRT!=0G$;nnk`ceh&DldJC:OOcQ`#.J3cE/60)&7o/#<%)\kR2^).%].,'Vd?o'7*n+Q9C#(F@ogr]WaaM^-b&J-?36cJjDQlr@&EZ;"fpK8U7Y4Smk/U-E/6i_<KY+M_"<jKDbn//q3ib"@-%96Ac4P0MlV_1W:UX'..MSTTU&4Ed]BG'IT',3CAl69jC#,5%Fcr'`(lRX%=f%Cm$dfd+3]cNm``c+T[<ld`I_ZWsQGmV"+L-FthY%GB,":6T](0c?_7$RA:g/e1A#.O>GU,NgO_bMJ[<BN`\GO[]UaF">_Y@pON1'R[I?]:[$RPEqcTP@!/6XeW&,fI@.?=55OI>gLmc_%Ujckqp*++TmpN$^Q>JXY6fHD;$11*XMs)GnB7&@[FR%n!#i4_QS!H7oN5HCbiDKGaQ"%9<jPt#>Z'W):pI3'Q"f5Hf?=*B\eTB_`%ac9s!m%KC4,O27dX8id70T6.:hNm_8qdaO*hMOJ<_+]ks4m4c,k7\GMGLq[2?K,SJSDtdd1Qs/0m$@rac%N?j<]55eXV=YN=%ec5%2XnVcMpV;tRi1O'K@%$m4FR31)joLC6i*9_gM_tg\98E:O*:t*2inV^:i33N8g6OpNE%K-5EX$m(V66DA*gQ#3kNd"29C'q+,;N+%:*.`))jY^BAR_s.ct?Bg5&;Uch*lR?b$*=J8$=;9)g!>eCMY*t&KAr;[p[/bpSW<s_qKdckW<%Yj)`E+cRZFmdRs'UD3,T#TjPCH%m/&$Ih&*[$qUGMH5H]d&BHCV?_(r#NNn3"QH_]T":co/3SN,^dB<[d#SWg&<o>pjH!Gj,^(Mmeqai,FEh8CDaG$+W7hd4:W,d7YK%^LOLt4$Zk`G7``>+82H]nF@7F],]tsXN9D5ILo,s3i!lrBid49"QhM?Do9K>7oAm<pmV)CO%;c*I/2.0A*Jb7+)J)*@N2SE,7ei_%E&31oFimGWrLGrN*oHdgH\qSD3*#Y<(49'7i>I^(gc@_h1(DqKCNjj=5)s^N*\n^gU"bT-`PdspC,`_(P&9ptEX_:D=*d35%LPUq%/A#I1.6P)-F4TI$brll<6&.miE9LLWK\0'?Nqkqj"NZ@.QpE"=j'XAtGJgK?0K$&g[-\bM<'m[$1Q]/]B`HcqiksM"5o&4e><Z3?%CaC4s-**HOq;1,g/8Y:r<oagYHB]1Y\7\#b:^Y]k!#@n@7'ceMLt+EKgp2KI1=.k8?D(@;`ipZCgm9_TECOdfXCZ8PnrI0D,['jK%dc&**RR"/6H=+c.4,nDV.8B.Q+3MB:cF@ACY"ma>)YJW\@j_&%6]9kIa8iN'jWkc8</skiY+;o')5MrjqkFs'f:i`8,oQlMPt'%!%.7]/^$l@G*5=0#_q^2:b@WC,18I-G\Tn8Fno=o%(1jW"?ork(b^s5-+=L=M.j\+S_d10?$J.=f"8Z0h&`b-;h9U<T_7C[CEf^'18%UX;+<82_3Kc3Buu_]q'q4g21Q(T81d@=4_!8e'bD#fV4-ha>>O&!Nc.ZCn.^OaJoa/$C44!oW6:;R^(%i):rSXM.eq<gs?g#rF+X%DAGSpd3"6S,trg-4epdQ?o_=+p&*E/"$07YVfjI/<^s-SJM\%2;->)74'!os]MA\TTiD^lc[#1Vf`P-iM65qXAI(/c@Z]bro[nE.%78B,kA5Q&6<1tl0&5lo!GM,5\`;%%UdVcupIR-$:g50g#Y[:h?W62X3d5F+1d%d.0BrXV&6SU;$YB7W&9MTsSZa5T3.V,\RW6(F]%n2Q?VF\W:G<MQ0E]_a)r<,Y0":3]Z"i/",G`PRq(9mPoLIPil2%n/P_=b`Z_O]-kAmW2X;J3?BJb7K"@MD%?jARN94s-IHj2OXR6%UjJN"02qXgWim`-A`7kb0Qq/L`_PMI*K29/IHu)M;(U5;p_?m*\MerO0B."[`L^GefK'$$MlcmHYnfQ*m+7O$D$P<''9>*OVCG"6%j?NSMSqB6"OKXna1@eYAOtNf4hD.?qR2NKsKM4GiKL5>0<tb25eM@DT(6X8WQCm34bT1rAE*mTGF<XLk%kX>K+3]d9;$&C+-r)02%"Cie`D%MITYOYCLLsd/PI'H\Oc?HebfZVYi$RPJ%[CfP',AUmR+cP2MQEJJGLmPgbmk`W45$BOMcF\'uC_=!ED'[Y.T^'0U[FbSG%"CdgCPZOsBhj^8TR"EEcr1(r`<R%qofT<#T.4d'9BG!/M338dOI6&Z?-mZhOF<9h=rMU0`L((*-8SJf+KPXW[[W9?f$LEF>7`;=L%/l8?Nqjf[h#Bg-N4W`=;d/@F]pPVq"m>qe!,+CQhnIIY'jD'R!_9%][6U)L<QmOS,K#oc:e,<4eBuQ<*X6.cDEEU<G@C=l8e^/DU%8eMEZcaoTm%Hkd9B+i#qP#@tWk/a/GQES<,G(*kY*)i2eE=O.D>`\5VB@bSp8$^/I@X!*$JTH3g0(c**UY>GPX\ldI.*Vu9e`M\.%nH;dLocZjX8_t62>tg*Yo2dnV91$_tTXl#[_'P`gq1GQOc:2(dZ;Nha1Gbn;$<b%l*YF(*U<FK\Se6YnA$]9k2;>/$V(sGg/O>?=%I"g,_gV<n=XcpG8/!/ksfKaB#(f\cFF]t?k(0`.>W#&k"fHChYq#YQ),@,CSe=':?7)HBd]!Bq>QJ#K+I6l+$m1;PcZNN1F"0$&o%2ObXZ*K6S,KFOkq6<X`gqH\XDkq@6bd!FoofO&#-!-LdG0aLo-,]WIAKqj!T4_<%^.S1)CLDZ;p,43`5`q*]icQh8J`p$JEkF_b5%@],GG%FqJ\@SH!u^4YY9PCh#P<(CcH[_W\OW^rNeWBkk+kOF5R63ma+.aD0<DXi)]6<E@4:DL'lfRmqoU*$3FlOICd=cnFgYGj./%;Bobd.(M*)a^KX,K-rE8S@oqJQTu<M+U=XO*gN)$1at>Bfcd1@8.)/(H^n]"Ll6nA.3q:c"]pju@e*REa;97(+l-DF@(?gP71"(?%ZGr'oU!4R@;U>d7PjAhfhoF?0Q]Aj*3r9<r@P^lWeC1`7C(]qLHRi!`naNJO=R[I\!#83t2Yb@[OmNS%ZUjj%=UT\uFsFi#J/<__%EC@%a9Y&UI_fGLFca$nn-1lZ4h.PPZ,gkuj`Rq")\:HWZa^\9*a(!bSP`s;a^7Lm%lGLms^e(\(g5agd#f&ol=B05U?!=8(9@7+X%Z-lNchXp#'<HL-><2(@TIZ]6dH#i&BoLsp_'@c0]J9H7G]BKAb\NSe]X$M_ubRSVXch>QdlLZ:RDp'kH_3?=*63=1$osM!b%";s;%bJprD9(aXc;cJr@GUmnTQ$BL8@Qc0;E%V;ZI2/&D<rGP=@IB4i!69srXK#rL3tUWYn6@<HJS;k+;)Q%YN8:0Y3A;Ro'ic1KZuN_b%$G@/598?!IS7/GBk:I9H6`Ut/`C?k,M@LbC5O3T(*El#KQ_tlU$)GN_.Z+EgdU^BjB4)m]YG,XJV?6$KXaRk+QsX(lp3lA6?J,-J%%6eM6"`<'h^?1^PO1D@s@L>-cIp_=Q;?P8@pG,<IkORr/IkD/=D_RjjiZ8iT?fE%`Z5AdRr4rpfe8qU;J@mV!4Iu?Z.t)p^AMat`%rOHZ41*TCHd>Q);I]bUO^&BcFIV'#%N4%i)Hl]a^1Vt6_i+9?mc4gOnQVqN6TkG`'ku4o\]!2!'6IR#W<;2jh;]h8qZh,WQ(fd-1%pf*%#VHT,8U9_`pE'$J\V2DE2:eqWagLdo*>#Im.?n$KsbYUq/V(UYlXnd#Cc./YJ?jN/mW=[1gVG+IQ;;0l?GsAX=59BDheQ#uE%qt^3mUsL*Xs0/5h@W*/Z!4O(NV0M+6[INtis5rE7T0LdM/5*Q%*l2C;RLoFR"-a]?j!Nb%3[*aC)K_!k@Sh&F!NDO#M(iX"!u93V%,iOYcp^/$Da$7<)+ABpkK2iTf5/QtZH;3D5kDp;0Hrb><'Fi76l.si@C8,\R,(E&cQ>@H!;LJ)LlI)AO"@t;V8feREm#O,(YC`R@%+/i>-.sdjj?W>4i!`G/(hU^_9gUibDEEZq'[_M85j4>#rZ)U1%ceDHrn.>Jgq0amAZt))XQPRT6![Z0hTpK]3/Ko$?c!s'9n`=n_%Ik_/aN.r//il)%GZW)ap8NKYT!"PuF7m`X7`gM%m;c&3J.1ISc&fFqR(;SG-<cTC*WL>f'mTR48I*a95:+c8mB0J4rI8iKIBh"K<%OMIaP$ePsdSX;Y,S3utc*rYc4pV5mhIsu[OdJ#;t7c2ZMr$)F,1c/R`dC[qDFkScJ'c*_WDes"Qk!o_,-"uepJ3+u"(9E`33Q@8J%q&uLD'$aQHN/;OEK(^CKj)-oU;r&VYXn4+[#RMVQ4eZu.?o!C7DWoK4^UUA:(^k^`6t-;Fd\jn1=KCGt:.Rs'bQdW0:5F\rFA?O$%K]f?;&QYs&C6C<h"QBbM)c0OPcBiA#3-eB3/A<e-<Md+[f:_;)os11&Y'[A<j3&qK]%T>Kjd3CPD2Ec/"###?+5'T$^#uXf]kq:5%qq]Gupt._Il6s;qOcE('==T/8"J1&)/X_IldcYq%r[97chhhC@KKL]F_=Lr"`i8eG@)?L\$;0R`P4oS;lDtNWi*Cf<+fHsMBEcb`%I[=L2$B"!_I_6*=?X%n/%+3>qrgu)fAb546%Ot_S7e)'*TimJ%#`r#1j*;\b::`nlrejfnaB/0/5T][#TZg)USLcF8l>>[sI/)#F%d'FTsS,9$d*hE&hAF"LU49R/X"T>EXdjM(4P-gC)M"ba&HMD.T)c^k@Ko5&<rU-Ll/-t=<(@j*oN56,9;SnPi3tD#2$Q+`iQq'Es%5V&Pd<9KQgR.`d9'#f_7(2\iTF_>FHb^a_oW1*Xe'OA9m1=>L3Kghg$rPs@C%X@C;:g@7G?L9C9Io-u"qZJlP%%QLYrg,5scC+JJ%!.WmXirm!sU#&"B_=>70s/??c;ai+IJ'k[^32t3qgL!FdER+OG)A@iOOlV'q)#b@A@lr>rZAl/Yh;q%#+O=,q]a:%5DRs6d@sV2_%mV-?](G69lS%@iI6+Me##sE3]"b]a]4VM]2C]tp4]1KAb7<eV1[VILDI-@4"S>[&AHQU(RBlg"O\,Bm^M0)S(XnKUpO]lXp(Qd[p%&`dJF]nD#1-<GKXOqR7al%'BL"#Q2YDBmKFB>?#6b:"='R+Mm;bL6F\AI">&o(W:Lc()bap1Gjkh7>,@^DdmY.*(cR!r04ReU72@%5PnS,rknU:IpoZM8MGX5K)[jUMA6o?#"W<crIRCK'M"Vu/sU(UQd:!\PEDe%#[&i'Xq6j+S?/[n,'/9?'d6@c5;Mp,'B\@QdpUFY%=<0th07ti_oh[$U5URMl1ro;JjVT<tVh/ho!o_QW`X!;@fU9JB+H@@N7Q(MR&+5i+8pIEO2.%JgJ,(K&GZ;h?+V;iME4sAeZ`UrM%^$n=%#``foZX=,d'][cr]1/Z\b(o5?TK!JS_#lGO%<j5_lP_'=A^obKaIQjDHOMW"MD!Z^$3ZF?%<1bS@D\A&rfp?UkU"fN9sVl@%V928aY=L\`iCpNpU@_#'mDNla"hhYMbBL\-``oLW[-gR/]QMc27pl,kO,]3eEV)$?`i-908)=AmU`U>!YE(WXK@gVZc6hTSI/C3:%pfj5QZe@[p?f74&3g:LVpe2*3l5khWJp;@XpAHJT*4iqP*#fC%I1'>!M<s1L'p,2kF-Tq1d0"j5@\d%s3R5K1OP:%3^0io)WdUd2%@en+a3JY^.eaA^1I+HXf1icpBf45m#8q#+n=\Uo&\-]1+2W;3Sd&BnH2e&T?CZqjd8e)r):Sh]rendN$HGJ]'^hUV?$5<b'V1c4<%BNct53(aB$:K8XbWA'?+G/pY*?4^)qO;1;TF>:R3O-)_d9:>3.B7=L@7"c_Y8o;,1CKet/i?\YCe0>3b-Rpr4of@&Jljsb/eRmXR%J-V&D4&(.6)NaJMaQA=c2:MG-@N!Q\"4GA#LXeoWD1a96O?ZpcBVK89P$ckU1H'B-^ntM05^O)o]uAb$)4A6oL_49]2&h31e*g[-%,5si=pG1B^Obi'&H'rjH+)PDk'`X!S<Z4Z/MRq2VCjgXJDaX2=s#PJ+b,\1M=N[^4Ue<MiT=]=4D;#[^+B-o*FI]i"L"<_'?NJ7'%_ju\U=qZT,D1-GVG6hYDYg-Ms#KpS;BYjH1gC^mQ7:L,)<0mkLJ("f&=?CY"Ra2nDX`O,^8>CCHaCBfu8BW-e&A-@l<HoEf(#p!k%"!=q,;_PKL?Rbs+)V$8+@[fXhV)uOb:ra('!$#J$Xon9dO*@a)<VJ^]md5"UDuS0>hu3Z9S:.N66%bp%U=HP8IU5;3agL7k.uQoa%,p\Rs+"-6^\@4Vgk(_s'oQ*!XBRE>-PEVHj!t.GcKr)0&K+:4^+IFKRD]<^/M<3Bp<OeWeI\&fHmW$e*#`Op>^*iB=>oL";9R-h7%9s)0deC8<<E)UU@lA5>hCM.T.0<OkVc5.qd%XB$,l9BKSQ."D(WnDN7W9hA@I]hG'j<jl1RFV\78dF_CgSBRcg5c.6&^cgaiXY8F%MX?GO%iqLa?,sVQVRcG)m5]IQ!`U+hj0P\MKPgAZdNA3?[sr).)\LV.6?&fm'fu5cK@p_)`e5V[8onm3C?t"'U$Wuq5)UUD,e>Kr%Ts5fg]r3ItL!3p\GpRA?BrVs<KQg,EECO"a9egL@MTWb!aA47SDk;N%Zt9R<QDCUrK,C=)$_W5gA!>Rho^2L04@)uHohC?UbZZY*%8A^Bn01,)4[$iQ;IApE38YV[2A0O8fDP%ET3?']/#Z^0c#bGK*8Za>%9hT+HKLFb2g(]GPqUWrXad,g@`Un>#a2D`gZS1/49Co?C%Q=nAP#\'H@U_IGOaKBu":A0jY+N;6gk3qd;npPGYnCCdh7X[2mC]D'>j%F=jO\tWg4c^15a5K$<.IlGg3HYhql/-^/S)F03<+LNs%b!IMIA7Y:cObeek(e(:M=*i'ei[(+Ja[n0\6"qZ6YDOOh<csE/NPhdGTsha/T-PjH&u1Fb'e,M/&*AG=#K$(*1<NHQ26)XkYZ/n?%#m*d]!"*P"lt<WFH4G&5:jj3^2r"=uAe\qZIkZuaom]/4U5Wj7R=V?$WTru]T%DMm"ho8.XWu.@)kDNO@`oi:J[+LAc9]tQA?UqS%YsNISNIjT%q(<FePPKjF12j>:)YXjF"q,bZQrZ@PBFq![)XmWQ6,`X=$S'21UNAT_@5sgPO!:dfd@&VDN6u#ioKts,,(,M3/l>Ns%]=+F:]ocbGn\lAU$Vu:hGS9d^P8)-K.?0:LM)]B2#Rq'Gb8-Jmo2/6>%ecK5;=ktoK#&c4LdoJ!^V5\U5BEDoVdTqpe>Xi:,=RG0%3$Xk;itV0"#T)5I/&Z32`m8g).<($tpIgDbp+\E(C0O[`1,*eEG9=L<31ZO4$=1_mmbJ[->7qqs4?t6:$EAmnUPu*5=tpMkR`6-`%!j,ME_Y?)oRrEA3<5$QW[4C?e]8V&05bmPeQH:&gq-u9(75Gh'';249Ns@o']h?k]%YQaOrhr9r+p$c/;3QJb^+URk9Y_R]"908c%+/,3r7b1>Z(PnLr`g,8nB(CcTh3nY-ljne;'^`TclR>9U)BfTE"K5iB<lEB8p457AV@,dp/otQ@?n_W&rGK[[ira]f$3PO&6Z3<i%T42s<Q?rsN3)iTj5*Ri\<7VLRDlAJ]"jVuMqSrfVY#S&N*G#$R+5=I7?md\Wjtj!fPpA&m]j6?#&G!6\.b/01]6'/B7ed?ZY)@DM%G>S.jmF#e,1:CNCjI>GIf`HWT!r`FgJ,Z?QBCe_5=`X)30pH?A0MWjmJ-9f44BA.ScrCoR6q("bP03"*W]\LHaOsWd<N:R=U8Er7%&gAJ.]<^Sccs^`X4%"+OqGiX*2Me^pU_,M@Uc;`8ohr/h;R!Kre+oOQ9BS3a;qcuC=!uO:-QaMZHq<.piY3!e%2_<mNhn"c,6hbZ%h\]?f\S.:dR=A+dTcC4Ge%q;J$/lOp$<nE0pCQ(R5<LW@n5k"6lcGhPm-7[kkQ=rT3QGGgZ8F0"mY?H!W#5?<W_=)Viu(1"gI@.u%J0:,r<2mk#m!Kbd#$f@]8gi*.C&=`N%W?q2FDMY*P$2-;.=DbOE_\(d-+=HB1rPi/Go5'ifb)=F.AqXt&QqX"I"P6%'l.\Qbe_fa%p!SeXMmu(:oN;'"G`($H4gtIhMlla:&Gl=qLPOU,J:&BICOeXI_/m28lcoTu!eDQ_!=]$WYUEDSM&ejCC8F!CMUgKj]u6M]+X`fb%60)d_!=r&2-qq5^GS9QWq:"MWB+\e,?NZmObUk;iK)A@s#;GQ(W`6Gd0I]TDI;G#:-<.H?'UH'"`"!iSS#j8#-#uq?$sT2mPbgM!%P3J6[;uUm)F..r>>o'M\F#4"Ge*#dRYC"L?`uKPtkV)8<F4GM>>i+&)Q^-iQ7GFjh*0kM`BODoakVE"8*7M&,p7s[>'i^s,?WK3U%&-GR8"I8Um<RrF8+lO'U/Ll"^&eke;TJf3b/<r8K1iS>Nc4`Ocj?3Bt->^.8FoDG6^DpC@$**!XN:/9a*V#s$K\23sD=7N"TFDp8%dpNQ<22tt#dFj4'a]\jn"kP:<C>ki'MPXGb1*!5X-!JbB>0.%TNFn7Z4&p+J@tG>^1iO0)&nmAllmm6]2lO:sqKD*Ui[d[qCCl6e%@f[Iue-jYa6!jh5G_b509?HQ.8nqnORs^\I04SO_-]"!-3q+j,6]n[EJYUGZ5_J(o>mL<*NS96umPZ2.B>3i-MMl&(6D(H$BINGp%C?<+"YO_YT*IXJeM<JkgYs4DYA.R3r5I/Oudpe/F5:8Ck+4%SC*,6k:.\UD4%6.&mSLAIl@:h0g&P5(Im(0@!d"mRki#RVC(QT3p%Jm9*Mi2\4Jjfb#!KmYJ@fXU`D`X?T!Nq`JAA_pb%nbK*Y!Y]g+h1'.YbW?d)N@Ya=97-R[hUO8+bBU#cj?FMd#(`Q@N:od+18Q^0%&Q8SNTZ\UD9G@S<9%KqMFGZ/G;H@2aa;eP'K_OjRO5XSS$FRMeg+a6lA(<>p#KPHFOA(fU.:n:/$4aZ5V&Yg_OaK9#6L.)&V=TCd%l?EH<9>%.p+q&^Gl_!^C_!OG[q]EYMW$2NH`K6(MWhtU"H_/8QUQ:&tB`n9T86UZ[R=du;6Vn?>EOoFJ:@B?#/IkZl5A2X/<&WmO%jg1oS$\F26`2i8td\j,l$B6ELd!1Uol$-PfSWCQZ%Y8?-a$LhSqI_o8'OD2t;YIeV&F84VOM?fTH(M:u-eMus*#sa-JGj''#Zgt-%9gjd%*3+g_b$h0N7!']PZU;5Qcu[hl79`c^`fs%+lRKLM$<H.kQX%0gKL?5P=/K@Klg4ut1u;`S[(e8\c:<ur"F4[oa$LhSqWBpb%n2W?!aaXFL!i:^Jr5%0W5GoAbBj;a#cX)o'EpaP#:K-u/nsm,)0$((#hmq1=9>*8IZ#dH6qR]"WDHZ3Ml>'Q>'1+Xmf'B/=3Rqtr%`.I-0X@pSAo@3RA(JS=ZH]\Ut^\,os:8i=`[#oh@F5i;MpH8?OA^$#2eAX*.@.'N%fV%;rgmiW@*+VV9CTEhA0WtQj%t$)AEU34(%r\_,]-\;,28>(Fg^oW]dBQ&a]5`I&R]q\tN<?eA-Pa&EVQpU2!/2--&RI<?3>")atG,$=rg'2se00KgnH%WgM'ZM@Il(`cs7+-P!%o=VrVVO/%ETQJi@\R%V(6hY]VQlYdB8NcPB_H"!3PFAbk>r(5D^sjfIT":Lj^WWbP<bgWZ>bL/RBsrRjk>a3[CZ8E7F@Q#HS3?h9%j-_Eg>]uR/5s9oC:[</^@SqJ>8T+KNo%JO%$IF9YlfKAHSKC86O-Kmf@;\PP)oNY7TBmsc+RJP>3o(N%ebh5`DPE+>o6i`#FWJ.:%]&$.:*-V<$?U/BWqQdh7<@Y]T*EnK6G?!mB`]o_c^#lOL4[k!HLau&m0CA>BYk;VCR@&a)p<[m&%]s&D%UHe'@/;74@V>jUqc">Q%GA.Z1;TZrRBX\@+g38+S+4f7[DlopT]t3'<G.t\!N13"!!WnNr)bS[TBpLY&hI@#h@>_(.h/(pK=iXVtXImb?>.8edhB-$L<6m^*%s/2<kNGDM.6iXZKplA`BV`BX8ogKZi<d^g"h?7_Vp?&E`Skj'>DcNr_6$pN<TI/cD2t8HrV>[C;dX$l'lYi[UJ26`m"r>;8^S---%K?"=YI8u!c;;Y(o3,%N`TIHP=&+'j0gWQ:ss,I]rm<U^KI_0WI.]E_a)=;?d%'eLY%ED`7[r3S'[U%VjT9(RiQJ8+d_@p0;1%2RI%CHcn0fD0Tjs5u>B;)5n/N$`>;hBl9a21B?n#?=j2*8B]F&=:\6=ML@([I3`*_a!;#NT:$h'$[9?ZfG%m(mRHESDWePEXm:ID1DT.%=_piH$Vm]g>j5UDDGGM#AMdP@cq6/b2M,b1*GN>6IiX^6A"ICc4#a5EHKfcE]gM&K4)Yt=N?BAt0GW-MK1B_UamSYA2,Ut_1-DAM%^;IEQ1OW9^''mmSI=#bTD54IYFh9*m.F;50ZFn*Rs"5u6S"j!t-6HG!#(icuU3Q=T_ZJ59W==<f9V8L<0]L+@Zr<VIR+f:Ccm]HQ%c[>O/,aP\M*O>Uh(3\_D9=E^LRi.KK.K<75BWNPL&a4*()N?57RJWg4&$$tSXF(<N<hs$f!ZeFJ$";_K<3:neXfY.Ag#2V,aOr$T%r4Wo2I]5b@ZkY%da1(1cRC&Mg,PCc\#%Ea&B5<cU)&\MG;SMQgKK&g?e&'kt`er]e_E<WT[m!8kd)f&#`fF8>@d%sa0cH[,KiC=^%XrLhRj!^5C)`-2[8811jX#orJNO3jKJ_pq'#uq4m=32lijC7RYAO*6RXR7c#HK]56W&reNk,Jlf*+n;GhZmE-e!?!"bs`Z=qh?-m%>@?+1k<f^La_s^gE[q8PJ#7moZ%<*/kk(7-6[YCopDc09;31qmOD,,OQ0THNR2u,6i$>uL[!23)CQ)C\=.j<jQo22lUH$thom(4f%9@)djc"fD-%.LmEDE\P,X$dmu-F&Do]HBaN[Uia[W1s\Oj+eB0XL<`!n&OG$)Kcqk]f[f*IFkSlj[t<15IN*lGim2qE)hk*/1/I5%B_0u=jWs1V<p+3&6g?qWnZ"SukEW#$53PO-\O!2Cl#[$:%>5b:%*R]<6LcJ4<!2hUg3Ac%qH.fbYak(7lQ0_BWr9i3HgKm.S^#&u%GD'0NqI?V9qsUh_-S''39Mk2\)uj".9QFPt9.X"U/1"I.2'#=/lY'6J/T>J:bA$fUE,29Xf]Sg_-B5DHktn^%7nZ_?UeD`L>N%j%%QrX:l']8MaTiAMj1>^+"40J8mH(`2[Eb@a*9PE%49%-&,&1PR4*a9s#'tm>l$1;YnT/Oj12KM9C_S^uZ^o*/9+l.=H;,eP5EX;NA%`&5#B:-Yg5I!(e5O^^)i`6a^VL7a&E5[O/R#12'OqsU0kjicJQ9-f"8W7JG"fd9j_`cC!BT:`Tl^#o;q&j?,T&oI79]R\*^S*r;?%1spjOS4Ve5H@oIB42bUdJ$M$%d!%cF.Gq>q4h'6r,'jX/<QFt%I_T>\@qa\(hH`L3hZ1:=Gh!;X]uDGE9D9dupOBOg]:7_`p-nH!%hTgo2cs>Qf,i*>X4i)::loenBdMVBUl^u)e`B&YA)WCOX^2LHWF5qpU%TBdqg()8?ri561D'fPR5f=7K\?2d?99\LN)#M"Z@k&_Z%5<MLY&QWa%Ni_5orR/:DNi&=B2!$<+H^`3)3aJ%o?-]3U\*1lY.dlB^i5:?FQ1C/V\.rLNR5i"T^4d3]5Y#M*jeU#*5nmY0+h1g8%`h':P)b;:@S..$eF7ofU^"ft]V)rplm5Gf=-B4.k<<FTW97c]@6n%A?q7t/L$<t&7QVXct\RMlTOe'`G!*343T"rEO2=Z67TqS3L%e]+)nUPa7ZqM*sKV8!GZl1Q9k\/09X,r`u\+Fi*O>Wu^-s"p@N'2@"_P6cHrPfUH%=-[eHK@%hiGS&PcE?F"?\NiZlD.nLC`:)TX%<+MI@)M1Ne#p%/3Rp5YMXnPIcfX82@RQNWfN'b69FO:-[p!$N-nLk>)R;KH:8):H3MD1Im*B3-;D3Wcbqp3Q=+32B1pVJ65`ip<+%`,#o@mI,d`2TM&#IGFRj]3-K8Gc#eqX]ig']4'3)Pk'Xil9&;k)H4&>l&n)DP,f5O0u1YsnI2:7WB#a4inBT^4/A08A*U8Tq,1t"%]`E3JAUn&<>d?KR*n(Nj)M!(gj-WFY/A?V=@)1DHc*_+XXK)q)D<I4&7O7(%XJjkH]A1iIRiu:P)_N25#7_b3NENBMdP52&W'V5*%cE<9S*co(Q`*mDLpD(_LRDu.1\<,2Vq]1m!"Ggj$:CLk@:sN+ZPrd3NgWNK9;$:2Bo]+Ae7D8`#s!!j@%Fj?C3gc+2enTGkqp\;[%JiqM'hf,S0hN,RCfjl^8f1RKF/.$f2HuYBLb%+q"nF`L$F`EC"`7]EplS_Gb't@cEN(u*Z@K+;W*.+ec/O"(@qBf*ZWZmq-,%,i"%3RE?!kJ&#8=$6s\jhfg=kQV^^q2-q3Bm$qMMIBIrXD,R/UupYqId#B!7nSL55lHO78g%Iq'O'ft-CM-k[ccFc@tL4dISd5='=H/!%43G1Co60?1+)G;N^"^p&TTM@(3Is2+aHge?"gmC]Xgscml][T'M;agpM#qKcjW<0[CW`S*>GLq[,9^`=`J`jMaBVk`<BHQp_?9(O%Ig's5-ViV2f1/P(-l&l;ERm+nhW*%+.#l<f)r%O\MB'2,/h+>2<9_o'i6f]oe&phfl;j1.^A!BN(8U:MRqm;>URTfgrlUY'YLX./%/b:DhaEVqXiZX@&!T6"<UpT3$d$jPBn2qBJGP'P?Q`Pd$SF51!b1&elSlFCJp*a/1X$eq%"lN'E9smdo3d*>SeZ\af8f=;N.:ldG%%k],D*Oc+\jZJ_U3t.A9cf<re5f7YWs#-3m4)"%p^X!?n-?U21_%)04.EdZ6062KL+g_\s9"'bf,#]XECQA-Pls(Z8"%^Cu;kQDt%:KddBH^;!,FLs:)isSJ7d:cN#4-/IEcP;1FaInVdJ#-DP3h?]FN>5,e)UF01j&]D@2?`3)V=I;rRA%IJ\Y$]WI[GK\Jt;dB3PXd>%@&;+I_QNYD7Un_icmM_M+ck.SrTSC!+"hGh%>Tl.p>q&Vh0Q"!.[N,*:]a6TACT_gm/G@PS>WWn29"$sg4T6f5WLAP3it"\9k-JF%Krns3%^'q4_]r+GQnRSuZWsnH+#$N2k&c0@mS:A:h4(jW2*1QHYMj,ujWkK4YrkEPQ\cq\<"6CWP#UV<>G3f*jd2ooOcX"hCi"Ae%cHA1.jDb&t-o39%B*e=*1@EX46QGl:*j<L=KGA%W5Jqt?dRE^)2r.#1f[^2dOrZcBD9]@rehGJcO1'cd$%$dQBUYSgBlBKfK5BS;%V;r>o/`TQjGl*cHPO/%0;7XkpD&M"TQ^/dI41\N(1F1JpcaWg`$enkDkQ-_\BFS<H=d+&RXS'PY]#r=mkVglYPi6'8mFPESagYP\%@R&B1jl/A>c]VdfU:ak*X.PTmS7K-[dMQ3^.tX8LE[T,Zlf/]7fjB;+R&cX]$$Vl;lek#^TMHuqOu93]piGF,s+s7YA*;"sa$QQM%44V1prCD]fr0<-@c4qD@AAA0"#OkBTcIqt)]>[n1jj1tC3S&EIa*ADio[qc&U^B>^Y;PC4%WpqnKQKYF"Vuj?cN3%<dookl8)`<I%SqN)`6=HE=L,=Z_M78I3P1EM._KDr1SJZr_\;_!F#mQMO/$h9_9m%iDV/*&;)D8a"[I0E-VnIC#8lY&9;u_:CU0>ZK"k"oOPWj%t%!q(RiA\2^P(j2VB08&;3pNH%kD:kGM!^;0=MnS66>*HIon)NV>o\_!`,K?-6"V1)a/:%.WLs?IA=bgFXIi9].H"KOVWf2:c?e$nU%%@TLfD)AeM3p!$u(l)0dV[X=F?1-UE#j?)]AN$X062<JF)sML("U2HHFe0'M1/5H@`c:p:p:5Gf+#7I'Pe!7Br8;qfkgSrETi'P3%2PJgX:fEQ*MT-[NQC9\SeH9<J3N0*cH>/I9AlgU"MFp9tG`N[m+FTMP"gkQY/%U2GZFBYWn&0M40]Y98Y"fB?;tg+@r<,c)["g!]%M:?WUKu"5gf?"@?UW%XRLXiW"LUN;`l+(22[B2M"lJ$^A,06m1)EbV(hLfXR^2@r]_J5f?h%LZ:?OMuhl3H(S?j8i^[IGcK`%egh%7SLG!8WLj%T=TYn^(fFS$\sl6l7o1,pcLJOmEl.5#EH='duKC<SChY!G@,+:o=!MFD`,.o2]kE)L4Qe(lWQq3%/X@(XiM^@)S-i.%XgGFRkE"1&(q4c!bi/BZM/@(tSaWJnckh=qG7APPd&M8-DYPj]b_,@<a0B4t["1++=QgO+[IT@"Vml(N3,Ru,Mu'm=C,"`"Rh$Fn%qS'qWK-2soB9Db\h_goW@d\*.FqX]SFeQ"RMF9!JG='hrQlk@68I(gbXlc39h]/A=]R:kcr8Z34Bpb6nV06CVkJUu5cTBCCREsXa%Dsd1lQfjjaOYFOgRDGp=L9\BpC)GIT^n#*3CA%D'fe`4pO7@L"EpG^KN;`29MM^YPnm3B/-+V4@ol/r=.O#@S!iKauj&erV'@8n2%gG7Xq[5ndi]atnWcFrh*)hu3OK&ji1FHZO_GA35;nIJ.fg%.1&,hKq/1TkN$^K3Mp0KCih6ef-%)Mi7_+^pC_FrCpYh^J;0qBEV7%I#Q,/CkD`"pm;;13^q6GY`uQZ0#W`*c,,dW[6!:V)]c?sjmcp^N0!on55*=tgcsh/s,<$;1VW4JnZdS`a8QsKqe(<CTCK19`g?W[%55*<Ih`p/ErYZgTB70'<nR_`ZO8Ujup<WN>J&]P.)'A`gI+^aEA,hLKrA21STCK19`lJ&r?hVfjh`p.<s,8W.B>!]*nZdR-#NjZ'%j3.E>+8]\um%<fZs,<$;1HtNYpp,Cha8Qquqe(<05N?8RN0!on^?hK^Z%'d6rY]):chQ-Wj(&+J0DfC0m%<gQJ&[iR1HtNYpt.gk%bPiA$qe(<CTCHLmN0!on55*=tZ@Bm7rYZgTB7/Asj(&+JO8\Z15-OirEmnGTWUS"=f'Xfs;rK@i41>*Q[&Q,N7=ut-bMO.eUf:>Q%-t\S!8Q"g:2`VN2g+juYIUUEJ'C3PA2PK4NUJR?tYJ%/q]8V-K36n:>cQomH0("h?DV2WDhd0K)D.Y784']!QU()8VBr<j%gdX[n%eN*VT^Eu_?_thr3+*$1Cg@\P+(geF6C_Fd7mkurJVu*F5Z4j78USegKVIIXeV*0u9@ei'FZRUQK5>[DO?]Z>Z\mUD+K@Ia,:`u5d%kl!?uf\:cH0K*8oY>Z.)2R'si-oUA:h0Uu2fP*,4H3bHYj6$6/<s\[kLg_7N6eEcP9PJX&Yk+RPZlocbDo`>s?8.);ZYJ\5]93^`%cRZoQZ3YV;'Z0:m2%=`C2^',-'Yl&Th[R=tO'a873M*,*fa<OF]4!?,"2'WA'tI(Ng'cqB\WcSRfR!*K/Sn.,bip,7;<ro0BDTA^%`R.3)_/F<84?R-HmNLmq]A1pPYYN,8k3g#@:SbrqAQL_Wr)d$50M78k$&qBf8#hd6e,!X5<&4URZsYIpMGi:R)CS:Mg'B'b..mc.%]mIR0UB\7sW-SAQ2>$r,<N2%in_dQIhsqV)$;]u/LB5r#dkk\Y>C-lUX.3#4>Yo)p&]P^IAOWIlAGGS)?lF%R11q,;ksRhX_$X%A%H:-9]h(])0\PjJq)o\UQ3d!K(HNU%b2V&F.Uf3kY(kna\O;Tn=dHH8?`Rr!@N+SmR-6-g[22]2"5N67VDMgdT]*+V&\(,^,TeeV!%d>o`IA@l96@sc&1J^&Z3<h1V-(XI==C_:(1\[:6[9HA>hXRBH\c4fF&g'(2gm1*j+XW)J1m!SLPeo#CcH*uCNN9g0qZ!0FrM&$4'%_\VU/=t.kF1TYH=$X5^_](QS;f?Sh+a*A];?nnt&_U`_tK'@*7(Ce15W>]LI2NDFqG#\+R-UmaUDd"-^""cGL*GN9\o[!64@olj3%s'5:6YgYhO43!_e4Z-0fDBb%o/H>LcIe_6ck=gi@5OWR8eNDJaLC*s`dsoY%LVO4@57I@B;2a;tN'_.91$<+^*[UY,S5V?N[<.un%[fA>qZjD_@3PRIi_4ESZFPZDP9?.U2&-3SaiEOXC@I)@Q"iB0$nKs<ZZpn2LJhZ%:YaU#mjV^KNf@,coW5m;F)S(n]LiW:)I9G2l%>KIi+@UX/5=65:0:mus+*r[UOO<+3Hg6QF1e8\O39kU;SULh^mJnnp%cGra0@>6f*GU[0ic`j9qjk2Z*otf3cr+JVBB,*gl+3V'N%!a:=XhVg)$(hjd3@Xt"$ZS8?E;Mi.rMLfdASn?B/(sb8`_hh<n0JR,BD"oO\lYOsX%(hR<3q?<[QobCImu6A+A)DL3pYlVin6-2=%T^PC,F5tCclep;Eb""1M&N;;uHI1hb\*H]"'+`TFm^UpBkKEV8Gqo8Y_U3T4l`_;Bd0_K9\p'6F7g[pqi*]<NpE&\n^/HeAie?W.%0A[Xir(=&ir]k[fpQ+Jg)'0C>T^/iBNi&Isd:p.P$-^'rk^7&+Lc*56e]PChRL6H.H:XpF4t=Nk3,_g(0D[a@;dJ?E#&j#P#pKiG%LlNWnZ[qd^I_T@CD5TOgL@_G\T58mLU6Lub>2Y[iG\sj&[c59KiC&'2**Rsu3K*OH_u:k`V$CKL,OX6Xf->Yp:F]9pG:HNCG:M&F%ku=O6Xjm_pg,l'=@>hH:Cs8'K2ep'*RAdW7V)$SKUG="lHDNCIoV=79qgP@seT@]Eeb#Xm;9[ukAZG8qAYQWNS]\=DXU2k.b-\CT%=i-`P<5Y9L<;i$'KE1b3b#J>)b!aXE4-^*U`TrCZh4;]A;#6a*KR3'Ob&egd.[,N&DcETfD;/3?pgtk[p14r?mo1Y%G5'6PXnk@q%U("i&b#J>'b!`jKWD#2)WD)sMS]X?+Pq/-!VE:'Bjp.0.Z$iH(WU/kEAU7,$23B?:RtdKaAJ.b>L1(1+Q%VW3YH]V<Li5(U?lB=c%d>a?pA.f3uDE[,jTApg+YfDI:e@^$s)ff9JB'51]\Y#aIMNd`2qZs8tE<K8G)$bV),;cFubif=md7,/K@IeMO":AMh-8U;eC>4@L%m)Bj;'/p[b<"ZXh$8N/<BZD0)0MM],C'>K4?+7COWCM?n4JHp`K]Ya>\upfR4#t(MIIe]][mimr6XXI&-k-!tFY/7^2nQFi+YYZ`%dM>F\-d_FSR!d'\krK(hf&fM+%P=Y!TZ>mEp/;*F;GT*9cnuBMVQW<V5?,8DfJoQ[dnn)\(RkCkUEIInY&/:If^33-2h!nJamSt'%F,iVDp;Eg[Fng^(+XQPc#hH`=5.)J$0pDKo=F-UgD!2p:]]PS>Q,t((8t(dBa1BK39=I;")D0D/Pe6&YNT5a'Jg+lCe2g'4e9ENf%OBdABbgJ>Lh6(tKG-7IA2G)Uim9i;YfYI`Tl\`,!A#Y[PMNqX2k[tj;BWDV4-fWQcX(?,!j16Bm^XbICOi(rgpLCD(]/B*.N)Au#%gZa/qlZ@WmFLlDPI_%b+a6C='lfl-KqrqFP@rA2kC(/lnpT6SSp\aH*\lU>4bNU&kn([*@e_B>[GIX74>CE+2q7b&:^6ST[Sg*Xt%ds]F6e,>,.:\P6aVu$e&ZZ8^be,9I9Vu-G@^;Va=T&dAPJ&Bj6m<Q:X@,js&,AH3:+31,FSbA<OXq0Z6:UO$c8k>QNPPE?<8DaAb%?Zm!%:!PSHETl7nrR+Whl)&LDnB$`$3qK,/$132UY><O]<kI7N5R]&gg;RR(gE*Vc^Ljl\FMFk>05-M6Z2rFR?Ag^j@<!-s8g5'.%L.X1442R<D?96$X'AX(HW0tBogE#_5S1`u/RkL6r?1XgMaP^HtAjs-=m;;*6R`9=q[<$ue:"Dm2TY3oG6QL,P4Lc?b,Hc[[a#8J%%Lj9Ednu'9k(p)AWF3EPkk.(_Se)JmqrHud%>cd9Xkf4)Q(</?VU1D_?oD>8//iWD"[PA_\C:-D&hdPSAKsF'i,Bc%A$.\8'JA+^:%T;F6'hk40l6nJsTD_i#tC*,$<rt#"%q/!fM)k:C$)mhs!=&@;jm;>ru3UKUBF?f[%^@lTA4s0K$IVJ]pBu\IP?$q7+7HClInRH@D%@6AAn]5.oP@<&gDG>o\&)[,"@olD"c;+Sk+3F/IUHUm7EZu3RL_[P_YrbDDaZ7L&\Tf)9l^FRKITHs?8Kr1@B9ptUUq>dfuJ;Pu'%3sWh89#-Dh7&5aH<h"ZsFD6'LJ2U4Q$iL[,NF"G<o5:@Z)#@0T.T!n05%.9=[W+@m3NG1&P[&&`ZV=KTDFl9)3/k$9]/Er=H-D8g%3j:1KeA/XOf`5qi2P;"UNPYgB17O.9>hNpY2`f[tD,#K\AM.hD)f2\Md)Gh7hJH*,[P&KqZ0b1#c-.VoFeQ2D?$U;:A9\[?S-sOQ%)pjSu#5$i^;0M=rD?IJTgJj^1:2^6In_5I3FsFM&U"R0J:3#%V[X-+]8T*;;Xj6ZbR[_%ac>upR>_m94\G^BW2=EH1B.p?YV*!At%Aag2eY+C!<])gd`DL1OtiJgW[0\ueJPW,6SkA>kFLA,oCgNL%lptD=NG[]@]%Jn`N%>/0!II"=aOC3=p^8\Q^Q2J'$mE'gPV/Pub%TH!o*rGa4#d3CRSS3#n,JHL4;huI[@3'gU]g_H80SF8SMm;Au>nrjBh^"quRI-8@`hs.Y?b&h:6D(R]+RVd."j(J&'qH^Teia0Xo%9o=V(Y;93BEeDK=)[BW9N@G2nK0[Qg^-Eo'G_+$YWlg,BX87BaBs9[rP7bkA]Q>&-d$h-Fec!j[LE@V3PDPL^ISCJf,VD`2AAe9.%jI!]7&i3*hN(PJDchLMbAmO=:C1DW2Ske.LdcspW?Q@/hmjp]=7ol^<qN@E%?@u@hJ\s&u"e'\,3Z$T`eYI(.H-TEP"3i^Bd@0]r%jTq%)A2#E;of77TZQQo"!X7FPJ^-J^JZ<O+V$/p[_@(Jb5n!n-0`utJe3JoHhRJ,%2f^%fK,k5BUB_.;ncQ'l-Q$,TL#rMD.=ul.%4%F7>iD($8LL"&7C(^>iV[:ea&"Xp%Ppf2TgmE[Y&#pc1N@P9V,7Eqd'"eM]\tJJ7jU:@Q2o6]iNA8KjgaIg#^MjDMq,c";.TB_V%K?h6Y#&24!Dp\>q-Or1eAIb_`nsqi*r.@)0Y.Ki%JKF/DhX!NM"MF70JSkTW^AQ8!"M7M:eS8.qTgm(n6jS$K&IQ(s#d;V=GQ/cu%$G%ntobr$(+lJ>QW;aGm$16JcCdL#KSPH-JI,P`jg^&U!%n<8a%n\"lNDm>SgRNbt$?`g.X\],_c79%1&IX.BbX-a,SQa+dhme@Y%c53P75M1[Y)-;-XqW5jQHs,1<D<lY"7eZm)iB=tlHk59Ni1o`8,Jp?fjOXs8;tAck`^eFO8!)%o>PoE$"1j0]!$6,DLSji(cj+ZN%oDq*AI86c2QWTjfmN1`,69X&3JKrsJ]3XHFHKmZOVmj9-r:CHMOIs8[*qN<g>_@K?[qjKSp3hVmk_Es/&*+N$UR*'b57O)TkRZ_i%qn#24=0mHpNMB_QO8!n;s(INb!)VT2!XNlW!NP,H0gNNY&.n%@"U'.)!Ngo+EBkH;('k&S7fq6%f2/,=rImlqn7>X\?m(MZ6j!I.%iBVh^2',<#g]N.CX(t,MRX#DM$G"1[26ZI76&hLP<)BX62(Z7)1G3nU[25fRY)u"%1&'%f]-nQ<<=O$X%Vc@+UP"*Kn/r0aM\!P/%q<_EViK/iX?&<D7c[59pcT>9+&'m<P7dcjl'dC27hT84!H/@TOid$U*_t-X/nBLR-N8hJ4SRgfNk?StK(XG1"ZObAD'dIXgGG(Gg%I6lWPrW:d[A)2!JhUb[bchi+#l$6WC0Knmj9/fA\C6@b+?gTc7l>#3n:.P'J]T^-Un[qBlid$Ua`Uchp?Tml*4Zr14^3Ot[ai;&?%hF"o%hH((:cTBh2=3it=ei1o:C"*[>H`.J$HRKENqZWG%>TTL2FgpU\?VfK?n*BA<kC%froM2Q/\t"tj3TcQ2D73uONYg#'q8,):%]1N?74n$^>?oqh]R!GSACuF:b>X@uNP37+%&cb(n"Fq:@!Pj[gi5d1YZO'kf:HAO7K28.I?3pejn\usW\l/sOY+,R,b*>p+oO&Et%>;*>bX5S?_'f_)Ch2);c2eIV>n["ciYT]37YcrNf%Sq8a($tREbLOMrZ`m"JfE]AG\6WC3*.ob$?g'5k2O6Z"0*Zps0*XZ&OKSk<%ni)1c\JKl_\VJ"ngr&%t/b`]Ca7_4^A%NWVZ+V"PYs&Tq=<@`sX=jd-X:KqJQA<;+JVLu_bJW8!ojR@1qI8s7qCq^?L7?$*[lt4L%>3';ba7_4^e+$o:P:V,>plg%Ar5l\jr5mh*ro>.*rrj<F`!3Y-Np[*9RGAC+s(mgq_%1cHpdq?s)Z2GI_r.HDkKVq_kig:LVtfGm%i)^"f%K:H3%/t?2%=XcDB(.2J0_h9HEZ4l:Tg&tbfH(5]T6rHi8LV=mr*/1V0_j2B(P=s'(P=r_(PA@MF#3TTIi/)&ZjcpABEg[Q%F#3TTHSP;ZHPl\&4Uce:^r,)+a5,Z<)t%V55MQ*Jn>Eb/4MC.Dl+*.Yk?ab:p@<=_bL:Mc:N(T*HJ?WlgKpJCH[0r*jlp>0:QN1O%4nnO>[[3o4?Cma8H$\5gdrR0<O1dZhm,dJC02HM5H$\5ge&u'h?M<s^[[3o$]fa!qjlpV8Ih&i&0@/?opNqDXi"h_)g%I$s%2e),%_7ED7\LpVFn*j"`GF,<6)Oom=WcmS6\1)$I=>c20*dHH6R;MK6XWZ^f?B-h%eEJe'>A+hGjd5FfeUV(cktA9"aL+#VjS.Q).6b:n%HS<k\W-ALEPc_ZOd]MXn<iVN!6MRq"F>`!BJ/+fd9>3h3:kN_RF/:bblEpB!>ir>BI^T#bL?6$t2./'ClFVX*O9Lqt=0Q:5=9=>O%$J#U>RcHL&p46A=g+@i!nJ8?aHAcKiNP@P1O0AC35S!l37o&\V_$0$HiSnm(C:J*<4u^nG]K<C3):DI(7<a.C*hP*,;f^hYDGi)D%a@"/4V)e9rhf-m%B0r`).]X.8kgRF#g'd@8Kma$RQbPl'A8f52ftfH;%b4Id!ej_&Zr?K+]3^>B<cqEP5]ro[O/TDd@0I[Q0p8Y`%RgQl5-,[fjQgkK40(t3cM*`(kMi!83DB=niCN!qBc[LYhO(:RP`4''U]bb&9U#'OW,RDfk:gC0'ha8EHn\.;D_$247J>HNJ%ed#6%#MH/j<K;!`UI?21>U3OMGMJ7m>#0`!XD1ZW(ft/s3fd3;;]O!!.Zt=`qQ-%[)W:?/W8>4>)"b1./1Q0[:p_-JAQ19/0#=j_6X:X:%a.2T]>J_4T8*E+jMu4%*HFB97ErBkYZp@+'^illShoo:Va9;ORO6k=B=4'sjF"<1_HHu4cSI"R[f;fcE_Q4gGJGL)S(7r:aUZ=#7%A9EQOcDOZo*2>@_dF'<]\SJ?X)L1'=:.+4i87L8!]-kcO^NNhg6\TqqlslHJ/$&<b5j6*Gr^?WT_Q%^NW9!:LSa07_8u3?.B=%&7%mTmqC-Ftqq71.K$C].`VO`d.-eOkWO^MBI(3OgetZr1s+d:%#;2@,a)jmobSP6r8n?8DDM%=G@?]aB>A=X\3>gZjHU[uZ%I\DB)0%+oSQqiG2#).ZB*tc](@I8llq?m!OU3X86Z6lLhJdoK./E^5@C&d2Ju[-7T.W77IN/Q&E+\P>Y!6M@GHLN:$n)Ze7#L.4X64/bIbf%4M\?g?1W;Qc=6p6ZkhV8b3VIG[e/n2Q+9ZrF\4<)DC*h#2[ZVlHF_<]f*01g.Ha0&J,P>g*qLo(,+r/_R"[[h"HWtBgRES]ihE,N%@2j6S3_dB9[dL^VO?^b0pGo3EO7+km@?42mLXg)tNG>X-Y&TEX.&YZ'XjJuKchl"GUUT@4La*"]rD3,AZA<5M^5hk$#0(o'r13Gf%E9=m(:u+=Z$$bN.niinTi'\l\UXhIb@en9X[S"!Clts_qT<n"X_2WH_(GpqgF);]'On\@E6SA(NGB<8Ha4`bO2i"k'HMVkFGE#p4%O#B&Yj_()cdMT-oEg4"&Iu1G1cn"-6XFBloGDuH7PHoBe:;jl0"iO(1hJ-VYJ9n[-kdpQkC#SFqFsrb!Z/7(j3:J$9;0?6edO55*%T8jT#k736aaA:]3@'=158$,XU<[(X$:+`Ak5kJs&g8+oJ0$#G<qj$<sgM]<=_e<`l)mB/;ME(jik1qJ+?q'DY.h'42eR*HLG-Cm:%ldEJ'qY_M<VXg_%bB+_X_=OUi\o.QVF@Nh<I_#@kS<m$@Rhp*doUgd-ZPW/'j3EP?<RjP*A$#@ojo^d8`[D6[^sn\imabH(MVMkO%Xjg/6bDl8pdPgA0CD57OZ],=WE%RNUbe=tg!YMFG?JK3:\M?#j_I_WR_OB0_=V5nBUL$/(nm6-ZZ7A@E)<V)Vroj55?alDp92H_S%V/Hq^.()5?f;7"[:>[^41[gc`IJgff>8N&lhY@L"AZdH+9S>+#maBuJ&bt9<0!95UR1ao)YY;CWlDK\K0pZ-Dh-=i=98%"^L.sb<%:)K0DmJEl?]oU"1qQ\@t3,M[XDAo8m_)(tq/t]aGZkSreT8ilRg.fU*6X7/#2K9Y>a`s+g/F<bqS(eNi?ftRbhCpF@NN^F&+&$M+%n\dOj?I^"&.kRP9<0Z(=4I<.S?-.#X-#.<lob`t]WL;IE`V1^VB'R+JKO`M*h);"3/AM!B2i=K8]/`kc]fjoHC?jpJ#Y'gAOZR%p%Z,)mr3ju@,#&MY_1sHD**Q"m?c"nb=6E`/U=]klUHCEku9/QMXhc29U#N%`UVTT=?S][J1j*)23m<=acq]&kMmENC_DuOU#o?ZgK%5IWTO[_;M"p?!IORt#6mragHJ0ADtGCiB<X^%pjbk23U+s4lK/F*i8BR^P0T[_;LGmENC_DuOU#HerhuhOpY@0G_Z=CBn7:9?iUd%JHr*gEO8N-7&?om*O=]/@@],YL0$X>7TZbnDV[3e^:pE<\OlU"(D8*8?atHi"NZi`9iUe,:t8d&6HnK<YREuAAUs'Ue.,FoW/Y)/%J\_iKK)-pSI#EH_@<`%#+M#4*Y\:4(CgL9sroARom[ltfcu3[U@0K%t3jLY&DsZs3co(2=h5IQs)(p"M<uNY4XOgGg!LL8<2^+N*%Gt97M$<?,>mpJ'MP4"X5X&!LC&+t"a[fmL(]^@N<!c;;`k'#dDCoq^$[On6]RD++[nRt?j?&p@`FB'p8hsQScXg*N'hh>X76miL\%2dh4n0:MMD>$he_;#`/0lF.f#Bl-ha*UBSncht/>3lLueWo%^PGCe-P,Hb4425a'Hr=LrjctS?kMJK>VVEZD3Yj`J45V9n-/6T'p%Y@=etp[^e.V`*:pcAfNV*B.[)qZT[=HE-^)l=Y(m_FhXS^#o.3fN]Le<`k[U$tDi"Hf=bleh)V[lqC%KL2l?Rb(0/;'sa%VgaCg$%#jg/H8TdELr%P8g!oQd$5rU0[\_En%fbtPVB5KrhN8MJ4qX6md;/35J83<^C@Pi@,finQ:V)&:57^/bUfGCJGr0FV,5&uEGg@`n8%%-EJYkW?=o2\qtLh-PP!&l9EhP#M:hY(,1ArA[;ns8Ak2Brfs&8_RW<&%GrYf^WCf'UGAWil/O=al4MU>8ut/H>c&3SRq3jA-0BR%$hW7A$(2V!/")oIC`kWjPls/7FPhL`N_M8&hq9H;0ZpWLPc+'e.SUu`ZIY'sOD^*YO0j,cfjm+K_k*OYTl1?u!,kWoW@F+G)Rh@F%THW&7)]E'$gHC3XQq[o-NX`\8CTTR,AEHA_1VP!as4[.r+V,0IEE_L+.iCF4GrUl<Za>bp<';K=^nuuDgo]8Nc)7;lZH?@#3I#Eo%q(2Dp>7V>)93J$Uop7Q\9HYuqj1(M]$KHJ;SN5i+eZoH<e8:]*`tKKU3SQEU5Vg[7HV28X'4'B<b9Ci0Fh09qqJN.r7nXWXRUMrB%h<$)nF6Xa>H(7<&Xf0I.;_LIng!!jo+>R<Rb[=-mrIl[W2DNF)q^'M^JXsja'W-/-ANh:tA%C");mRdE`4*q`#lb$Ka3G3dhUjh.%^*i*2g$TA\4/E([Q$oFmFk't]aYq0_#^un*EIBP--Q!9h"Vf-AV8KNeU!p5q_;2=kBfGBE,eFug&M_2[Z!c3S9FPjS]3FIl$Gis=%Y8RiHq+:1Uf4!=(UIN-Bn6su0m1.#tJCB5`5Q;"\LAe/$[EC14>FC4/qH=<:c=qDgO%QPdXCRQ-Y0_F34q1nU$bqJCEWh:J=JQRI%"grF#09s@4N=9R#iK^`F2q*5Sqt>FCr=Vi[qrJQ.YBa!>MEk3Bg,)B29Y&-c@+%4CM2dC]iF7*sh]cN9C&KN-4$54_"BBce?B5!K%J*B)=(DQpM(/O*K8aE%BRQg,Dp&NB@mB7"::Yijf$R9q9<?[:l8h(n7LDlfZhQXq8htH7CLU99_/5kPo"A8[9n0ll(\V-i%J:>#P%1gusGcS(\\Oj19eDS&"q&RD_M=cEjMC4QZQhus5m0M&eo+o7A-j\Oe_"CmmS1Gk(g:j>QT&R$k)1G[!P,\15XW+s<R&=0si!q_KX%.]g[=7J%BAeX?cE@OM)*+SFs-51H[d1afq-"'7bVn]P`]0)#OL<E3E0q%8/$/_/>U"-I&._IF"!R7iHBkeWQ$]ZWA>Wlr?u^YkBh%luZ]Ag!""^4%$l[Os?iMPq*@kh3Stm[lCd_:O&;J=hXrW`,=FCVFM=9D<hsNY5o8dD@X/[K2#Tq_!_>H,`*\:=C,[6q$%^W&_k#6%/+8hA>fS<<^_8H!`:XCV(FaKULU+u*6I5B%2-I'tre@5Zk)*2mA";t"g`rK,J<WX3M"G#gJ=0JU"+T;`BJoThlJ]^2_)>203bTQ8%%!1;88KWP<s1\Ns2@e_;V&bm+C;SO=+g$]ai$7(IE&UFD?qWg;?Ce*n[cI=IAraYm=nfYBIGuj6a=lU0(TTp9R4ooQHqZIQIeeGN%?<3HYRC'I(k>1c96ODAfQ78"P7.'5FmHBD36MGQc:BN#]o5M0n`X".YZ_8=rc%itMg=",Vf'ASs\t-eS7`_dRF:3OEr*1_"R[e!F%IoS@a!d+]Fqp.l%qbUAs=Tt3q[')[bfOGRV,!ssp`NcMB8@6oJ4,ZC(rj$8Z3Xj+U$]+aiP@hQdp?&k%EAi`=,!UrO<t,JBO^f+*%I6nZ%B$nU!k`sf(W4'Eg@5@4^[@B:paj8qi\GS>%b*5RMedRM,],t/jjue6)B']8gfAoTQgufG>S-`>]9HD]bBU1HFrR*jE5jgSt%mDnpXSoMIXI.sgW[,bFb^\:5of1!rcAZV)[9ZtmhM9V.9LljF;7C<<gBG(tpH$.OtRaDckNHiQ@-WkUC9XNDG%Uf5Y4[RagQ^u9+%^?2Ih&AItZm&0ae2HVR6O)B<jo.".;.DpJ.hGeI1-$8B9;<+s<8KqCrR\XX7=%[r.(:%U[@BVW'.L1_c\>$jPPl)ZfESF.7<=1fa%6Pj%N=.o_hd;0Mi9iuF]l0k"5\0*i,!CLp`GLZ1gglIu-c_\`C)k-A/9B1Y+#R_E\+DUh:A0`B%k-?4@WuGNFNC-i(pqi#r<WgUe%GlgAF?Wh/q?DF`l'usS,F\?L!&<thZ)P.^@9`7'$Q4(dg_4Z$)^p6';9<#EA9Q(nc+Wp=%8?--LK)>rm#D;bK1Ialnca6uV,Ki$#%Vb#o)IDjXRp1"Ol`io%`A/H$"(:c*O\ArFRc*scBLY`0ZG4N4))EEtpCh7\?mqaIb<HE8!^B_j@<HD8:R_J,WF22/n,d3Ul7nE36%\`kbU_47FE!eX^+GiBZHiM0f+:6b":ia]Z,<fco(!kq:7S:)I,Au&O(mC[fQQN.QIAqqQh<D)1Ko.nQI+IY)"O<R,5;C/4Zn3V,G%(WeCYJqaY+jLY-u+9(VEGLeWE,A9b"PJ!<j%qQC:^Jr6*qTGr"JsNb&35<OMj/=]c--E5BnGFJIiN+epM,<Pu@g-fE.01l(`&t<i%lU7f5@!A8[b%ouNq"CO[/LJj=07>>,-GBYaL;O_A*@S=73jj'g@#Q4keOZHOoL_*?lu4,aQYQVWW^@^VI:dIG07u($@BqAml!@%i%"QpSH%342^m,teF05lBe@Os[61T0g,(Y6?,C@t+"rFt/^MS4LNnXChi%9`=P^(H4?_RHQLE?p6V3p't^qSp2tKl;^>Kq$W+)4%q*%NVV>qE#"Ji7(Z/E99^`Jbo;9D>]s<@AdN]%5V74:GC&h+2fiIS06`oBNb$[X#"bqd43bT_E/a5Agqq2Y/8t#j`,=7rE%O]@P[uPq%c0P[*dC&I9l;?`q-5Oj0_HEfF`.Pd)*pnc')iq[@.&cVeX>)hH2H,ZiI+\VMA>\_YgN`)LS(:b2j0=@RPp/pqN7<`:A6!EOmNApp%\A]fHe0*C:@Pt.TfY\iEAI2>rZ0,`7bZ//Oa,,YI4sK8ZRb5hmSJ1N"ZO%#)3SgVHVu(XHdsJ]7;G?r^?.B%8dR`VG5$bXr(lhqV%mm&_t3e*GIA_6A:J@]S<RU4_SdAcCi2TMj]Hb+%V)buI]r!ra4*##mU0hN-Kh28hA[l/M/jn.I7bYLC\\"BnB;p/df-G-Xj046uI%!CLYXpSli(oro$J'bW8I>\n'F+8FYj9[mC]7Oq,KK-@$rEnk]m^+d%4m]G4T6-M=jZ41g0AXeD.0P;mc[;C_)O(q^Qlp>mMZRpo+%R&@1<*L=#HPg4-e3mY;l;55N#UjT"_GYfjG9id?omerR&a]Kf0aXm/)Zt^u8`7ObNbCi!ZM5[G3^/%jo%*%bpVnN9Rb!Z*aECN0$%iMXsMo+CRQ3EK*\AQ?hTY]qp%hfG@)`rtNc!%tBU%_j.1)>WtP@#qhX^Ct\;PdUXbV\5cJMU0h!5gl^P,gdE,V?n71.]!D1-`#uT%)T(D_a?n;'HM<80.<P9d>_W9!$%;D`BtMIH\XWr+LJ]-b[*@/J$==#E_9;nk%nh<F/AlR7^<<W0"DOVYlk3`W[4-gS_@ILcZd,`:%>m0r4Cg)sVEc?)a*"fo:&ka(]=*Qk!c[Mk\e&1"nKb/Y.eJ]7K>VKQ#c[.,Y,36j.;[dp2CtO*A:iOe*T&q\hLoJ<c!W^I5b7#T/%E(SUmFs_bTDocEK@*%MQ]8;Y`j=V6q"3gg5Y&1LhB7Qs@h216C/Vka+"AH/:J93U9R/BsS?>8PNL%j*H078cZNp[=7Jc)L(?[P7#%lV`B9IblX,J[@)k\4@!0bPK)*\a3sloMqDbbAt<.(suop.:3IWR6L`$KJ+\4\F##u002,<NfeE:)T0"+(eMV8<BJhgfaD;RHk/j)%U-pTM<%jWZT!.emTM8d+U)0A]IC\XK33f?+Pq/f1DjV"bWUqGhjLfZB?0TWf.;W4[<tO_]bc.#h`?H,qSL/U//SimCe1+QeeT,i$%hLu66<=EVc(\<_^ZdS5s;7at*Ao8D#5^"YTnr0f)MCEnb+!&Md^Z<rSaIM(BiQT,K(B'_*?$O#.dlaUfD=G+Ac8r^.]=V6=(Vf[L%"00;Vat*VcKJ%)cb8`93p5X<>[<+%RLQD6C1n+kEnW3,ZfETD'QVr.QjU-h4h?@C9(E3u7F.7B!")[9`o=/28\gO%_>j/&"*c6.a%nKH0:Tp!?J"TN)R*cnh`nfQ9S_#r81Ik:?;Z9%%bVnfVqN)LG:oIVnsgV$Oe(#-B"BPt8'VpOLBnP5bihX6paA+ra7?b:W^d"-'.%:6d3Z?#l4=[5Hj+*/j/(`AbahYe:7u'J3H`jFM4V6HPLiqPK-K!Ln#-34XtCV?3L+WIUpcW]:$:q52;_3i@kA^R0'Ln)c-Oc7+.2%>Q*iWih.p\.1B*XU+:=nDr)q]"rH_B3nLLjWHt,l.BJHH4,$.IX*6$9m[X\eol[QdVoh!3;oMnpgcIq`;:i]6O&D'tMgGf+FLfdC%mO8>ah8Y+pMXd=X56^4tnPDrfdFCETk+@7=\GE*q5Q"Gkm/Eu1mJa)+LREW!iU"`m1$YCJp8X^+pul1#QIu?>'Ge1>.LobYdsSt,%LZ98Cji'6ZVK]&!dlW8kZ$N=PbuaA`JuElC@-X<"3%Wo8LkjeJKi%L.SRTZQnP3Len(t%l2t%GTGoJVeVp;PQ]i0&O5^Pfl`9+nI%Z=p`8R!)o+kmhA`GgF1aX/=90Y[:8UT`R;/ZL8eocVM!-ZI+"5/HeR4Wu\=L%NK&`ac>1."0^1WW.F:R4cNVJ*\a\sY;lqAaB[N4%gK`V31heIEZiHWp7kI;o$&=eJrlgoc$&9p?*E-F\ZF3L9:5)R<"-O%n>!7l"/o'oQN.Wcq+M5d]_Jcf7luoVp.obgjDIq]=n>^D^%VB>/0)A[&,=,rY-o+TIf-9.qSn_).i%L^!d$0t%G]i!SRVBa#&$Lb)PMYY)r>&U1qAQCJ8*kSmeAXQS&l<UBp9^,-F2nFN?du76I%ebdZp6L,U20Ctcs=*`hM[MHB2EU2@<)T'U@J]CQ3;W<\fm'cdoiJgY'UD_nthqLjBBN>WJ`A7pJ;*im&Xi8dM[ZB97UPt]C5H1?j%3_Y^&G0cTKb&2#XToH@pmco5<Xfa`.C'Ff/X1H2s[&Ek(2QJ6@+%0!'+H"kX;:IdcU3;?eG)2md5np_4'X^:B[8RdI6PQpq'X\IG%W#_V2*MTJQU8[IRW#_V2I1Sj7&4Pst7I:dXm1;_R&4Pu=-u+McC:bm/V^Q;X-p!]LM5#0NU3;?eG)2md5np_4'X_3\[1B"1*MTJQ%U8WJO7I:XTm1;_R'LhC'7;Wi0m1;_RK.(Ji-u-@BC*,i@gI4uo78Z-8;*.0C4%)q-78Z-7;*.0C4%)q-6r?$6dBRLg;04ngQ7^ma%^s#?u*Hi7n"6qMOX-,'g5(*GXA@0$tcS7#7n/MumN!NOL\4!i*'4SoUYZoRD_@,1??4&?6M[M^r)JVKMp"sh<PhG=33>[p2G;<4-%.4FZLR^9&ti(oLT?,l%e+4m%[`a0#Nr#SLVjGUA3T5?HNPf)UWN^2q#I#:c.LlZ,_FMu(f9Yug76ETgcE'C+S*S*d-(VjSbN`3l*%#eXm\&f.5Vc^eJi?,4bE[Ys:,fPQWpBrqa37,LTS8#2cmZI`p?$#s=lN9D3u(kH/KEPm#:IE.>Wj!`eSgi5Bp,OW)h^U$"q>"a<W%cU4tgV+\nd$IenoH,H*rBJ"./?(Pi2epY)$`]4dK9?%MK3F(-d^9*mqSW.R7YKB=,k]b2;oq'J[edp3dC8t0Yo3ufuiVTKZ;F^aY%G:+M&.Nig4:J=8Agdu-*4O<1D]Tpc_G]R'q3I(5-?8sPq$91$)GB9SPE#H[E:S;.GmA`0&G,JhuY/9l]VsE_!VsE_!S*TGjS*TI`%VsE`l]BeiQ2V6]I:=n6AmB3q]>$Z'mFh6GtZ+8`ZZ+Jk!jD_fg@s>WBI<WB\I<WB\I<WB\@s>WBj)huj@s>WF[9(s!5&PSX@/s?[%)[:#!]fkV%]fgX^]fgXb]fkJ!]ffqJ]ffqN]`l>[DZQoQ:0-!$P7Q:"4V$'_T[i^YO3R?P;;,;o0=JFJSniP`4kJqEj&dq:[s'A^%f@uK!f@uL5f@s5IfA!jRbk:ZnoPhK,fC!t&B.g?rG9Br<)b+FZ]l?00lOCYtHGeUp?#NNq?#SBXX6XUgeFaS2FhKqLF1jk%m&mfF%n#j,In#j,ISZ]FLD6CA2g0JX[fPY`u5')Q-2KO]jN#=iUgN/4CG30E#D9jMSOYrKhBj32e">lIdTp\Of+i^tg`g.9Kc^q[8o*o=b%dJOLSh7_taSYLkG$Zs]@_HZE<6ilm1O7:n"fTAhV]i27Cs"e,5IJ4fA$`;aW@5h_?,OHq5(`C]e1ZsQ^L'`Yb"Jejbm]a/*B?JQt%<W*9\4K,!e3I"A2hAb7Ro%)_m0BrNgJG[DbnGSdL"m<E3F5uZ%nL]P+#K..O!LokMS\@<tbrSo2%.oXb[XGe33.r^j'T_tjLG0Ig%a_-:U4NVF^mfmZ-Z,_BJb0GHifs.Tb'tD0l.VHUM58(d2^^QOU"tXg"27_W\/rsm%^G.JS=7(Zg&C.*eQJFM67tBu`,JEQ&,Q6:/%8,@W\NkF#13:\7ti^gi1`0&pM`0&pM`0&p%`/tkj&k@JRM'ED&U$$r?iWtW'EMU'"E?r2p-B@#"f#//ZJc)L(,JB_+,;6JPNqBS(%NkEH)37>j=37>j=33jZq=qEA^*5S2s`">+L9-!2+:E8VI:E4YB,B3i.]I&[2B1j6/c^?c@mlbZDP7eO!\lD6mi^e!#i^e!7iWuDp%gUHpF37=ETETG*I`0(&cM'MK0mYN/AZmC`?Ph*d8hTs-&hRCE8!,LRb5j%G,/TIT\/TCoSh\/LdCeGba[&o00rAbN]qL']N?u%BO%,JEK$,JBY),JEN%,;6>KNW`n\hRY(pi(e(I#aWK%37?QQ37?QM3._[o&kDf3-][hG9cS^,>SBW3gt0IVbeTZ,Ef/kE3&9@(fM/hh%98J/ZPe0t9r><P$=L96iJnRB)J@Ph<`YedpnX-6!+Ge.qB_)`ob3e+g]-*1/%%o!j=R*09isX'6=K-M3C$Vo^?H`nio;_Ak-PT3r%TLdT05KKOJE#V9Ee::H#XoV@7"a+NW>I-'e2M[s9T_O2b@@<Jl9FHUn)49]YEXkh:4`=h/FXc!&=&789,D5,RGJmg`NlA7Yi1_r3%Ca0%+oX0WO9`AS!a%5W[n?s/7S"l(hK`;%_PqeHVJ.]+?!:O7-=B[iF9Xf%PMXC0:>?h#lUP;`_h,YBe-cM1pMqm13S7*#RC\CIG%7-5^@!Qe>X&[L2k:IE8Gk=fN;d?n>nG2>2;C>bDjmaL,*E:`i,g0FXAH8_B[ONm##B_2'jaPD:W<0)48S%?;N,L&.g?VEWHnb(GW%*^A,en`af#pE.cIrdW67VuQe)F8#Y7TIg3FkQh4%#NS#P!,)`A!8=1J^pYp^]$_W)LenrEZpt2Wh0cBr*Xde-k0oprBE18=%gR&=%Q?WC"D(1YW@loStk7m]&D3#!N=LJtZi,eXk!5L0;^mABf!r0,I0E?'M$io!J!tbmXT(h/.]USc:j&=c^*oB`+m-u%E'd(3@4n\lb%&-2u]M\3n4pE0K+HA`C9g;3u_O$-6g);,&pS>8#?!9a\'!8M#eK[sNsKYe#PHak3Tc0+CV!s\;_I/`RtA.ZN+Pu\k<eST<e]W/9/%@=pNQIU1V/#9VOd<a(pVR5,Dj:fE*,H[F0H^a!V?V7`^cUm1Sc&O8kG84"os=N0FT;b$iT\KenujH4Wdp?[nIH2:&721GaQ4(R't%1IqMJ.3q0e*"kM,&d^aCb9?toV3,/=p,isq>9\n4pQA+bC"ZEV!,f=mKU-/3J9Wuo`'T1@\Sf-ng`/gN$*Z"VKO_6`PQ3ab8eR&>%@o<Vp26-kTEhnsG<\,nL,ojTUYlphGA<m5N;G.",\Kt[cgijPgcS"0PQh1pIJ'BY*HgD%cI,?g!KO;-_R.0/1*#"@[P%;FL>d@$_%gfp5(bfZ)]''IR%gGgr_\5CjW'1-K;8VAo)(Eq$]M>,G?PB0ak]eQ[r?8[=@YSog0=9Z'sX9(Ft<YHDXlV_093QaD7WmudVcb4-P%ja>X]-F0XhKr_k,X^&gc\'e8AHgN;e[<Rt?Z<".13m(P"X\8UBOKF$jV/]P?!o-CM'3fFFO.0Eb-K7Iq!Ljh)?pm-"=9Ic0XPqd;%QJ&NG[2Pq=,8bm#o3'9U_>-F\64:d"q>&O7jn[E$jZ/d:4F<E\I",hYnq)4\(A@H/)n"aM#38^cHUJq%&s<K=`8hRm>q\Kh+Bqed%ck2R>ACt2IngW`b0HVI%$3AT%4R]\tk5!4a36ueQU\"D62*B1qh;e)HN\s)J6!GT+(u2HA9>:/_/bqTB[lg;:[ld1\QKN)BnpK`\%nsh::T"Tme3$Yk64iUtBee;8_omkV44\'@Mf)se0p40T-4eO$10;H.tlnQ(u5F:0NL+X>3]q`bl[WFMfUskdIO$4c^!4U<<5C&+A%-hcec_0Z[A'"sVDNo>=/Hi0JIq<70sKsS73H-Y8!cPaW]TQbU*p@^-7rm9OKha`;8&;b3D?Ej'_(,%>NL@R'2>:fflE,QYb,&$QM%"5Fm4J2U3m$E5O8K(HcU5,?(dd+t8parP%B61h;Yi5B3(_^Jj;,Z^^i3&VtBbpAlP4+4u&bp:og`^X4H_F]'aXs^f6R+^a@:?:hJ%*5`(5BD2g)0FUK4IDZX*UJuF*E8o+YpMduQh#5+j2[=>sdC]lQ5$c)5b@C2W-O)9UK/@=lG;!q[j3k=Fe@#11;]_j33.c3F^i[#q%M?=VFM/bS7H,n`FN7Zb<`JGb%`OhC-4rqY5Mq)=-=@Bj4N&fk/cPW]oEuJP^D-g_RjP=[s/[5)2Z#`sdnV=4e4NFPenWOK_lr%\Y%?@NapTQ6MtR!ms=jA^:7eAh<s>;ser.Q]oEOel$#GS?QUV6U1[o`pu_".G5]mJWYZIc`P7k>R;Z?-V*'dp/;A)6<>rjg$]f_/.bl%=:OR:RtSqETW^oK&J,l;IYtJ:5Y>T(J*L!V&Tl_fJ@_16@<4/ueGEA,\7>6]V"=o4f?HMIiZ>*K\q4iq2\*K<STPmNG'VD8YYY<<%BsG6Ga-E!1UeK+B>&8_XjY`1CmTbS9$3n32CdBXPG+<UI*74E`BVt]hb)WMKHOQBCG'nCOh^o;T=i@1:Foe"*,U]JVa5p@PS<U>I%WcRGdPo\c+HD$JENj&JM9I<m^5BFC^KN*uT=IMCbQj.?0S#>7OW$MdcF[DaOD=pSAYrCFiH8h93FaGUl(>nH4U"+m5Zsh.+$>S+)%!H]eQrn%mZ\30QmDeR%iO;*OlQ-,,*S=GfM#nm0=]XXI#rTKOc+;qbZIFm1q:Ni?k*<t]dg'jaB5(qKj3^RU6*MG>k_C\O+QB0Br%b=?4t5gr4E5RS3Y]3-Or510O.iPd?#'jfdl=5brJPRF;R>A1-EHY<iki(%I_p*6s<6@3AT2!meH%>="NBFTpc>A+Hcom:@('Rne]%J7F!8XT`BuD?+Mhl>sJ/_aA91_lMIto)mRj)YrUkcl*+!%BX'g<cL/aK\#9"fO\K_lrN;TSas.;#d(eu*a6HSDkXT8HjHk)k6S3'%clQ?u:`/oh#d&fm=VrSMFbZC&gK@W.I"MU+_RIf5=7&Lkm2bCRZkgZ1L=Y($K[sIC&$<8*6YNTu,IE1sg-TR,I0cs_FG/3FD5"?;%"gO2Mcs!rKbu]/TSCd7R2ZM_TCmDBn6YJ'1M4FphaP"*IN:8r:KUM>qq@QmmfC1E$+$\ZH0)8)crLQ[frD'GYqZ+Okmj[$NFI&e@%M<2U'Lt=F_K87uT_eS;s1aR(H@pl@rn7hmS!7$c:W`SrDc,?KILI0Y#pRB)AO4+OfD6"OeEk5to;lI2[H/-,1khE#oN3kphk`)6C%979&U'L8`hP1(s!3>A_JU_!!Rn>Yf\F-Im+^&VXIX!6GXLlia-->pJ8B*[pN\W&rPRbq2JOg/f\)F\IFOHotk\$EJB;!qm:@m=7R%7dbbd(<N3L$ZT*4F3`Aks!_lQGs!hNHN`5Ie<hI2^]&o2+3uqt,kAb^&;MG%'[1hkUoQR<*oohbhU7!0B9'(M'+AgDSM<<:("ob_%^s\3u(tso'ae&>cJU1ehYTh?b^"X(s&gU9T2XUr0T+I#SHp^1=Gch:[Yr2kPp"kr)3[Cr`,MIM2-Nk25IHisd^ej"X*t#_pH#Ot`%G$'OE5dhp86PuBOJ(6$,#,&&Y3%!d;re-!II+Tfra0'<`gkT;(i0\Uml`FM@j?`7L*r8<F+;"Z'K4I(jZ9'_W1A4_5cs?NN2h;s/%WRFH-cqEDn@S'$hN0D@oBh$Ki=-EHrp9+*8bRaujfW>jNQ%oR(%.6#dPFNV3;I7[)k@j];'Sg,BdJ'Uki%JbB,b7-hLl6Hr7]_D+%D\knJVf+:@.c7r/3bah98RUTiXce@]&R,>lB8l(dUlUnlbiuWr)A;a9!lr1[ET$Je$F6SE4MpMEFQDR_@2=$[:A:*-/7W8?r.9[u%4dP=0;J:2(Gkn1r#df(KX8b1t%=+<e%^.'@3&+#JkuVT%12]M:#0%kRP'7\J:9sF\2Upp`B!X&dOk:@1iaA'jHeZi%5+BX%&KplL%j[,Kh%4+]dbt-MK`s;/4@5B3BFP&o)b=!dH,Mr1R:;:W0Eb&D&?Rk(\[))fc8p+Ut9%rX=5[fZtk`=*&6#qLK@m6,m:&$g4b@0YX%'C6+Zmg&`60%*tl/d!Ao1&%FRR;`!`Zp?m;V<]#BFcXp?!g8O_#_=BIap1Q_J8Qee)"fn0q,^2i4<;&1^l"Gs;Lih2YnZ-!?S$m:%W222ABdlGD2#4elWI'-mZkUA]:.laXN;p7)QGPXcZkUTFZ<IZ\]>IO6i)CWdf:T8XQ3-&S\f_BJT!QkkgR=aq6hF;Xo*X>@U(#/m%KE\uC:#@47@[N>LIEQ5p.7.-iei7bhDkqd5b>SjC-C2b-(#c[8kpF)8GX/a*XCn>cJat<V*DnlN0bG*L59tEs:"ll6nUP00s/Nq!%/FHHkUiMa3#NmF^?S[Hj%_EECI]5!To\+FG7VL?)@!`hn1c$f&E8-Zu2n9Gr"#9GASCDJI.]&WD2^+FY2/\;[La6)3qSV++$Mj[8%fiX7Q^R.kZW3"V#iqgX9dNkm71Q4VJFNSp+)S<jqHI&QK<]0-A9BD:CMC5YTeZd+[Br3Bda\[NgD7`QBc>^)s238ua+&cAt&q4d'%[oVkO*cd(03ih%%2p?9XLQ4C9g!%M6^3)Xc>:,LipYNUuSXs%(L3Fk$a',L;[.(Z@G&"d&9iNp?lY@Zc[jRY\68E5;0&i4+(b`4V%=op?$L-(kV,Y8n0/+t#0Ss`NtPs8eTapc`5)S-[S,rQH-5k\oX8V&10Q*rtA?2db+3Fh;h]GojT(nbA=XWE%#ngE7W5Nn\dkam1c%T):nKj?r\&?2*DcpZ,9Ij:AgL+1`gA\gO,]-\'Q-q:%S'e32u.;>9-I\gN!U4o'`uaWGWNH,lS)dO3k753\[28b]"k\gO&[-_7gr%IF::Scoq3O4o'`uaf"RKVs_[!FAG)C:HinsrhOo3Y']`=Hh&Q?P>C"u:Yh3ukaln]Soj7hoL\eQ;tm(TpS8>2-[j?)kH]*`P<\9&%I-R;NlCRoFpZ+^9j?r[;:V%pE\gO&[-[jE+l-ql\e33&KmR\LB:YKqe3d"6pUjLOhHd\U7dO3k7&)EFFh31(eSp]anI-R;NlCNCg%Sp]gpr(6YD;to?OpDg5Kdlg7]Q:*MDHp8hk,o.<T0&+0Ed7fL1V?)d=4s`9uGBambSR1^-c+X[<5k1fT.Q=&Q"c](r8n=1cP)O9e%8jFX_[OCP4b7^,H?3c?$>G>po!D&9%N'<%/";TMJ:4kr#:s"`uhj$I%^-KDK*LpjH,nM[$^Oe2mcq^eT:me,ZE\<1^o#$3m;+;L)%^XdQj=Xk)g/'YF+h&IR.ld>5G")JW/Y:A5f2-"=-9[+uHm;3RGSr5moQ"<uBn#*FA$3obCNXh!N<iUJdk&;;u/h#<12"&ikMk]sN%3e52SX':i!i.+K+n-%e1o/BB82a;o1"h]BF!u;\led'Co#;4qPE_1\piW@^":`lo_;GZ3<-PnI"^b&k^&$S@Z!Yu;c1,1%,@![>t%nqdaA*oO1n=^8c%!A:CMeHPk1/USBLG^J9G35IVMO)q-em-7ARS\X4ef$P-YYkW`A<6_%_^i0=`Z20(1"#dWL3.[.@'>tnIfcP9/%_/9'*K!qerDd_lAG_E-FUGJ]/aM9tl.J1L&PfZ8mAD#>ASp*t$,tN#M4MFE28=mW+0.[3nqg!Pm^&>Q^D%f+4O[dNWBdh>G:r@J$%B`WfOYlYKZcQO"/72#r1''mfc5?\[a(lLVgWslh2E9YsS9(@\i!=qnWMead-D_'$[1?*nOHs.<<s/7D^__%40FhM7+9p=krdGSD.%1tV#""d(ks@/R^A`X#VubKES/#4:T:='>P1jR;\KNJ/jDA3GcSeP9fGYB3ntU'9"p8lO'Q3q%uq*EK:Q8p30CmaSLT<?jteWE<89%c\SS7A-[!7WePq(8ll*!\XP7a'D/>)kF%bTom/Fe/I1[#9##1.!%QS(;;F8f+7YhKGNrgS.b4cu?@A?%f@6gu_b[*9)NR'6jou#u%eB4/tS4O3\KVR$SC?NMdf:^HTm;D.:_9@S@W)Jq:MJP+d$<,^`%(.OA?;8,513LYCi)ire]i?R4RIY6);qrrAV&ddUB#?tjP,ae\%9j.4":C30ooUaSK/d5OeOuF2!aZDr%TM,#tJr1=07k3"gdPWOuF%OtY;:i2)bp?XW6s[,c[jgT?SH300W*5UYaZ12M/ne8-,qkQ=%)$dLl(*3Wa"B;rm1^1h!eGY36@%0CRfltB2=.&YVR/bU8%mE;N23'O.8/aXDf[eKs'l-ndX=W^!"qSp'S5PN0b.G\c1S9VU(TRl!%JaE#U\l.HYOOot:1E65Z<1DQUY_(U$DO@l$:r/JLJB$-XqFY+KZCKk!&Fs+2:H@+U<EG&VI*U8q'A'p&F'6$p?`=='k@K^(N?Ak+%?:MY%5sgT-A_"b7_W"]0[G*#d*=?j#5%/Nmqa<3!Vjc#_O_PCcHo6iZIYSNcMV"\j'k]*@%pVbt&]^d>R^GWnQ;$AP`[(5VP73jL%!C]g;:n[H$ZcY:egRobuPt/gcb6'Nmm!X\;#-)ee#h+IVDnD?@Kar>'Hs6'([1n\>$2a[(YteDCUX]T"B;iO6VpZ$q2gqS;A(W['%ZCDcF.bV.^O]XO&SViF^W41u&amas]KY]s)WFXu@;#`etBe+OV\KRI^X_]i\Hc1"92iIcX6qjTeXZg(-Q>]EDK6'LE8#R-f$FPhD%5g+j3Sp+#82p@$*o+%e=egq+CgY&8+U5pUrB%>e*X>Elnl(+3.+^D+88!*2kn3P<l*XD>aOI]BgSh9Hk3hUZHA*'[P=^X00Hc33j%1U80BgS[D^%i^,aP'A8YC+[K.9;6TgN=Rd3o2jfskdcV7Uc)AQ^nf>/NbS<4FU,/_=!e3e08SG?goq8KA;]%r^TX$K)E]J)ehb5b%Q^:oL=i;&DFP0OLlE\O=9*9>ANWaI2pAf0<YK'&2>guTE@qNY0EmF2[>uh4O&"@i6$%@IV0:>K$2>HH<2Z;)NbS\/!gk@m7F`cXr%WWU`iNb9)j$0j?#?G`_6p#6-<Af7@sD3u_Mq\e(Sh1eG&6;KeO+8WV;V;7_W-'[9oARk6M&L`]L7#?.N8taOPpp-N3EKNspZ)Ie^%(CPZ0cpd<#4#Ys?rKU?eQ=Z;a6*a)LJI,+4*-=LqX&934A;gB2]WP%U8$?$Q%a7j\![e&sc.qV!W5U8;Cc`E1pR[iiR/p4ZiE)^b%h&Z.pmsQ`%gU*?Sme1I0[&A6<&hH-jXJ!eg]`>o+>I#j*<s@l0W7#gNbGas1:&_5n<W@-C3sS:l=KV,t9=5KY]"m6q8O=No^5;Z)%T(akYh2o'!FS#i_X4C087RF\-N3pgTHr.nbDUAuT>i4:k8DN,o$#Xp-];i4Vmuq2OQh>(7W_NG_P'Pk*#n_lfok7<E6C<U,aXE+j%`Z.DRe!nU:aKQhla1?*r3K'.8$k856$+@[^ggmUko=hL'H#\E>H[Z$3riJ;=<A.V)#Ze@mQ5Sea?34WQYj-?dLmZ!l[ifFP"Dl.n%Cu,J-]9i=MLoJUY)tT&&5JJ+W^3*(hp6aag@'pdLcKd87E['nNM^cu+&&QPKB`'?`Ts5OO0;4ep.pbMO03,YW`Ep3%.EhY%=c'7J%:qS9t7O]HDQ4(\ET/X&YR?*hY2d]2?[s6kj/V2o(1G_3tXDGnNP=;Na>XJ6_:-%IsD:"dc]?Rl7?&X'6!HUSGMD;:l@48.<iDOfS%KqaIVX`u7oG]ep5U5G;Q=?>YtfGICXP<m*WO:)E#muLs.kbWoCM@J%)g=Q/[OM<c'bg1'r#[4n%K!GElo=>@Q#0^ddZ:$[t>300p%ohl@5;tZ$1q7Q!H-2(BiX&&*,Wu%bZn#Kd<@\Zc5i5J/8+ERQQN2%H^Ubag!kL2@sb3!r_\?1DZH+$m9/34&11`g2`eU]K&4=j^G%g?5.+<BV<.Gc,V**YbSW\m]BH'WLLAWM0j%f>0j+r)rKm4'tXp$[npeYXa#b<3LkhGgo2pa];+t]f's)@Md4Orq9o4oC,qcf&["p%hN[<E0+lX\(RRF+bR31&G]mg#>^U`IHuY#$FYAJsq_33b4PuZoKJms#GG"L+5T5QU[$>#jFqW*2k^T&j1JZ7"QOlaHZkX(TG'D@a%?9R#Wc"V[)b%OlGTZL2+qd[W`F4q_KikpH>lEicP(c\HnkP`6;EM5J_:SVVdjEGp#K>P.7.bpf=TSDf1@n9RI_;5\t\9lR>BIctN%e/5DGq7N@T\<rf^#:eakL\ZA;2@*;'7n#q3_Z"u0k0-%JZ-A\dVUfG#r8SSRo+.-+c=j<_fA1c\L(J1@r53?-`[TM761ul<U5@q3%laB]uRh,hb-7Pg8'/JVf#%ae=D.6G7qZm.q(cLe(bS7]4c+/<X3Y]HUWIN-!e=?BUS;>FhJ%.2rU2<[(@tnN8l6!DGRkarQ);0%L%qsY6]rP;cIm%-;_g'9LuVL_]mebDp*\U'5>-d-4R+:-oVY/^?;fiLn7YR-C]m%A+C5?s\;CK"FB<AkhP?teup2!d;\42kG\XLY<(%+&]*N6#RcI`XA)0,LW+Ya%gTu\UQG1LBBLFAibp@;u`5nBMSL^F\9![Q@=rps%oO+m\+cJ2gWSn9"mBZP4-@*albL3-Md(O9"l+r%,i>/9a`h)6,i:R,hq0433$hqt]B"=$:%G]@9"rl#ak*+inccrXhh"_riD-H7_t/&nLUUG5+5VC/I,fk?)i*Jn]B"</o8n?Dg*GRH%G0+sk;t=@./<]JI]B!0-Q$`Vu[Sf$*#PPl;o!Np=5%(GPCOMOsj-4rOOF6)MI,fk?)nY/5s5P=!5Ua-75)ekQq7p"?9"oA%\`=^-%j;Wm8)nY/5M<H;^0J9Eej*4&8#@NmGfUoe:]@/D.Yglgs(D)p\$V&6nTi`VuSIWbcVd8kEa)RAlpN9*Bqq<@R3$dBF]URttB<ZSh%1Zl#O4?258&,*`Y&a[3c)XP/l(@8a',M7?-8$M`:c<r:X>D'W`]a&oQqZuoPpD3,7)m$m4q`]YGpp_VZGIK`fHe1(+qdNd6pI3Y@%DZo_)i6[FSJiIucp'/`n^%8.nlVNXMDj^2nR/c_;K"V2RYApY;H):S&RjnNdGG!MM#_AVnZ]-;DOTA*uIptg+\aIf9bZP]R$+IAp%PcR&q^F080!4Kk1e-Roop7N*nk!5\Ks)EX%oDJp4*OQ8E=ne`JI=urk',9^qHBL/d=76`7%]0-5H&j"bi&j.`TLTu#+Z@auC@?)i%FmkEf]]qis\h4/K**ZcE=MC/QCgp!-g)k6^B!:^2l%rkMHNZ1)I6nuA3*1j2[,WZlM''iQJ!)[K[Y/h06CKrF5!+QZICZ;;(2T/i%L!.B+FXugVQNT.1@=on</8ZGFZE#fnY\>H]j6aE/m/-sd;u:rH*rFuqGtVZAOdIRjF)X6u*P\qWJ2b<8DjTHS@E7u9_0>P\G.aY)%&*?_PhMXW^o(_#.YuU>K@n]@6mUOb$kq"0bP;-,,A)suL>'j=B?(Z1KXsBW1G;isb%;RL[T+i/Bh-5[DZNX2V1LQZY*q#galc6;6%2-nP+Mn\B17K4R4M]Rh-Ru>"Ih*p5Em\4&"<?VBAkOZ?MqPX:+dt^*Da?8;MXj%eK^MWhkHeMct4`)ft&m0$(qIf.IqIf.IHB:D[%0)DL70)DL70)DK<0)DJa0)Fba?1cHa]''rh,Q@=&`qIkMs7FQ)chCaNo_?#R7K8=k7?:l7VhmEu;oJNWqaG4Cd@Z?F>kE:#m\0s:%k3AZg*TuFV#A*)\U'JBqlCre)m\4&")rnZEkeit@3B\HC?.ebFbgAR\gmm?po;9_/)7teJI&a6*IT`uAU'Dq,lD!`]GL?/,]'+Lt%?1^;K/pd$+mOihTb-!AnSp)!!5j&'l]8Jl.8S;X!c_k]qPg/`GEE`\>o;9]Y%Y?^lk<R^G+Y6h^<6RWeCefrFl!0dKY\e$5hh(C:%%sl#Ka04B5NZVA"f,VQIPc=tAINLS!i*>)Yr4kk6kP4^_cgg>IT&\Fp1WQ]VH]B1m0p`kE]]GI>8,gQjR^VDSJ[TXGnH1#sP2cd&%`\keT5r?W#@ai2_POJl?F8X#_XZ6ln3HhMb:9?MdXZ6ln3Bh-$EG3V%CX$j6c#IFAEG3Ve6#2KJCQ;\9NXo="+'Pum>-i_*Rf1U%%rQq#3K@]D$f'J1CllWTH5I>#eZtB?22>aO6qk5nE#Hc['Xk>Y83Bh-$Z"qU(B[(TqRb$gIZt;P0Aj<Y75IG)fZt;P0B)eM]qk5nE%Tf)]PXk=5efak4<5A8;jB[(O1c1+)8N^ITB6Yh\m>&tZeEu\A)I*e>Bd$j"ARcB%O*/E)bLXmHCef9Ir*/E)b+11/i[,s?Tk4kT,%a.YBfTf(0H\SBC:cbMFe@CO$187D8.p?:J]na(gDnA4ODm;_TGm;]=\mEs4pp;Ei'B!`eem>u[T7QU\+\CVeS*qp`.Ic#P]Cqg'k%"LcX]$Pb6p4l\U(NrT^4nR@.V^`)25$/Q9S+Z%snj<7O_)W`,4jW<P-$0E/h!OMuU!$%,mFBs6l#LF7P!H\Hk!,g2U1%o9V5l;V9%@#XgK<bo4#O5/bYI'kii_[fio55`bjjMTqY@m1m>2<]\/4eb--KJi*`[a-i!K/l*s5?p!;j9NaAqH4u$rC!me,2/bUG`<sGK)n!l%56TR<&>1l^`,XNu5esfF&>1T\"R(XCam^ok+L84(E?Lqe>lm;3mNiL!:Z"K)+*OECke,6tK0d;]BFqq%%0p<4p37.(Bak?i#fh`4%OZau.mC^Jm!kYUdPR_J.-pesj>!^/^3&#,ULlu>-$j#*L6\)Vt&D-n&*!3W>LG3UMGj$.;S^Gos2QG<X!t0t"6H\HW3*#8/,N<k=%!M$.ki"6J*i2isq:`rn5a[pUD=F%'4kY+DM84[jleL2#$9?ioa9q'4B%UjAjSTp]gka5NYUa/!"YCk7YUbuM,2(-d+%1@bXjia@i%XA)h>'oW7Se2SPd3(ae4E@PD7kW%[cq!B<f,W^"FPXK-oJ<uJ?JP(9C%Nm(FR02Or3cUg_6t[!oPNZDIDXK@-L7$3j!Z8r<)M^1*%Z!"JZ3JYn3*<lgV7O`H'+sC`6>L"f;Po2).m?=&,B3lBqlU>tEVpN6[]Or7fJJrX*?KW"`o5=:Rm.H,pL!I?tRIM@W4?0fm@*h2.%c<f*m]!\B=&'.f)(EkI!$Xf?`>^pf/pQ>5fX6p?pBGP4][+=u6h/=t9"1VA+!SU0D''huq)F)YRY!mftBj@_:aP=:lq#T:9r5`uj%'`+qf<r)u=QMR_VX9(Lm/b\4om+$PqiEXS)82%R*qr(2/K"o*43%OtPkTt^/aI5?!fr[\m63Xl!r;g0HrlDg`f)9$oNl"$>1gMU2%856[[rfM5CYPeR5(]TW\FKPNePNl?N(\f5m:(%f%IU1b[!'b9I-a(PdX8sU(A1Rd-gZ2NA(rgui!NsnKFb!`SHQaLJ_HI8eot?Xm%Y)q39#&k=[Y+SPP[?h!<o%WF1',sXt"bE2+[3@<D!pX=WRX)(C9WZm,7=cOMGc(klg19]-Ac.W8E":R5RNU7s$VT:8g9NR+W--_S%#qKhGe5[=$Y,<8pbg"-t=o`g:+3@dA-t#g!X1nk\gE:U^)ld\'R&A[]$r2"@k1=`Uj?q5`!6e1T+9m0P^Q4jM"+4uR\3dM.+VssW%:tP<Y"IY-OKJ.CK?RiL-aRD8p5[:(kHkCSd(>4;q?/@QeoM2>fY^eD#9aLMV^+LiY*(b'p!l`ID:3NXM[gtaqJ5c(BKVqHZ*^qcU%S4ucg4?l0c6KfpJ;NGp1nl<mgO<l\>fB:[m6]U]t*u'Oe:m1>'kmum/MH6D(8Zt/](HMd;nPrX>;bO4LPh2jsH\(;++s>ntf`gsk%W/,[C']_n@I6R,=Zl,@H(/"3fTJEkLP*I3='Y3)3N\a8hP)]Zh!"-R8+99PA&s,S]507J+-[;o<#k$jF+E<HEY8UH&b*s_Vf'h9e%G\l^-i?7o%alP#8C.hY*VEE"fq-9W-n]StcYU#&m:&!"pDXHkQ5-ZC!\6+r$AiXYJjOS0(+W^WJ@oXJ0Bi7g<)ijhES=L1EFV#n\%Z+X=YrQ[=,DG9$2NJ1CIm.-RnWB0H;\V*rnFq`NdQaWZ/bPn?)*]6#A!qN0h2VWV$rTSu/&dApG/<+c&\g1TV?FN(@;ISH)Pq3tJ%(`A<5+:XpTlKBZ&ViECn1mJkU*IWL>]9?nnQK_nA_n\4Y$o8ttqke2`_GZ[JFN+^h%Fl]0Sc<cSrm1".BCduGf.\]fL8`7C;e*!;%Hcu;3Q4eN-o-6A:8aGse2tlmk>\ZV-/ES:,LJh5C+dgML/Reb=D!q#`d##HJ4na>ZD(bK=i)<'JK-a^8/"?&?Tdl2['dS'XgeG_5%<WS*p\Q$jnX3*)\?'!N*>uZLQ0Yu\86tp>eTu^YGKO#Pj9-uHkXQ$\9Ja!56!F7Ns?J/<qmsGq`bp.;(Q4"0J,$H^DO1m^AgF9]U%q]SZYX9(!F#L/s(3-rh*L8!mD-?ui-mhWtKFTH3=&X!k=WL6]jXp^I`.)*M"Y3:KebB=p\$M)U>%Ca<e`,-9_`RL<K*&,7cDJO,H%+6qNi!0p1Z7b=D&mXBnB\6n%M$E5r,k'bYC3r&JB]GYOECbZObB7I.997/`N5'7+a-S/)UA^bKE6c-I'TdKr_VtN0l=5I"k!eRk[%0[ii$lu?d2q5&],WpK8M0P5L+@mYB\(UDj,<9ha2?%sB)kfcDVk2SrkcLsZ'1N.m(%$0CBl\9Rj_+>@rAfrI!FP(ssc3n:iHF6+P%,/pWBoRgA'gt_Yhc3%k&A`l^mMG_CLQ671SLG+^Ra]<t6d&te4RDQ4G?6H\t"Or<_`u%MUnaYk?.N`Ck!?PRIE`@YmZ8E@OMg\][%9Y=$mkR&8>o#pm;BLpXJYF33^Sni@#OQJT&r'eZ;M2]XFK>4@nh-U:r]D7?d2#TiV$q!tJ#Cd?VMg'ZuXIjWb&K-lNIo.d>r'e"5%rh<R+Ih>5(%t>0P.r>2/E"K5PU7+:@Mo_6kqMW.UZhfRq`;E%;%/ut)'RrtSLVF+5EqkR>pgNb1^!Q1#!e'Ip07)g?oG7[MqMQ+c%r'b-K>Q$uuaZfVk,V*4!74=bar'b;dJ,"pm-G925cn/c#(P,'Pn/'VsqMT)Pr'd7ig\aKNiSA?JiJ:h<73%E>?Z^1`80!'SMa2^!%pkur4Yka4>\-IN212Z/,_YQIo79Bhb^Bj.Po+s!?q26R:r'_!lPF2o1&XVDC01&a(c!OHAi@cCOo&_UBB&<GSi/:_97HXqpNR+R:%W45rk,m4]34;a-m2'n!YFb@r!;&kAh^_L=,`O@K4]JWCqR'uEh0Zh_WS(P[%TI2nn;2`E%mFZ05?+FnGA\s\J4@r,<5-jg<L+hbq%8$Ep_9A#.hbQmuuXs<@aK74(4@nTV1%UL)t#=@C6;H7IQVHZhu5KNCTW][WH/`/Q&GDs7?]!65W<5hT73TUC%\*I>8L;5Yg+VBmL%-ug,270cp(CO)1Kco<$gV),)'7BWCb;i&V'\b`O/Y!FgOg1oHZmgH'm]7Z)[\7$aAVBakU"+XYcn_dkXE?G/;bZ9!C(-_Qr=6CmI%&h?#Jq'pT=A7E.fQh.e^NRWNP;`?U:0=h^u.iT^IDgF59gOsM:Q@nD'HKQ*,'`&jboitlk<+:r<JW?sAG?a80(FhP#SX[_h*U`b2%IU+Oo6&`G4h0&f-E?MI[eE%m],@TB..)pD`MJRb;^8ai:81S644Oqu@p48P]X!2YY=D:>(Leni$P`4Q(<@+iA9IB^([O'B)='Tgt%6WDOrhK5f@@IV2>n%'gQK0M9Abs<><Tk&s1K-=bFo<PMUH+;HN)h&ab?.9VLe\P9+6B/=%m.*W3<FJ;Sk6un_WO(UI#k^hZp63ZM%;I./0.'d)d9R!1D9eJMr11sWgqqV;N:9ZX?4"9Dp9Ldc]4'a74\P.tH>"#JhZ(Ds5.d3!:PAJS[ea!%08BcBrM%VPD4*=k`$k8Qg%FAF+:H41ID[n\W?JF'U[]#J-o1g:6R<"8r/ib\Yg-%KAYSoh?Za8-+LBoKD*cJ@6dFKb\SJc3!"E17#Ac4-a6ol9F4P.e3&dg-ob%NRX!J@8Z7#YW\0:.K34ZA&I[SiEOC**96@6O4Y\kb]*;H8Nltd'TcPPX"#OlRNq$4S+bfas)Z\Ca3aX=<H8&'Qcm+k<1-Mj%$u$_%ouA.?qt6JjfDJVLbB5#IP9MWPON@b)Y.D7/9n`TMSbn(4Lb`%D."GUOa+ZoYN2R19[^)=g[t5(&.2sA1lpk%Kng[6TJq\V7/YuEI%Y]bDUDc1WrYY@Y)Jg7L((Kjl]RbI5c^*J&@DK=ODD[J6*T*YB<4f]40bj/RMgs"WdfW6.TYE-kr-3SAqM:`;M2an@8Wp2q^=X_>k%+mPip[1gbnn)A6&$jL,KIZ3j_<qiXWo58.r?<,[0MeQCM%S8:BD<4`5*ViJ-jYb('2,iZ^#N<NjD:@>)B3N`0h0U>EUI%r>^A(rO%ZZi"CKaV5UT/,WL9Ku]qn?LcGI"VV,/rXU-j&SgO5k3NRnEWcXU(J1O=`]G8&6=8($I>iX2^g.2QeE(bO@pD@354kpb#QLS<$9,S%=X\(S9="6OTrY.mg70+gaQT&&Q`H4T@usUe_=s11T#D)^;1%Al8ZgYYD9?VZ7QIenV&#A>,B8um]nm@),36p$H$AIXWo9;RR4F43%!(q"&<H3tFR,sm.Y`Yt68@+orkcuo"`XfIb5u_C"b7KV)DY\BtQ$A6/b(U#Y)Rmg9P886F&(gO9kNYYMj\c)+X[3O5Ur?ltSC6CP%H70[K:c%1u1]s[L='JQsqI7'N"-<W8<d7B8OIhO`kAO]O(f\=_Zqm=1C8Cn\8<4+GB5cOTM9"uALWjti[Vf'F_7D1><=IoCU5?`S%HT-O)K4Kr(SG@;"&]KaPrX4ca7"q2#]j(TUdZi!Vja31bCTIh*`DgOkqs@%lk(oN80=!6k%u9m9p;8tJi3pQ#!nlNqJA-3U3"PIc%(>KGhq)T#SaOo2Vmmoi.%e%Klg(*SE*7tbiaFuVammpsB%e$rELNfO5*J\iNFfgFCU`40+pAiIUHN<6fI0&I!cM$>biLQB4qr&R[%J(rp&%IgjE40nmH_g<:D%dsFgL\Ct:_`Lfof#'S4b`9S&)&/FT4*%%'_`K=Ap;8tj.^m6AcJ.:u\TGmN*D)FkiB?Aan;]'"mI6^r%LVnJQNl*s!@m.JsS&pWiZ>f5eG9i$ILNhl4Y(ua*mdooh^j10;Y1J,I-PO@CGfT[;%dsFeL\CtZ_tsN#A<u9FcK2MWhN<)l*SrLs%gYk<YoC.db]H,js`>9'Rk6Pu53+4b4DJq/?TE)$`,fe/d^"mpL;Z<pfN(JEoZ@[MQP"nitf^K/g;[6B$Ga2L=\UX+HWRtXKLNc!D%[3.M]f^Rd%f*tEamt-)'IBCh&*]FndXn<]\1KEl3Wc>E@72+t+mM\BOdJ"*G'c.rhRIUts6s#VcaCEs)q;:^pWcF\bmoDtcA$/UZ%nesEHiQ!k1Gf3OpITR_6"oX$@UuFk(S7E;&+Ka5L`,Jt!,'i=35CstPZHg0s8(*+(nM]+1aiXkqgdl?)U$&u+b2,,8FAalC`"FG1%a+QI!;E*U?8g.ltNKD"E8A1S)n^cEo^t^o_Ys+)^C$X!&IbA7LjEUi?Xi]@CZPnqJAhl=%dMa5>2r]WY2XF#jaSqEEoUa!\F$M'@%j%!oh=d-=7!KFUO$<"[]grQXWOEHbtEVbEL\M5-mS[i_]6_1cM>3Hl35HLEdN7##4S+f:p4_k=9`Z@`IY,j9N>AlgWe-hWQN-C6h%Ld\#9Pp[l]C>%%VCCEYt<OD:X0d*"Je&8;G7$k++_?8sO.^Gu2L>;Cd>$[8E@H\U`SFn-;WTN$4+.UnfAdl8!S]4s@0X@*i'6(j,%6>k@CLdkZ^lraqSFGQOR8@hBJOLjpPRRNP\GckDOTiN"Sc2kb_(dHn7k5sesgk*q@UMMU>Q7@3?1?>OK92.F:1St,>R<%dB>WM4O%:kbjul5R;ihAkoBfF7_ahgl]&d:V.W@`IB*Y&i]:>d7\C)0(q8k.#[d,L$hZS(i`KFuuUs)0"d,0`.t-#$QUunajG(8a`UUq1`d*%@[rhY(<5$e[t)$V<Z#;K?_cjT5*6I0[u;/DM2#5"ghp=MA&sNEk:KnWfk`PtYUch&)q"lM1h@G,EGe:Q`98,N8jG)df9:9_f>,WT%.?\GLSKk`/AQa?(e:?J&[UUabe#K6KRJ'hr<IOs)\b+b6@hq.8H7pJlHJjLC/-Jmt-t_eR6U^+2X>&CECC-A>@bK1*hY;M:OQ:Od%IT<[1/CSel=VfRfGNlCY/CeoO(RO1u;g,5J[%4>1%_U3`[7G5e"(()m5d&Q?PXN5E%,"]r;0/[E<6J(F>Y:<1ANMSk>K43LP;QtE%Mi+?;R>*ei7S(4=XDn-PN#Hk+*pm+7_1[ojR^_/-UG4p_]G2APVs0?+X^&fcLO-%IX$tuF\*g@S=9l$#[sMnl/re`kMbHH[\5)T4%/Q.qHol%6'h2A5Cp+Te;g:pX?FEdsj`70&cU?u0_B#Nm*W#3unm9BBUaBuJ0GOO,$Sf_<O/L?s4a:Pni*s[3o83_*e8tR32Q/4OF%b',OuC+f<pW!m7co\\nBF/X67QZ4oJ@H"-%o$..@VXLdnTg8,2L&,$Tb\GJ\2$4(/nMk,rRK4?0Jj%^'2bblf*):imYhLd_)qeG-%!,E,@#dn/sH!@U6ba;/Ym/8^;.W(N'VnF02WC-35cV:i5n!/Ha`+5e;<Z1ZlUi0o7P_%lL-$54).-"q*flrR)$]M]RJ[$=s>sH%+%/5)KaH_1]PVUri1hB`90$RILDk36o>dIlih1=.8;`0&n#"(m.l)9sZ:faLT:]g7C0Q:Z'Wj\N>Y(k.T[7Ujb10BO2(a'B`tnWSdp%9q(VX(MV&#qj)cJ#a?4!=Rh*>NA9iF/JYSc`@usUV7$biF^rL!Z%4l'On"[5(mla_'P?fj!<]1&P?%=J(hTUWDi%o%$J@LME+P-6%/UP0ul1jWD0[/LHXWPQ)Mbbg!^W?:\i'ntE4Ed.#_oU](!@k=XD,'_A(q94faPI=--Q&Y\Aa>%i-OFO-@;/p39boEhUi2_K17Z#i%#%e+.Z_W'".MK^Q7T/8QMToUJg@&*MOc*r;!<T7q:$+t5J8pd?Lm-`P:es9.g&OM%;tfo$AisVmIPFQUS>TtaMnJcfUMcJ=BcGog%1"'juVbpL-onAfF`EQN5=gfGfQ3GM!NQEXC#r9E"BZgdT>]:2DNYco&nuH6F,?3(uacc>/TN1\<O`C]30*`-YFtncRGdE<IQ1hfI%R"7HI>?rpZa[;sb]"f7N[MSCR!GOeG8FL4XiCE'2_#4)CF2]NJLEo2A-m`[1)&2OW&Ve8o>PP^AD[ZSODf$(U`B.<!<SlBF8&b@/%bYdo5(-X5)eDa5drfk*E`O&VIAj_Z^H,U$,21$Af)Eff,!lbGVW8!5SZbW;iO0X!d$W@*QLZO\h'2l/Jr$q/G6(>?F2c1MsnBA\"%i_kF.P,l6TL#:"`=G4^h_ojZYk(]aAHu@9@IHq-]V1,XRl>F/^h/]J:/=1Zb0(lGRl3GM/*gTH)/XQ=MEiFiU;@gsII^!)B@C_W?%E[`(]QZ?1\FgkW@#KrqbQ:j@lQhnO=WJBS5&'LeuY[$I2\^\N;W?3[X\m$f[Y[$GubG?8G90FhmqS@3O+"Wb)=>"a*>j;R;V&kpq%4Y2rr_/cN1j\cW4V4NuG4Y2qG=>&bh1WuVDY[$I%\^\N;WMeiU&'Lg;Q:q0a\^V.U90FhmH<;fmZs;m)\^\N;W?3[X\m$f[Y[$Gu%bGFWm90FhmF*J4M`8*(C5PPEIi>8GJ?_Dl;$e3ES:_1<+rSSKj+8c35K3t8mIXuh?"mY=gW1..e*e&\:_(SW/^Has[!qh1QTH8Q5%]))Zrkng:R?_F!>JU7.rlKK+`VdH*Gn-d_VIY%@302PHZ^p/Uq;'_B"NHb==0sab]rJ`h7"/NUjAnG+c#&6ft@eI13']sOh5H^@h%f!I&+#:<C+bj%OnF,q2DXLgEl>EpmW!,IRORACF3La&UP*(Ql]25,qRr%9jhcc(J_T6"Q[1rQ`2!p7DVS-Jp:k,DSn`_<Nn<N%0`%iH$Uj/'[*hhE]-0\=,3hRP\qC89:'lA2%7&"31-+SPAO^@U4(g"rD%1MkrHgJP1e/eK,ksA2P%He$gY\a5C'%F4&fMk'h)ho1u(2%Zd8q5.DLA+H"`V7N';kLc7K,j<2>oE/':u"LM9]_E7GB2nBfUrS=<rWC'8d!GdEA8U>E$\QrY?_pnf(sXhVK;*KoVoDdK!XDjB3S%jCo#A"ACnO!9pAdW/^9NXu"T<#k+1PE%h%UDFF:S#4gqU=<e*@9R9#j@u<sj0:Q/TkV*ua+Wafn4DrftfRR'`cJ2fRF^>[b4:;r[%LLNQJC&'j.Re3u&SZ3Ru'qM-lmUni9k>BgLHs'>j!t+eX9Xg1I>s=L^OZq/"]j2jf>WsrD'F$&Nl1,Q$Xra^'orB.95la1/&G&c5%@6Q5TXiWlq40U/XOEK6h7?d121lSa=8*&D@ekk#FLj^YQT(Gl7%0^L]l7)P)E'k+E/?7[lCN"'K/Y]fnUrtZ?))muIll=jBpqu!'%%1J3ERm/^.?=dn)LeVd*\9*9I"k]g]c^,FC4LNhjg1BD+;fW]r[2&EYACKPkL:p7$YA!J$,$gg#k0e,-f%re(*=fY`PDG.*a1.F#%$<i/<(*.4=o=S#O5i1!*aJccYaP=H@/*T2@j$qQ/ecSc>XGgS2j!3U=*pXeuDau=Lp:0SN?2KmB`f3X9jouQ5ZND#sk?@Ue#pX<e%budcu=RIg7,]nG0_<)@Tl'00E-KCS:SQQEMc[`PPn6E_rM$XYd[?V]-s#mI=*nqMdn[j-U:%e8:_qe>9K.q74`W,qPes,&qbDcQ=%bFm>(0=!Z6f&3W_VlJ6oeJ66#"&b*XZ3AWJ_0t52aG_o2:\]*hT[4<$_IA;J+U!PBpi^#=-L]\;]s';b-D.0+m4#*?B:_8lGkWem%q#7?6iL=12U8816(,OkT&"L7MQk`O#ncf*\#gFCT!+a@lqAZKV1,?US=]k-gqpneX&.9&d5633u(k`-1+aeD'!.'?(HGXEZT)Z8=%o1aOA]g,pS9&;kT_/<nOa6fFn_Gun6eAQ"m%TW'6FXH\W^sZ2j2nTbkrpA4Y=?`t$k#f/W32+965[<>!48%fn45YM"9+N-E\=FkH%L@CA?12*H>efaFIen+VY%m`i!)%;>aeDZS2R,2dlfTR0'a#ocQhnZL@9820/F+09sT]RLDmObI"2VnoXU#\LG9fk4Dl*1d2G<d_s%1R,bI:hKBJ4dO<<r-bTQ.%<Yb$`5e@$c\XQVg,6XX\/epSi322K#S%@BO>74j+EqoH2X/>GF<Yu5`6L)UpZ-pdSdu.j2]h)CTM@5%D<q_FN\Pp:rGI(bh>.s7#k>s)LjJ22?><-2%$2FniKp1@4mV\WDX46%+i2j9N:O'WC?B6C6t(;h0q,Yt,cP]iXI=0o8f]jZ8LJ2j%oHIkkXTuOBGOo,N!MGC`([QE0JQImL&)*FRb,Ns,4m:j+@]@o\o?P9;?Lt_0S&ML_5X3&8q$_=%ZIfM?3_lsdUOX'M=tCN:38mV4%"tDa=8iI6ok%-FolefR+PD$6^YA;S-O?^'+B[UBFN0@G8@5RpF$'qg(S2'p6)ts=U%hH#BfG-5%3Lco:2(Mnno6(4fj#`2&`AB]F%r0DuKcif@Km==BIQ60)I+?'[<@]Z8:9;$%['g/"OiecL@J[_i+Aj53GBZa"*iVErmGGqbMZ,ph0i@[&"`WL%hn@3"GD8JA?H?4RQ%2'1nXRI)]C?8kt'+LMQn0Y6WOQG9l<jMC&(H[:lNaL7_=;"!H77g@'5OUFX.A1tPZnjO%<A1suJZBsAhg$@m`m-XF8Jhh3;8)h,1%+5,uJO6lQ/8&!@0O6h#`8+q9*,CA,AOWY*=rK078rlC[TJ)lNhrl>DU5B9(;2g[U`OUEH6aS7h3oF=UQj.+@i=SQSlrK.Jbn$0'i%5Z3qDIq6>W_='G_OlJM$OaZTq8FSO>r^`2pD>m(FU94F9hD]ppInkK(Is-;efF1i2,cLo*IjA\>=+;LJ"]p1a5hu>IfGs>VoLB,0%rK.IWs4@/AX$75hZhl!EZhktSAFi<CLi2rWJp)&)7q.EYIjAW8pIFq^q]l!jr/p##r/hY]WLh/IMPO/79Fi;9cC,hAdZl[UA;)RS%2h7KtH^tE)LjA\H0gQYE'0;X09nYnnCRte<R$L,PZ8A\O,%I.2+tpB9MS.#r.In[0VT@tJV?j-EekD4rS=(Q%o8WVeR3D[;EEOCo%b]rhT&J0uiR3L\J1I]<sAr;QEbS1q3cP.76cP.8aa:oM7cP1Ye/Q62E1K,Q,4p5HC'Ud$IeE+mg_7fP9OnUH99Td`r9Ta=eR3EL?%2,f0UFA&J:Aou?5!Rokn.5Jo7.7.dS/QF(#B$JNIQ7VT8[tZ_SjI-mS9e@%\\<[I&dE[tW/$qWH//1D-[4*-h6DVNP.Yc$!j$!Tl%)T[ZnjpZ$[K_WOo)RO/`@%2qR9U`?IbMD`\Y9(o'bDq$;D.#B-HaJ@#((LA4)$*o$"OK8i<]Y?Y8+BE+B),7'B*$B]EY7dQ`?P+7%2>J^_^g9D3:qJ5]'bMR*?tfd2pel1_HQ<\F_R,[H&k1.tM,o^.(efuKYd@RX;?ks#Pnk#6Cu&[F,;_p>LmBfPC[<fE-<;'fcKk>^%#G'(VO7f]H"[rETW@ohO_CrB],-iG=%@qC0krkXX/NKYd?cV^+U5>+gpM&AUhS0\n9AL(^>$-Hi(+VqNq[83<YdDQI3::*V'LAoS%iqfen)pmRg/qhu2:\6G_I6Vn0DSkNp+g3P&60kkgJ23PEZe$&9noJ#+MN%%RaTGJC1?+NlqrfB!?ah(5?=q.#m#F]OCtO#.cD;UP%Gis-`B?<][B$JBu9$mnMW4&]<<&#A(,;6RXNIY5M.i^j;nkhCKSuSQ-,X!5a7r[Qj4G(H8Xa28KBDDg*VO..AF<:Z3W/Wtj8FWTo%#t\l%%8!QAMF]u9[oJQ@hJ4\fRE2HSR@%&kTKm1o,ZufQ-&FjoiXa'riQ.POO'qnYo:_ad!UY%',o2I%SBp:5YdsZI:mN1b5-2p<%RGZ'U6QZ64r(,\O/jFGt30kZ]a,]9%>*aU4Of</&I`PgPQ60iZp>q'eJ7\Q89t'0(IM2PKA!6_pr(qsK/\b+$1RB1=hm_^&&r1W*%9k5lkM>>qi<NQ3Z0O9.tVm]VG$S-'ho1(M6\pdb1$YZ`M0<r%b`gIVOn43rl\7PpI=]9t+[XZU4-I'u-*)*5e2*72L)LHcaQu0;0%?pHG4(k3VF_C;rW72XC;,7Nd,&dGkt2s#?"3%^4l3!E+lKmC-R;j\*O;hb$fCT]?U@8.O"Vs`6T*02s_R%q+P$^4P#:DbGI_NHWI%P,pNP(mB@.%!0rM8]*!<4_m#DSi.S)17-CS3/mSk15@S.8*VeE20TnaRQSfFgTuY9DX#&h[esQ!7foq(n<-(2hO`9P00DU;%P``d%9d7U?Dct"#2Pp!GUH@8&7gs?0,j$JXRD]r/4dDCE[H8+F0ZR^5,'u4&GP.P&bk8=)'2qH'$,nE:.0mrH;i3RhCJM,gRqt[86@9KR%MFfS/VA0>rSoBY0c^%[,G-*X.pqqpVQ0RC^gZo#e\(;#TDQa4![oWQBH29MV?3-NalXP!_Q%$6VaBYE+W,AfeGILZ<]A!]u)2I+-%"<+?$$de&3,0e3kq@Y]H`V2fmOk'7R1`i.\.tVh!g>W'hfGpTnHb]Vu/hjSilom+RRhI?X46uJ-olPh_;YDmtTZn&QB_R12?>FV9%!SVp0AC9/&@1f"3P'2%OJ>NnZK#ZUi`r#-E0tb`m'#S?u4u!Jgi=t<?XBmVHRp1hM^&,b]>IcAH0s]PMT!?^>cPY74jr"88cfuB0%2g",(\W+8mecZRAVK`lQ%]1:XMr0gE-Vg*1+gZ%lb=DbMC[l;uFBZR%!_UE6eOhs5jPa/o!S0=\%L-YK=^%5KErfIuXp0<jI:6iS%Anok1W_ATbgbICO8hV\NYES&?+Ia4W4nF+8h$,`+l%Y=\Qpe1m_?-!b[U4W#-k"SM"MG[/=\Q7.blO;L)%F`L"cbZVcg&n9(,b5s%0\qcHHeXVMS!+<ML`9sKbONm6AIC!rIn-'_*;[4j@odZ5Jm2eDec7RSM^hCda#]`d.*_^/0RB-(c7'8e7Baj<b^eA85'$5+H:mJY%MnVu.=-Ha?J1MpEHa*]A]0$<LWsQsR<E9"/n45iT'#$L%aAQ!ge5!:lX:UT:\L<6VQs!j'bW;icAqMHt\tZpee(q)&1.Z+>:82oI%8IjcYD^I%-<\Q:77b]/M^4!2gL@.a<a^eK9.&9k,/Xq>c!OCjPXH$q<:6h_6h4!<I=7PnYV8D;Aj()jAN=:a?XLohR$-g^8+W7bX%IF$Vi:Nfet]`dNHg5M^`Hf@SR`D9sl5\"UB:iC4r+O`,t=4KFORLYcWa(iN5XAM6K_j@499nYWaA-KqX'(,t7MR1?NBG:"3a-ZR=%9o`BH$^s$WieKFcpr#t7kN1M.rW8L@$1c!c^.ig)nAEEYB><jA$1r8AbN6Tg,T2E_73f!jg814-_[f"8fhB`6rmQt$_snl4N?<:s%.B/pW3YA`%W+40CNDH*d)W&c:T&8H=<>GjdbM&DI<1P;Qa!OW&*[&-jP`oNpV`^Mki0V]6nltJhf>T0[la`RjbC1(Np!@07OX?q$%!q%fU,>$3J:BC^P0+4m9$PZE."-pPY@NMJ-H3BYt(@MGP$iHIPWQ9-R3ct(9R"&3ui=hZA^kE<l9XiM`jJJn@"DgqQN8-O:LN-Bd%`r-h1F\(`-f"5KH"U\%b79/o!`KRt5$];3YL(>kBY$p>kW-`@a7r<f^@SG-\+l(?).QhguBm;Y-qsXd'6?4K#;?K,lLn+XbYh<`!%=k7br#h._`c,oOgmAkFIfHVAN\3#-PFCuo+>.tZVr5&_o^JjH,+1%FhT\4&+%T5j-mE,36OpE%]5,Rdon3[r3YT7?Tf)YXJVVT:\%AjXtX6_-g&&p/E6j%P(.iG(9=S7tf0FBtpQ)8W7*hS4+cK<#`"d*%#cg45PuZh5e8`j;Zq-(\ui8/i,DTJdp!6+6*=O3mOHpaY.u%(SJ1s;nmdmpC&#apX2c3?=Z*AFUC+"q_+#"CU)F\%^/Tk[Wb0XeEr/@U^`,]:`BtL+B+Ka,GY?[GS+jZ4Ps0Y&B>=0*l@HZ]`E*m%+E'Lba"dME7U$fCIomi)=9&#=X'T05i?,hi?iT9GI/Sj#puS,Zqu4oK0'G%$WP5,#K]ft*>oVZYJ?#Lt%3d[+#QJHrK-:3`X"\e&%K6i.E9[?(8&kLG?&=I)s3,T:58gAlI8Kl1[+g<m3Y=E:6_&k*o0<`GI$=77]]"g@T$RAJ-dRoK3+Q7nb[d\5V3^C.8WA&U+r=\Bq%3'3q8"^_F68Wo\U)Y8LEKc'?5*fqB+;^9pIdUcG'?3/R'q%jP^BR-2@,i'd.QU5'[Y`]q*7n'Y)&pfUh[h+*Rlp1NBi4-(<2Y^iF%Rb=PC4Yr6XA%qU]PFdZM5oJ\)%a;+m_'(E[&P_F5hD<V,Mu]\f/`&RiTTuM;F_QL,c&nAG5BR67kP%.3VZpb_[`ESB)G7\VV@;6d%KtY)[\pc'D%P!Z'6"G8721/i/.=[5*+'OMqCCSU0JF9HW*DiSHQ]ODQ#+B5)P#E,EEugo4":8ud_PfEXdhsc*T7`q8(nBi6.;:K/%>_O^22=:1+e9N)Kk,a-(NM^*uL%Xo*s.$ZN6eX>/X\6P[>tGpj>35<6k_CjtZ+G"c%P1'#d(ABdhtl%LO$HLgiO$<h!#p93(DqKF%$RF$(!*uN\bPKZo?I'qLNBF^[8OY*^P"=L4Li<*A9O+tRQ;M?"AB<2Pc&\-EVCMKX5^0EO-R_q\=GO!A'LL*]KaTSs,QMJ/bl73=%_G0h%?Cgc16I-W11:PC16Quo@GBQXI,oim/7-VaQTAY\[&nlJ_5@o&MZ+Pr*%V@=>7Pc,r(VJE75#HqX=\H?<DRsnBZEeL@,t=Ec%TbZN]Id#&EU`q"O+cXN;8@^"\<(Q//pA;L]?LUT@)a('kU3`,lrdr^t,`KVh4@=qNR)<nk)6Iq3RfgbMA5@g<aXlXErkjhiK'Sg:%7=ak'<4VV)$[H3.pF>dU2%U=0H$>:c"?Ymj\J_DXoO7]"7N59+)BahL&QahMAL^FZRpi5L`<8;kK<MCGJCqg%AsN2hD`h^sAiC?^%8i@rP"DRDMErHiI+(SX@[6;]U2aRRk\Jn.hY'YS3L<isceD@>F)+n?mKTI//ohr?rc@G9HUaZWjO9?G\G%7<fj/A(qc&j]i!Rs,s%p[X00cO:IJ?d0sIIXj)4q4Y6UIXDG(no2Y-3Zke3OUaBNqX>E!S1-3&IN9eOP^'ZYnP7@D0WKujJW_H-::&6Gr8_'Akn.$!JW^45%&Zh*pW.Tok#C2DanU]^J,TUiCO/O?P1'`8;kU=J8a*oP_fL'*bIq2'^2>ITC=+g-H`bg-RmK^%pph-=3jN^6Ze(O.0@$gI(qKn>j%UZ6#Z&r!lt'iM=O*o=bV8R8FVDK&r(:VD3%qo7M&F-su<!B<78Z$e#mSn(XoJ6_**%&;rU(gG&->XoZboN%>+iDoG=5%MTQ;B^<C%k`Lc4$hX,TddW=)'r5A;`HFuDCjGG9p-M?`Bg/m.afO\?bj0YNk1u&?],nL[4t\b5K5["\'#Fj6mYo"0W36M-DS:oK51!34)a!c[%eaA4;hOhg'Wf$jroY>r!6\Bhu64QC%b(,&]__f<D9IU%i?p`)KG>-OD6P@UAeDr0IE)R28oDt-(!rV:lR\;JiMZc;ZAN/(;Ga@8E%IR]M-DbRnO&?K8J`h(h5XmpcJ2hSAmm#UY_N\hHX#Q<aF63f?Nr"EJfD-r0SX[]6"8C../F4;V?\JTa6%=3L29.D6oRY`Bb@Fs=7%Y\;FIP;InW'!$ouh)\."#`U?47YnS=#a")<YR]4AE_Q^UAS[c)$Y*`!Tdba6;QeD.h,.\4BYt:*=1?6NP)$&(@o%=%qGX)aGEg(N%FG7`cp!jbFLj=d<,R9:PWH+E2;"uNZ1N/Ed6)!N\%BjrsYptYlO8$C[6:cgM:['QqBc97E4B)A1!G9#02,M.M$s"cJ$`BSB#<+Bn%HI6A56B+%o(V&+NkCE9(S@H&1*?rPmV"<fiI)<a+n'EZDp,tYh&RhECS]B*j!!a9=5IB__aL<gA=lhaI#*KM,dNaLX"hdOs*Y<`'%&l]^FDu)V+C8Q`t(HFU5G>JFair6*<+W].K8?r!<HLkXJR/cf1V06"N*@G-Sf;*#68OD;^"A&r5iV2ib:Y>TE[s85%JXi"Q8*PV$%[%J5[dq-eGIR_p8Z"CB4-m4=QZLc,Tk&ZVq1ur<dZ!?@cLcS[^m`GgpEUfe4(VS.qVUP_3Gb$Aga1,!koV$hJNDuh2nMm<gc*T\^%.r[t47dYUe8]*OR.:P-D9bd7o8#/79jOJK#Fp0\[(6#th"G^#XEus'[!&u5g<G4B$K2^ltTY=j5SHaucDI.B]\Ud(;*,H[a#F%n>%\d]`C=J<P-H,t5,LDe8GHX"tIBE@oE`n.H`.opb0:s!dX%\sc]'/jQHU<3S+Sutf2UYXauRe0k>m``u=YEi#\<g!$A8MjWRU+P'_%dP;4n&?2]'L+a@<E8.Kd1CEUBC]5#(V&N]aTQ$iaOY@h$;k!Ql?G4d`mJ^T^X4*eq7J*PB]O#<'pCro=(Ou3@f$X[ER;okTs.!AK%KGtSe'h,[rjt_i:H-4GJ/_lub(OodT@(C#W1eEN]-c<BLH?,=N75FIBPA"e.riB4R)DF5fMEP`62lt2(s.o_2RJ\o/^MhKTR2/"1%\:t4BX/l*((I(*%lVVtB:_Iuc+9m=u=@;ou)oAVUkVWq)i\otoAkT]WmAo$F@E-?Lf!rRmbkHbE;>aE=+RB^;PT2E$KWa!gh=]_r%Kcg#7<5q$Kl"5.p-T^'5)XUPrknRCh<EU7A-%:ctRn=Z`c)2thIXES\@i@'[^@!>7@*9?uS*M6r.L\.d&cERo4M_>[Ucros<0RX;%Lh(LAZTkp.82G]2n^m5<)EqRf?(mMk3`:fr6I^o6^E2-,8L4$4n'o^ZqLqQ=JEXi.gR!ak<<39A9\tgIN%'_cJtXO^[ARFcWO+t!%phP.=(2Tdl?_g1_;PHnn2t0:"R(&puh3^0RP]6rh`todr>.b.7:t(oKVapGtP(9$og=S<`-':a>L.^fG2MMKs-MdeH]V7?2:H970%LP"g;BZBW@'l4@R^iWu:'sbc/6-m,YK;Sg(FQL]KikQ\je#kYa#U\BR1+kN0cRTKaP_CA%R**^,66+-PpSs59mb;$DfE3d9q?';R%mg;AX3jpPY<sP5k.5lsT@6_rojo[Nd,.?$KqMqOSGZTh%(37*fIh@WI#^rSD@f:TXQ!NradkgB^V,^aJng*Lh]5aA0E^c6Z%r,;`%$gUW8[(]lT[U,"EQD_p+\Kp="78@i^%$=gt_(b-,>&<Es%2A*ekH:MI1p0-<ZRJ;$`e0UonNcU3fgGYaTj?]V@*']XD3XtTi"-;q%"eZEVfRYc^72O+bdnnL#KD]"Il6S]HY$g]&6:#r\#POi#Cr4:*f=!a^%"$OQ1#/[<kn3Ni`((l7)@\3q[ioo=lqCYQrbYS^YDjJ4%M[&ZpL>c7^E)F0WMREcc6;V$U+7.FX9j8l\`,f5E44TKOUrH?hqqfXVFDg/9#?.ugSPl'DcrEJ*Dfm8N_ISn<9\2NBcuSXI`WK\O%FS8&Jh2H)og=PehR&G8k/'d(J9D0aIUt=3hRR"3@jFg>OLhfiUPk7@KTubVkiKccV[lJp@,QBOZ"9ph(+^F/CHSt$a%AekVJU`/:%CD!g3"o&QmcaT8VkhH*87uhWrI=T$U\Z0fAMA=Fq]>I&F^kR*DYhE%"KRd#Cf\rR?(#c(umJX[)iR=S.I3Zd1\+1<ILE6HB$b>3R%Kg$p<N8[DJW][boV$kHLqkU7=I1HAr]C(FjLrsr9IV$unUmCspnZr$c8WPo_01q3!8ID`c8L\L#K1'm/+6^ud&/%/J,8rA*#*Q^4%WZB(_0iaPhU'-M7J0<sZkjTHj-.Y&]]BW8>,gR;&Lq'[ZJ-Hu@=Utf&_P2]_X;XAD3,`:;W:*t'2MT<pB9TAmB5IkkSu'_(fdj"h%_Ys](k[t$r_F\/5]>chG,dW8d:cFA/<3fR]hU8O>!H&4IoB_sC2o,<_oGh-oOnD&mN,B[iB!#D.>0+qs9r:Qg-l+A]V1tTX"D$-M%i!MEdP3inO@RFIF4Os:FW,uSX=_1YE%73t`Po_)bGl+$t36u0HWoQ[*T4^W:o8qlPHQRFqJ<8R.r9i488IliH7iup*."(jY$@%f8%h^B47EnYm0JGL5U?Fq1Fdg<ECVmp7ZJSS,.m+3B=4VO3Q3!oJLaHXCAYL6F%gp'odM$"FiCPCYd6BG$_3`-aXVY>i\pH<UtO93>!%7bLVsG4>b=N*Sk_S8i.7=,N'Z=\I!-!+J.g(tt/6eR?$\CF[bqjL&Gr-nu4I2_"ILAAaHDZPGjB5%QC*I-E;f4%W'TP@k4o2if]i%EnMtrbG>d]L*NMY7>a)M5M/;uZdU/6!J(><At)e7"9GICfa@j[EcAN"jB2/\KidG[=fkg@V<#3Qh:,s<LR^iOh9_h#nJhD*SM[7*%r`%bb55[oPUpP.21Hp/2N2h3c<<HMsWEj\!<Hfm\:1Wt^UI>rFSk.AY+R:BEXOdpKKZguM2IG.hf-Uptm9*9%cTAu$l(+LCH;T48%:tBa^,1\0ZAU8]+qHbcN9&71Z-85<9bE"=*iU[WpEfY,Ah;oSAGK\9%\Ee=Pb4PObQ_&*Pn8\Hf3<]>;A,O:>HY[2<E;ni+qd!5E%D?-H<f73c34C,`Rhg$bq97=T(J%.pHRM-N\.Ch=bW`#oU+a4"n0YAq71frEsG^+tS:Q'KfOf.&g.i;9$orcj;iR:s"<eh^de/aLj%\<_'VOFTQ_FdD;X0NToB+@k6M_M.XQICUu260p44:q[Tb;O^H!.0nn<_o/<mcEC3p":9C."#A]L!M"Vt$+aU`:QS6apC,M>?dtT%%f.b>_do_"8V.aV-]7!iN=g$sArYEP%\qa@kbUL`[o((ue#'>!/RF"=F_VY/mIDhYqqXg`Uhe@Ja1MY-js0pp&HaNiF"f6KBrOVQh%k)pbm!Fp0)mEJK:ik=?,..n8j*.#Zb.OM?,MS<O.e4A[Zo-%6cY9o6t],32k,j+%)!kpKul]E&Hi$g)re[56'\r8ji7^(*FBsB&j%G8bP4mX#(uAY,`ugnrgcmO@lLa8'j*0g;hnqJ9P<c4kIC"0-N*U[L/bmQ=f0oc=?3h8d1A*/<W8*8gVE&qn`c^\][ID".HX8XQoG%9E@TErBMYPEuH2Z*W#s1ho'PY&:&MHg&"33a*/fp23P'h=9:_K]DDO=0Q]0fbd[9"?[CCQ$U]BeQbE<'Ut@.A@*L@QRlc`07Lj#0%6AOoCk+1mtO0QR_r-/2(hu;H(s7/DQrl8Aps//*\qWInTos]I[^]3HJhuEDZJ,d,&J,/bus61'/q_qm^p-8K:cbKM?J,2e8qsXQW%hu/?1r9Jk.h/@f?Dh%`G5Q9VcJ,]2Wrd6Bqmm#U+I/VfLpW($r?17OBhu:5Prr+Rcs7Hp&lTbFGO+70%O+3;Lrls@!?iTbr5Q(+[%p?..erV`Afq2bRNreLO@^Z+KHJ+rF3o]Mj]ro('\lJ%s1r5[^n=alS6'u//Z4G1:bj6PV%rU546_tf5JrUDPUqt!%n[F\crkjN%E%ECp"Bf>s`ermuYtrBL>2r5aBPi+.8Yf>%8+s7E3"&,F,8If/+'n*g;@GQ5h??iQj]8H5Ebo=sjer\\btcU*s$`)o4<hS9$Fn,Ljd%elCG#`QTk0s'*\)s0*#'&GE<`p-8QU+91o(rtY##0,o8OqL:I_n,MtET7?h8:S7ZfU@8,`Zif;,4d$BSL/(1aKLH5ejh8MPVC%`7%iZAu"OR\Bl6RtbjcsMW@\cmXiUhTa35k+<*+5i8*:I;J)^d&ed3ij!0dRb)0"4Mq]NJ9BBfU[oHPEYp/KJ4)9`Z3(OEju5H>uEcW%8ot2OX>42e?/?+;F_TY18q=N%e<m!-THd2@cjtRDlc\=2j#=Nk/&U.PK7XCqZEW(U!7B#OjZ6hG5%-@Fha7`oQd2DtOmfe6"hQ!"%94+]1qR$;]s2\DCY0]na^*qI<4?t*$:m\P*1r?=T(7hY!l0m1NFD6e\8OKfj8]kPRo"A95Ms&M+Gbg0?%a=pdO!Ko=%iV\s^I3,J%Hg"I4Ip8`KQRn2U<UibKXI"MF*!q.1WB,dYIVKFa.XgMV-[856Z/=phLRP^SrM^W""NoeZp$FH];Xd3!5)#/a%q[8r-M5%@USH>8%6m[C9Y"7PgGmr+IM3rFGON\12^P;%e)/:5+>F.08\DEZ:PtP!ffLqEEmZ*Mt)QcoP`c&OIM','-Y>p(P+;R;0Ge^VS+N08Y'mFf6%C6WO!I8G.0RE40sGi?g]\7D0@l$hX52i]QGSN6D7=<_5l0PU-2Ue9=LLbCRE*4r)K>U`htK-=kh"UZ42p``j4ZJ.2477eCNl[i\l%4dqCd$5hN<?2DVl]cj)c&g1]kqbmgCClP`NJ<0qJG8$=h^8J_kB"E-qigb-J]D5%f@J_*KNgOd7o6&6X-#Rmb8#m!104Bbs[BAFn%fNnaACs^O>mp'E'UKWS(HF`O"m1b00$+@dm)G#F2P\XDO(P@q^`?k2/\rcG8=TgV:Md2GDbj&U5d[]J9\9+'#d^SP*DT;faP0(s\%a,\5/g5+B].;T<Uk/W:]DRWsc!b%Tam#&qT\k"1hF?::N4l)90g)4ej]C4+^&X_ZR';SHj3lmP>8T+hq$i7AT/kNNI"fXs@?E]-r%]"jT1cmoecU#'k?&5muKT#g9?P2]<qJ%2"%oY7a]qMWtQ4>+JC3g(F1FA#m6L1&LIWL%-L-i1^P\g5Q5K[WZ3?ZID%d!Nd/6jOok%1"a?R"V^c7isE:Yfq)H+I)roK$WU_e\kP"kV97s[+5tC\f%d9%kSn/d%?r474b>T(1-PJ[f_E/'oN_>qkc48RC*ss'.lL5C_udog%ej;Oal<sjkl:EqAYOb`8"W&dX`tc@QVBEXWB`"Pl5_%gM4AFDi6W*?D(jf6h7Wk*N.I1#g_tV.p)=j1+N/'p\j1-hVNmnYGEW'%I%<tT2F<Qf*cnTZ'rl_RD@X:7=:U0$t4p,pj,E[*XBP@/MPoT?[\qR@r5)/X-iP#&W\IW*i'Arh1_Q'l3Q&UCCh&3tCWUZ.E#m/hL'%?</Z_DWZO;G=3m%>ZTPA8JW$"cF/l<=Lp*4nc.-^D6&fS5kGHH+6LP(QO2KZ[%t`JZ[mWM+XE/Y0K?rsi(NQW'(YeE3N=Q/O6rk<%SF)6G<%?F(nmSOT6gEbf8"4@eCQ[+kF=g2g`[,5bhG&1[1q[ZH.]=W+4a7O3I!5DDK0u_9;1Y9^/?,\l\Iu.d>@L&\rJpqW:9%Q!%PRZIMX=O,_m(bs\+uleoZ*BqCOQtJW$MOBG:`H=/S7na8,,(@Y=N"UV2A$TiNK+*5Po\6mkXG2#)O7u<Y%9$'G:8BbPdG4FaYhaP%(O1:t=2Ob=V%!p3C<M\(V$jrU\MNIC/]'Qt!lZcbaf<(,aW=T('#US.>K<*j\Ysm!Gs0+&*H5aTd!n-'K=1$)bs4hF'"1l7X:k0Y%hc*l%6#!-YA<?n0Pu:?;o'"rVDG'9fBcB3h#K9Hj.gXK]X2@\7Z=p$%A8pIM*VZiXmd&5_Qg&0Y=EXOmnIq]Ye0^>CA$8?^1E=K4%lm\*Crc*;rF=`#3M65lTYZh7"mM">A9d.e4_)J.S-rua@PI&WSX+s6mDD1J?2Y=%i#UWp&6Rq!OTNtPifg=M7f?1G]*HOO9F(E9p%%PcP'fVHe"\XD?0-<I<X6k)QM7+VsF.p$$HaL6Xd(//_3UB?UlV!M#LYtQWORB1uB78!4=['DEHgT6N=P'&3n<`$0/()9JBdRmnb%k^X5aKYAsJ\8>>TNR_"F>Bq0#-lFol^`uoRIKu?QfjU"'H5K%M-&!_YTdjd4lf&'qL9stFJilH>)4W_h_&J7Z$i<RtVlMW1D?.aE%h5'D9JiKKlbX*&O0$HsdWq8H2aTP5HS=*D4Yt4tnoj9;RM9TUr=h<%aY`rnIDQpokW^X.FE[%l>=S.g.^**7gKtIW;U;eWk:g@cL%#u,O`M5FTg"(([o&Zncni\,%;Wtm<l1:#i2B.D$N7[q@obGI`<03WX7\6$:E//@ks6c.?9G#oi,18u1X7g7Gn\oqj191jrETK1IG%T[Zqp%6/QQAJ\fA3,L0%+8cb]8(GMGFj!K1Sd6d%P/#qX*C?q:mo!sB$cS\>_h&?*m:CAgdGUK]Jl0Mdl8EIiVpNIY^PtFY.YUTd%=]o^@OWp:M<FLNTdV4LV7F2)ASE)Dl->ReN@E*HB^Ple>2*W8ks12(&]8ue;o\4U77eIH\]J_eh9u%&!+]<YN7ODZ[CJNS'O\Ms;%g8<cA9ppYK);e6i(p^*!7)k$P8B7l&DS+&'`1D(qOquqDY6-Z@CE3j1OY!CP\Zj[J%Nilo%DmgV"%sD@eh#k-,K#<S2G&;WVM8[?%#mMGJ,#<$b]]O9ic_n@`dGM>;s2^S#F*B5.3609h&#5`!l?srmTe]!k_ko`k:S&u5DCoH59Qh/(2/kTK]a>qX<;_r)&jtKi%^#G!%mH:.(p`"DZ#O1nFrB)&7O?F&A%9(>)JOrLq%>sImFAD1.DW5J#2SD"`@fcHbAX(#V;c/>1Bi7NHs2hLB+W.oc)P%Ieat'@ERn>(m%$d$#5*tLJ`,4#abSi*3[;J`LD_,0Wem4)40/0i[+.Rk&(e7Mo>Ca=7LZ8jpQ,(VPE/c`/<-8r>=9^,U8_reC#6a:O\=IC,a0TP(;%g/S*FD%r.1:ad%1"3)jt[r9W5)FeChP15#IO@t8eE"ceU+taJH=Xnk<E/DadS2aZa,pIW`>]'tZYY&mMi=DPfJ37+b$mj8tfS<XL%^-bq9NiSg*kb^dpKJKjE:,C24F&&b&)RsX:+Y4Eab//3*/-\%b/4cb(BTL)6:duGSSWMqs74c<]_\cdL:X]$\I,>@9bY`(rKd0ZP%_%h?(;+?o)$KHo=T0O*46A:m+VLYut@djd[AmoW:+EaZ`pPN-f7oWku<!CLn1^F4+87\HcHEe&[fcfASSsT^]^ek^GOa%5]h9>I=%i=mP?X\*\);^+7m#.J4f?*/A0(.:a9mjiU8WeP'r8R[k6p6Demig?75LkJV,c]/_0bU<hEf?ng_@ON@C12$"\U#6%ak<5l@=P#ZH%%#giTOM+EK-TIZ-h-lEmVK^>!?C_us_9f4%#pa[,]MrM,":VVM]ShmcI/'E:5REs2>YXTT`_D!%c%SjlKQYM)"ALS!;=#iG&s<-g%Tep5?#uP2J#acIepk=LaR,,nfmO"=46=?EohIjK0fOm<QaW_dn$j`3bGG2eZ8@JhD\s*2<NA3Gg,d0f:?@(6WLF.Mq*3fY^.*N7G%%Cm>nGV4D%0\`8TSI&W"f"$mA#[O=%]C)k8p9<rE=P,U!J"E%,!-cY>6(+i<,1GnH8UY=Z1n\`*pl3<iG5#,2fA650^dk&9_%qQV%0eKJe*8&;5aFbY[Na5L=bd-uW^hI%-^5O017f4k,4!gKg4&Xf;J>SG;d^*gKZb[RjO(4ro/WAhV"NZm79:2&.N*9YkCI*&Y)%QL\%@U>*:o@B1WDhi&Ws2ipMY)rrV&8t\*0l;#OG9S=irnB1T&+uiQK_SWGVSD_2r._$4]Q26i@2TjS1#$o3htMnZS7e^R%&CX%UIcSU%J-43XT`$2u*a]HQh1W:Vkc.j.M_6==j2V])pO>F,o_eB@CL)tEh8dFXL[XhQT:UMH49'MM3LpX=2a<lu?[dGas7pVZ3ILgHro\;a%5<[u^b?t3tNh9Z2?bS_=>`N1jGlALM^I9fj\bYm8GDH2!!3#`e~>%AI9_PrivateDataEnd